{
  "openapi": "3.0.1",
  "info": {
    "title": "Mailchimp Marketing API",
    "contact": {
      "name": "Mailchimp API Support",
      "email": "apihelp@mailchimp.com"
    },
    "version": "3.0.55",
    "x-permalink": "https://github.com/mailchimp/mailchimp-client-lib-codegen/blob/main/spec/marketing.json"
  },
  "externalDocs": {
    "description": "Learn more with the full Mailchimp API documentation.",
    "url": "https://mailchimp.com/developer/marketing/"
  },
  "servers": [
    {
      "url": "https://server.api.mailchimp.com/3.0"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/campaigns": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "List campaigns",
        "description": "Get all campaigns in an account.",
        "operationId": "getCampaigns",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records to return. Default value is 10. Maximum value is 1000",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "default": 10,
              "x-title": "Count"
            },
            "x-title": "Count"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.",
            "schema": {
              "type": "integer",
              "default": 0,
              "x-title": "Offset"
            },
            "x-title": "Offset"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The campaign type.",
            "schema": {
              "type": "string",
              "enum": [
                "regular",
                "plaintext",
                "absplit",
                "rss",
                "variate"
              ],
              "x-title": "Campaign Type"
            },
            "x-title": "Campaign Type"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the campaign.",
            "schema": {
              "type": "string",
              "enum": [
                "save",
                "paused",
                "schedule",
                "sending",
                "sent"
              ],
              "x-title": "Status"
            },
            "x-title": "Status"
          },
          {
            "name": "before_send_time",
            "in": "query",
            "description": "Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-title": "Before Send Time"
            },
            "x-title": "Before Send Time"
          },
          {
            "name": "since_send_time",
            "in": "query",
            "description": "Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-title": "Since Send Time"
            },
            "x-title": "Since Send Time"
          },
          {
            "name": "before_create_time",
            "in": "query",
            "description": "Restrict the response to campaigns created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-title": "Before Create Time"
            },
            "x-title": "Before Create Time"
          },
          {
            "name": "since_create_time",
            "in": "query",
            "description": "Restrict the response to campaigns created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-title": "Since Create Time"
            },
            "x-title": "Since Create Time"
          },
          {
            "name": "list_id",
            "in": "query",
            "description": "The unique id for the list.",
            "schema": {
              "type": "string",
              "x-title": "List ID"
            },
            "x-title": "List ID"
          },
          {
            "name": "folder_id",
            "in": "query",
            "description": "The unique folder id.",
            "schema": {
              "type": "string",
              "x-title": "Folder ID"
            },
            "x-title": "Folder ID"
          },
          {
            "name": "member_id",
            "in": "query",
            "description": "Retrieve campaigns sent to a particular list member. Member ID is The MD5 hash of the lowercase version of the list memberâ€™s email address.",
            "schema": {
              "type": "string",
              "x-title": "Member ID"
            },
            "x-title": "Member ID"
          },
          {
            "name": "sort_field",
            "in": "query",
            "description": "Returns files sorted by the specified field.",
            "schema": {
              "type": "string",
              "enum": [
                "create_time",
                "send_time"
              ],
              "x-title": "Sort By Field"
            },
            "x-title": "Sort By Field"
          },
          {
            "name": "sort_dir",
            "in": "query",
            "description": "Determines the order direction for sorted results.",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "x-title": "Sort Direction"
            },
            "x-title": "Sort Direction"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaigns": {
                      "title": "Campaigns",
                      "type": "array",
                      "description": "An array of campaigns.",
                      "items": {
                        "title": "Campaign",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Campaign ID",
                            "type": "string",
                            "description": "A string that uniquely identifies this campaign.",
                            "readOnly": true
                          },
                          "web_id": {
                            "title": "Campaign Web ID",
                            "type": "integer",
                            "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                            "readOnly": true
                          },
                          "parent_campaign_id": {
                            "title": "Parent Campaign ID",
                            "type": "string",
                            "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                            "readOnly": true
                          },
                          "type": {
                            "title": "Campaign Type",
                            "type": "string",
                            "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                            "enum": [
                              "regular",
                              "plaintext",
                              "absplit",
                              "rss",
                              "variate"
                            ]
                          },
                          "create_time": {
                            "title": "Create Time",
                            "type": "string",
                            "description": "The date and time the campaign was created in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "archive_url": {
                            "title": "Archive URL",
                            "type": "string",
                            "description": "The link to the campaign's archive version in ISO 8601 format.",
                            "readOnly": true
                          },
                          "long_archive_url": {
                            "title": "Long Archive URL",
                            "type": "string",
                            "description": "The original link to the campaign's archive version.",
                            "readOnly": true
                          },
                          "status": {
                            "title": "Campaign Status",
                            "type": "string",
                            "description": "The current status of the campaign.",
                            "readOnly": true,
                            "enum": [
                              "save",
                              "paused",
                              "schedule",
                              "sending",
                              "sent",
                              "canceled",
                              "canceling",
                              "archived"
                            ]
                          },
                          "emails_sent": {
                            "title": "Emails Sent",
                            "type": "integer",
                            "description": "The total number of emails sent for this campaign.",
                            "readOnly": true
                          },
                          "send_time": {
                            "title": "Send Time",
                            "type": "string",
                            "description": "The date and time a campaign was sent.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "content_type": {
                            "title": "Content Type",
                            "type": "string",
                            "description": "How the campaign's content is put together.",
                            "enum": [
                              "template",
                              "html",
                              "url",
                              "multichannel"
                            ]
                          },
                          "needs_block_refresh": {
                            "title": "Needs Block Refresh",
                            "type": "boolean",
                            "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                            "readOnly": true
                          },
                          "resendable": {
                            "title": "Resendable",
                            "type": "boolean",
                            "description": "Determines if the campaign qualifies to be resent to non-openers.",
                            "readOnly": true
                          },
                          "recipients": {
                            "title": "List",
                            "type": "object",
                            "properties": {
                              "list_id": {
                                "title": "List ID",
                                "type": "string",
                                "description": "The unique list id."
                              },
                              "list_is_active": {
                                "title": "List Status",
                                "type": "boolean",
                                "description": "The status of the list used, namely if it's deleted or disabled.",
                                "readOnly": true
                              },
                              "list_name": {
                                "title": "List Name",
                                "type": "string",
                                "description": "The name of the list.",
                                "readOnly": true
                              },
                              "segment_text": {
                                "title": "Segment Text",
                                "type": "string",
                                "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                                "readOnly": true
                              },
                              "recipient_count": {
                                "title": "Recipient Count",
                                "type": "integer",
                                "description": "Count of the recipients on the associated list. Formatted as an integer.",
                                "readOnly": true
                              },
                              "segment_opts": {
                                "title": "Segment Options",
                                "type": "object",
                                "properties": {
                                  "saved_segment_id": {
                                    "title": "Saved Segment ID",
                                    "type": "integer",
                                    "description": "The id for an existing saved segment."
                                  },
                                  "prebuilt_segment_id": {
                                    "title": "Prebuilt Segment Id",
                                    "type": "string",
                                    "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                                    "example": "subscribers-female"
                                  },
                                  "match": {
                                    "title": "Match Type",
                                    "type": "string",
                                    "description": "Segment match type.",
                                    "enum": [
                                      "any",
                                      "all"
                                    ]
                                  },
                                  "conditions": {
                                    "title": "Segment Type",
                                    "type": "array",
                                    "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                                    "items": {
                                      "type": "object",
                                      "x-oneOf": [
                                        {
                                          "type": "object",
                                          "title": "Aim Segment",
                                          "description": "Segment by interaction with a specific campaign.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Aim",
                                              "enum": [
                                                "Aim"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "aim"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with a specific campaign.",
                                              "example": "aim"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "open",
                                                "click",
                                                "sent",
                                                "noopen",
                                                "noclick",
                                                "nosent"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                              "example": "open"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                              "example": "any"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Automation Segment",
                                          "description": "Segment by interaction with an Automation workflow.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Automation",
                                              "enum": [
                                                "Automation"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "automation"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with an Automation workflow.",
                                              "example": "automation"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "started",
                                                "completed",
                                                "not_started",
                                                "not_completed"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                              "example": "started"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The web id for the automation workflow to segment against.",
                                              "example": "2135217"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Poll Activity Segment",
                                          "description": "Segment by poll activity.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "CampaignPoll",
                                              "enum": [
                                                "CampaignPoll"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "poll"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by poll activity.",
                                              "example": "poll"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                              "example": "member"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The id for the poll.",
                                              "example": 409
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Conversation Segment",
                                          "description": "Segment by interaction with a campaign via Conversations.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Conversation",
                                              "enum": [
                                                "Conversation"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "conversation"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with a campaign via Conversations.",
                                              "example": "conversation"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                              "example": "member"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                              "example": "any"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Date Segment",
                                          "description": "Segment by a specific date field.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Date",
                                              "enum": [
                                                "Date"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "timestamp_opt",
                                                "info_changed",
                                                "ecomm_date"
                                              ],
                                              "title": "Segment Field",
                                              "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                              "example": "timestamp_opt"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "greater",
                                                "less",
                                                "is",
                                                "not",
                                                "blank",
                                                "blank_not",
                                                "within",
                                                "notwithin"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                              "example": "date"
                                            },
                                            "extra": {
                                              "type": "string",
                                              "title": "Segment Extra Value",
                                              "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                              "example": "2015-01-30T00:00:00.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Email Client Segment",
                                          "description": "Segment by use of a particular email client.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EmailClient",
                                              "enum": [
                                                "EmailClient"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "email_client"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by use of a particular email client.",
                                              "example": "email_client"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "client_is",
                                                "client_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                              "example": "client_is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The name of the email client.",
                                              "example": "Gmail"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Language Segment",
                                          "description": "Segment by language.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Language",
                                              "enum": [
                                                "Language"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "language"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting based off of a subscriber's language.",
                                              "example": "language"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's language is or is not set to a specific language.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "A two-letter language identifier.",
                                              "example": "en"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Member Rating Segment",
                                          "description": "Segment by member rating.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "MemberRating",
                                              "enum": [
                                                "MemberRating"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "rating"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by member rating.",
                                              "example": "rating"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The star rating number to segment against.",
                                              "example": 4
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Signup Source Segment",
                                          "description": "Segment by signup source.",
                                          "required": [
                                            "field",
                                            "condition_type",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "enum": [
                                                "SignupSource"
                                              ],
                                              "x-value": "SignupSource",
                                              "title": "Type"
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "source"
                                              ],
                                              "title": "Segment Field",
                                              "example": "source"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "source_is",
                                                "source_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's signup source was/was not a particular value.",
                                              "example": "source_is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The signup source.",
                                              "example": "List Import"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Survey Monkey Segment",
                                          "description": "Segment by interaction with a SurveyMonkey survey.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SurveyMonkey",
                                              "enum": [
                                                "SurveyMonkey"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "survey_monkey"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with a SurveyMonkey survey.",
                                              "example": "survey_monkey"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "started",
                                                "completed",
                                                "not_started",
                                                "not_completed"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                              "example": "started"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Survey ID",
                                              "description": "The unique ID of the survey monkey survey.",
                                              "example": "32179586"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "VIP Segment",
                                          "description": "Segment by VIP status.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "VIP",
                                              "enum": [
                                                "VIP"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "gmonkey"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by VIP status.",
                                              "example": "gmonkey"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member is or is not marked as VIP.",
                                              "example": "member"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Interests Segment",
                                          "description": "Segment by an interest group merge field.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Interests",
                                              "enum": [
                                                "Interests"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                              "example": "interests-123"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "interestcontains",
                                                "interestcontainsall",
                                                "interestnotcontains"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member is a part of one, all, or none of the groups.",
                                              "example": "interestcontains"
                                            },
                                            "value": {
                                              "type": "array",
                                              "title": "Segment Value",
                                              "description": "An array containing strings, each representing a group id.",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "44401",
                                                  "44405",
                                                  "44409"
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Category Segment",
                                          "description": "Segment by purchases in specific items or categories.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommCategory",
                                              "enum": [
                                                "EcommCategory"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_cat",
                                                "ecomm_prod"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by purchases in specific items or categories.",
                                              "example": "ecomm_cat"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "contains",
                                                "notcontain",
                                                "starts",
                                                "ends"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The ecommerce category/item information.",
                                              "example": "Product"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Number Segment",
                                          "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommNumber",
                                              "enum": [
                                                "EcommNumber"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_spent_avg",
                                                "ecomm_orders",
                                                "ecomm_prod_all",
                                                "ecomm_avg_ord"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                              "example": "ecomm_orders"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                              "example": 42
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Purchased Segment",
                                          "description": "Segment by whether someone has purchased anything.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommPurchased",
                                              "enum": [
                                                "EcommPurchased"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_purchased"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by whether someone has purchased anything.",
                                              "example": "ecomm_purchased"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                              "example": "member"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Spent Segment",
                                          "description": "Segment by amount spent on a single order or across all orders.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommSpent",
                                              "enum": [
                                                "EcommSpent"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_spent_one",
                                                "ecomm_spent_all"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by amount spent on a single order or across all orders.",
                                              "example": "ecomm_spent_one"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have spent 'more' or 'less' than then specified value.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The total amount a member spent.",
                                              "example": 42
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Purchased Store Segment",
                                          "description": "Segment by purchases from a specific store.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommStore",
                                              "enum": [
                                                "EcommStore"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_store"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by purchases from a specific store.",
                                              "example": "ecomm_store"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have or have not purchased from a specific store.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Operator",
                                              "description": "The store id to segment against.",
                                              "example": "289"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Goal Activity Segment",
                                          "description": "Segment by Goal activity.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "GoalActivity",
                                              "enum": [
                                                "GoalActivity"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "goal"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by Goal activity.",
                                              "example": "goal"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "goal_not",
                                                "contains",
                                                "goal_notcontain",
                                                "starts",
                                                "ends"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The URL to check Goal activity against."
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Goal Timestamp Segment",
                                          "description": "Segment by most recent interaction with a website.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "GoalTimestamp",
                                              "enum": [
                                                "GoalTimestamp"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "goal_last_visited"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by most recent interaction with a website.",
                                              "example": "goal_last_visited"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "greater",
                                                "less",
                                                "is"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The date to check Goal activity against.",
                                              "example": "2015-07-20T19:45:21.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Similar Subscribers Segment Member Segment",
                                          "description": "Segment by similar subscribers.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "FuzzySegment",
                                              "enum": [
                                                "FuzzySegment"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "fuzzy_segment"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by similar subscribers.",
                                              "example": "fuzzy_segment"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "fuzzy_is",
                                                "fuzzy_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                              "example": "fuzzy_is"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The id for the 'similar subscribers' segment.",
                                              "example": 48433
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Static Segment Member Segment",
                                          "description": "Segment by a given static segment.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "StaticSegment",
                                              "enum": [
                                                "StaticSegment"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "static_segment"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by a given static segment.",
                                              "example": "static_segment"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "static_is",
                                                "static_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/are not apart of a static segment.",
                                              "example": "static_is"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The id for the static segment.",
                                              "example": 48433
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Location-Based Segment",
                                          "description": "Segment by a specific country or US state.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoCountryState",
                                              "enum": [
                                                "IPGeoCountryState"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeocountry",
                                                "ipgeonotcountry",
                                                "ipgeostate",
                                                "ipgeonotstate"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are within a specific country or US state.",
                                              "example": "ipgeocountry"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The two-letter country code or US state abbreviation.",
                                              "example": "US"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Geolocation Segment",
                                          "description": "Segment by a specific geographic region.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value",
                                            "addr",
                                            "lat",
                                            "lng"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoIn",
                                              "enum": [
                                                "IPGeoIn"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeoin",
                                                "ipgeonotin"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are within a specific geographic region.",
                                              "example": "ipgeoin"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The radius of the target location.",
                                              "example": 42
                                            },
                                            "addr": {
                                              "type": "string",
                                              "title": "Segment Location Address",
                                              "description": "The address of the target location.",
                                              "example": "Atlanta, GA, USA"
                                            },
                                            "lat": {
                                              "type": "string",
                                              "title": "Segment Location Latitude",
                                              "description": "The latitude of the target location.",
                                              "example": "33.7489954"
                                            },
                                            "lng": {
                                              "type": "string",
                                              "title": "Segment Location Longitude",
                                              "description": "The longitude of the target location.",
                                              "example": -84.3879824
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "US Zip Code Segment",
                                          "description": "Segment by a specific US ZIP code.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value",
                                            "extra"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoInZip",
                                              "enum": [
                                                "IPGeoInZip"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeoinzip"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are within a specific US zip code.",
                                              "example": "ipgeoinzip"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The radius of the target location.",
                                              "example": 25
                                            },
                                            "extra": {
                                              "type": "integer",
                                              "title": "Extra Data",
                                              "description": "The zip code to segment against.",
                                              "example": 30318
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Unknown Location-Based Segment",
                                          "description": "Segment members whose location information is unknown.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoUnknown",
                                              "enum": [
                                                "IPGeoUnknown"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeounknown"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members for which location information is unknown.",
                                              "example": "ipgeounknown"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Zip Code Location-Based Segment",
                                          "description": "Segment by a specific US ZIP code.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoZip",
                                              "enum": [
                                                "IPGeoZip"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeoiszip",
                                                "ipgeonotzip"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are/are not within a specific US zip code.",
                                              "example": "ipgeonotzip"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The 5-digit zip code.",
                                              "example": 30318
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Age Segment",
                                          "description": "Segment by age ranges in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialAge",
                                              "enum": [
                                                "SocialAge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_age"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by age ranges in Social Profiles data.",
                                              "example": "social_age"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "18-24",
                                                "25-34",
                                                "35-54",
                                                "55+"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The age range to segment.",
                                              "example": "35-54"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Gender Segment",
                                          "description": "Segment by listed gender in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialGender",
                                              "enum": [
                                                "SocialGender"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_gender"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by listed gender in Social Profiles data.",
                                              "example": "social_gender"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "male",
                                                "female"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The Social Profiles gender to segment.",
                                              "example": "female"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Influence Segment",
                                          "description": "Segment by influence rating in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialInfluence",
                                              "enum": [
                                                "SocialInfluence"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_influence"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by influence rating in Social Profiles data.",
                                              "example": "social_influence"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The Social Profiles influence rating to segment.",
                                              "example": 2
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Social Network Segment",
                                          "description": "Segment by social network in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialNetworkMember",
                                              "enum": [
                                                "SocialNetworkMember"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_network"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by social network in Social Profiles data.",
                                              "example": "social_network"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not on a given social network.",
                                              "example": "member"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "twitter",
                                                "facebook",
                                                "linkedin",
                                                "flickr",
                                                "foursquare",
                                                "lastfm",
                                                "myspace",
                                                "quora",
                                                "vimeo",
                                                "yelp",
                                                "youtube"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The social network to segment against.",
                                              "example": "twitter"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Social Network Follow Segment",
                                          "description": "Segment by social network in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialNetworkFollow",
                                              "enum": [
                                                "SocialNetworkFollow"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_network"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by social network in Social Profiles data.",
                                              "example": "social_network"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "follow",
                                                "notfollow"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not following a linked account on a given social network.",
                                              "example": "follow"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "twitter_follow"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The social network to segment against.",
                                              "example": "twitter_follow"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Address Merge Field Segment",
                                          "description": "Segment by an address-type merge field.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "AddressMerge",
                                              "enum": [
                                                "AddressMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "An address-type merge field to segment.",
                                              "example": "MMERGE3"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "contains",
                                                "notcontain",
                                                "blank",
                                                "blank_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                              "example": "contains"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to segment a text merge field with.",
                                              "example": "Atlanta"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Address/Zip Merge Field Segment",
                                          "description": "Segment by an address-type merge field within a given distance.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value",
                                            "extra"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "ZipMerge",
                                              "enum": [
                                                "ZipMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "An address or zip-type merge field to segment.",
                                              "example": "MMERGE2"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "geoin"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                              "example": "geoin"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The distance from the city/zip.",
                                              "example": "25"
                                            },
                                            "extra": {
                                              "type": "string",
                                              "title": "Segment Extra",
                                              "description": "The city or the zip being used to segment against.",
                                              "example": "30318"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Birthday Merge Field Segment",
                                          "description": "Segment by a contact's birthday.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "BirthdayMerge",
                                              "enum": [
                                                "BirthdayMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A date merge field to segment.",
                                              "example": "MMERGE4"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "blank",
                                                "blank_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "A date to segment against (mm/dd).",
                                              "example": "01/30"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Date Merge Field Segment",
                                          "description": "Segment by a given date merge field.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "DateMerge",
                                              "enum": [
                                                "DateMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A date merge field to segment.",
                                              "example": "MMERGE5"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "less",
                                                "blank",
                                                "blank_not",
                                                "greater"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "A date to segment against.",
                                              "example": "01/30/2015"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Dropdown/Radio Merge Field Segment",
                                          "description": "An individual segment condition",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SelectMerge",
                                              "enum": [
                                                "SelectMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A merge field to segment.",
                                              "example": "MMERGE6"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "blank",
                                                "blank_not",
                                                "notcontain",
                                                "contains"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to segment a text merge field with.",
                                              "example": "Second Choice"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Text or Number Merge Field Segment",
                                          "description": "Segment by a given text or number merge field.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "TextMerge",
                                              "enum": [
                                                "TextMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A text or number merge field to segment.",
                                              "example": "MMERGE7"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "contains",
                                                "notcontain",
                                                "starts",
                                                "ends",
                                                "greater",
                                                "less",
                                                "blank",
                                                "blank_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                              "example": "contains"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to segment a text or number merge field with.",
                                              "example": "Freddie's Jokes"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Email Segment",
                                          "description": "Segment by email address.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EmailAddress",
                                              "enum": [
                                                "EmailAddress"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "merge0",
                                                "EMAIL"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting based off of a subscriber's email address.",
                                              "example": "EMAIL"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "contains",
                                                "notcontain",
                                                "starts",
                                                "ends",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to compare the email against.",
                                              "example": "urist.mcvankab@freddiesjokes.com"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Predicted Gender Segment",
                                          "description": "Segment by predicted gender.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "PredictedGender",
                                              "enum": [
                                                "PredictedGender"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "predicted_gender"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by predicted gender."
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "male",
                                                "female"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The predicted gender to segment.",
                                              "example": "female"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Predicted Age Segment",
                                          "description": "Segment by predicted age.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "PredictedAge",
                                              "enum": [
                                                "PredictedAge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "predicted_age_range"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by predicted age."
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "18-24",
                                                "25-34",
                                                "35-44",
                                                "45-54",
                                                "55-64",
                                                "65+"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The predicted age to segment.",
                                              "example": "female"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "New Subscribers Prebuilt Segment",
                                          "description": "Segment by when people subscribed.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "NewSubscribers",
                                              "enum": [
                                                "NewSubscribers"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "timestamp_opt"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by when people subscribed."
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "date_within"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whe the event took place, namely within a time frame."
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                            }
                                          }
                                        }
                                      ],
                                      "x-discriminator": {
                                        "type": "string",
                                        "propertyName": "condition_type"
                                      }
                                    }
                                  }
                                },
                                "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                              }
                            },
                            "description": "List settings for the campaign."
                          },
                          "settings": {
                            "title": "Campaign Settings",
                            "type": "object",
                            "properties": {
                              "subject_line": {
                                "title": "Campaign Subject Line",
                                "type": "string",
                                "description": "The subject line for the campaign."
                              },
                              "preview_text": {
                                "title": "Campaign Preview Text",
                                "type": "string",
                                "description": "The preview text for the campaign."
                              },
                              "title": {
                                "title": "Campaign Title",
                                "type": "string",
                                "description": "The title of the campaign."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "string",
                                "description": "The 'from' name on the campaign (not an email address)."
                              },
                              "reply_to": {
                                "title": "Reply To Address",
                                "type": "string",
                                "description": "The reply-to email address for the campaign."
                              },
                              "use_conversation": {
                                "title": "Conversation",
                                "type": "boolean",
                                "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                              },
                              "to_name": {
                                "title": "To Name",
                                "type": "string",
                                "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                              },
                              "folder_id": {
                                "title": "Folder ID",
                                "type": "string",
                                "description": "If the campaign is listed in a folder, the id for that folder."
                              },
                              "authenticate": {
                                "title": "Authentication",
                                "type": "boolean",
                                "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                              },
                              "auto_footer": {
                                "title": "Auto-Footer",
                                "type": "boolean",
                                "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                              },
                              "inline_css": {
                                "title": "Inline CSS",
                                "type": "boolean",
                                "description": "Automatically inline the CSS included with the campaign content."
                              },
                              "auto_tweet": {
                                "title": "Auto-Tweet",
                                "type": "boolean",
                                "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                              },
                              "auto_fb_post": {
                                "title": "Auto Post to Facebook",
                                "type": "array",
                                "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fb_comments": {
                                "title": "Facebook Comments",
                                "type": "boolean",
                                "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                              },
                              "timewarp": {
                                "title": "Timewarp Send",
                                "type": "boolean",
                                "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                                "readOnly": true
                              },
                              "template_id": {
                                "title": "Template ID",
                                "type": "integer",
                                "description": "The id for the template used in this campaign."
                              },
                              "drag_and_drop": {
                                "title": "Drag And Drop Campaign",
                                "type": "boolean",
                                "description": "Whether the campaign uses the drag-and-drop editor.",
                                "readOnly": true
                              }
                            },
                            "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                          },
                          "variate_settings": {
                            "title": "A/B Test Options",
                            "type": "object",
                            "properties": {
                              "winning_combination_id": {
                                "title": "Winning Combination ID",
                                "type": "string",
                                "description": "ID for the winning combination.",
                                "readOnly": true
                              },
                              "winning_campaign_id": {
                                "title": "Winning Campaign ID",
                                "type": "string",
                                "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                                "readOnly": true
                              },
                              "winner_criteria": {
                                "title": "Winning Criteria",
                                "type": "string",
                                "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                                "enum": [
                                  "opens",
                                  "clicks",
                                  "manual",
                                  "total_revenue"
                                ]
                              },
                              "wait_time": {
                                "title": "Wait Time",
                                "type": "integer",
                                "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                              },
                              "test_size": {
                                "title": "Test Size",
                                "type": "integer",
                                "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                              },
                              "subject_lines": {
                                "title": "Subject Lines",
                                "type": "array",
                                "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "send_times": {
                                "title": "Send Times",
                                "type": "array",
                                "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                                "items": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "from_names": {
                                "title": "From Names",
                                "type": "array",
                                "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "reply_to_addresses": {
                                "title": "Reply To Addresses",
                                "type": "array",
                                "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "contents": {
                                "title": "Content Descriptions",
                                "type": "array",
                                "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "combinations": {
                                "title": "Combinations",
                                "type": "array",
                                "description": "Combinations of possible variables used to build emails.",
                                "readOnly": true,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "ID",
                                      "type": "string",
                                      "description": "Unique ID for the combination."
                                    },
                                    "subject_line": {
                                      "title": "Subject Line",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.subject_lines` used."
                                    },
                                    "send_time": {
                                      "title": "Send Time",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.send_times` used."
                                    },
                                    "from_name": {
                                      "title": "From Name",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.from_names` used."
                                    },
                                    "reply_to": {
                                      "title": "Reply To",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.reply_to_addresses` used."
                                    },
                                    "content_description": {
                                      "title": "Content Description",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.contents` used."
                                    },
                                    "recipients": {
                                      "title": "Recipients",
                                      "type": "integer",
                                      "description": "The number of recipients for this combination."
                                    }
                                  }
                                }
                              }
                            },
                            "description": "The settings specific to A/B test campaigns."
                          },
                          "tracking": {
                            "title": "Campaign Tracking Options",
                            "type": "object",
                            "properties": {
                              "opens": {
                                "title": "Opens",
                                "type": "boolean",
                                "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "html_clicks": {
                                "title": "HTML Click Tracking",
                                "type": "boolean",
                                "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "text_clicks": {
                                "title": "Plain-Text Click Tracking",
                                "type": "boolean",
                                "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "goal_tracking": {
                                "title": "Mailchimp Goal Tracking",
                                "type": "boolean",
                                "description": "Deprecated"
                              },
                              "ecomm360": {
                                "title": "E-commerce Tracking",
                                "type": "boolean",
                                "description": "Whether to enable e-commerce tracking."
                              },
                              "google_analytics": {
                                "title": "Google Analytics Tracking",
                                "type": "string",
                                "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                              },
                              "clicktale": {
                                "title": "ClickTale Analytics Tracking",
                                "type": "string",
                                "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                              },
                              "salesforce": {
                                "title": "Salesforce CRM Tracking",
                                "type": "object",
                                "properties": {
                                  "campaign": {
                                    "title": "Salesforce Campaign",
                                    "type": "boolean",
                                    "description": "Create a campaign in a connected Salesforce account."
                                  },
                                  "notes": {
                                    "title": "Salesforce Note",
                                    "type": "boolean",
                                    "description": "Update contact notes for a campaign based on subscriber email addresses."
                                  }
                                },
                                "description": "Deprecated"
                              },
                              "capsule": {
                                "title": "Capsule CRM Tracking",
                                "type": "object",
                                "properties": {
                                  "notes": {
                                    "title": "Capsule Note",
                                    "type": "boolean",
                                    "description": "Update contact notes for a campaign based on subscriber email addresses."
                                  }
                                },
                                "description": "Deprecated"
                              }
                            },
                            "description": "The tracking options for a campaign."
                          },
                          "rss_opts": {
                            "title": "RSS Options",
                            "type": "object",
                            "properties": {
                              "feed_url": {
                                "title": "Feed URL",
                                "type": "string",
                                "description": "The URL for the RSS feed.",
                                "format": "uri"
                              },
                              "frequency": {
                                "title": "Frequency",
                                "type": "string",
                                "description": "The frequency of the RSS Campaign.",
                                "enum": [
                                  "daily",
                                  "weekly",
                                  "monthly"
                                ]
                              },
                              "schedule": {
                                "title": "Sending Schedule",
                                "type": "object",
                                "properties": {
                                  "hour": {
                                    "title": "Sending Hour",
                                    "maximum": 23,
                                    "minimum": 0,
                                    "type": "integer",
                                    "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                                  },
                                  "daily_send": {
                                    "title": "Daily Sending Days",
                                    "type": "object",
                                    "properties": {
                                      "sunday": {
                                        "title": "Sunday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Sundays."
                                      },
                                      "monday": {
                                        "title": "Monday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Mondays."
                                      },
                                      "tuesday": {
                                        "title": "tuesday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Tuesdays."
                                      },
                                      "wednesday": {
                                        "title": "Monday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Wednesdays."
                                      },
                                      "thursday": {
                                        "title": "Thursday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Thursdays."
                                      },
                                      "friday": {
                                        "title": "Friday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Fridays."
                                      },
                                      "saturday": {
                                        "title": "Saturday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Saturdays."
                                      }
                                    },
                                    "description": "The days of the week to send a daily RSS Campaign."
                                  },
                                  "weekly_send_day": {
                                    "title": "Weekly Sending Day",
                                    "type": "string",
                                    "description": "The day of the week to send a weekly RSS Campaign.",
                                    "enum": [
                                      "sunday",
                                      "monday",
                                      "tuesday",
                                      "wednesday",
                                      "thursday",
                                      "friday",
                                      "saturday"
                                    ]
                                  },
                                  "monthly_send_date": {
                                    "title": "Monthly Sending Day",
                                    "maximum": 31,
                                    "minimum": 0,
                                    "type": "number",
                                    "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                                  }
                                },
                                "description": "The schedule for sending the RSS Campaign."
                              },
                              "last_sent": {
                                "title": "Last Sent",
                                "type": "string",
                                "description": "The date the campaign was last sent.",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "constrain_rss_img": {
                                "title": "Constrain RSS Images",
                                "type": "boolean",
                                "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                              }
                            },
                            "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                          },
                          "ab_split_opts": {
                            "title": "A/B Testing Options",
                            "type": "object",
                            "properties": {
                              "split_test": {
                                "title": "Split Test",
                                "type": "string",
                                "description": "The type of AB split to run.",
                                "enum": [
                                  "subject",
                                  "from_name",
                                  "schedule"
                                ]
                              },
                              "pick_winner": {
                                "title": "Pick Winner",
                                "type": "string",
                                "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                                "enum": [
                                  "opens",
                                  "clicks",
                                  "manual"
                                ]
                              },
                              "wait_units": {
                                "title": "Wait Time",
                                "type": "string",
                                "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                                "enum": [
                                  "hours",
                                  "days"
                                ]
                              },
                              "wait_time": {
                                "title": "Wait Time",
                                "type": "integer",
                                "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                              },
                              "split_size": {
                                "title": "Split Size",
                                "maximum": 50,
                                "minimum": 1,
                                "type": "integer",
                                "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                              },
                              "from_name_a": {
                                "title": "From Name Group A",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the name for Group A."
                              },
                              "from_name_b": {
                                "title": "From Name Group B",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the name for Group B."
                              },
                              "reply_email_a": {
                                "title": "Reply Email Group A",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                              },
                              "reply_email_b": {
                                "title": "Reply Email Group B",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                              },
                              "subject_a": {
                                "title": "Subject Line Group A",
                                "type": "string",
                                "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                              },
                              "subject_b": {
                                "title": "Subject Line Group B",
                                "type": "string",
                                "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                              },
                              "send_time_a": {
                                "title": "Send Time Group A",
                                "type": "string",
                                "description": "The send time for Group A.",
                                "format": "date-time"
                              },
                              "send_time_b": {
                                "title": "Send Time Group B",
                                "type": "string",
                                "description": "The send time for Group B.",
                                "format": "date-time"
                              },
                              "send_time_winner": {
                                "title": "Send Time Winner",
                                "type": "string",
                                "description": "The send time for the winning version."
                              }
                            },
                            "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                            "readOnly": true
                          },
                          "social_card": {
                            "title": "Campaign Social Card",
                            "type": "object",
                            "properties": {
                              "image_url": {
                                "title": "Image URL",
                                "type": "string",
                                "description": "The url for the header image for the card."
                              },
                              "description": {
                                "title": "Campaign Description",
                                "type": "string",
                                "description": "A short summary of the campaign to display."
                              },
                              "title": {
                                "title": "Title",
                                "type": "string",
                                "description": "The title for the card. Typically the subject line of the campaign."
                              }
                            },
                            "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                          },
                          "report_summary": {
                            "title": "Campaign Report Summary",
                            "type": "object",
                            "properties": {
                              "opens": {
                                "title": "Automation Opens",
                                "type": "integer",
                                "description": "The total number of opens for a campaign.",
                                "readOnly": true
                              },
                              "unique_opens": {
                                "title": "Unique Opens",
                                "type": "integer",
                                "description": "The number of unique opens.",
                                "readOnly": true
                              },
                              "open_rate": {
                                "title": "Open Rate",
                                "type": "number",
                                "description": "The number of unique opens divided by the total number of successful deliveries.",
                                "readOnly": true
                              },
                              "clicks": {
                                "title": "Total Clicks",
                                "type": "integer",
                                "description": "The total number of clicks for an campaign.",
                                "readOnly": true
                              },
                              "subscriber_clicks": {
                                "title": "Unique Subscriber Clicks",
                                "type": "integer",
                                "description": "The number of unique clicks.",
                                "readOnly": true
                              },
                              "click_rate": {
                                "title": "Click Rate",
                                "type": "number",
                                "description": "The number of unique clicks divided by the total number of successful deliveries.",
                                "readOnly": true
                              },
                              "ecommerce": {
                                "title": "E-Commerce Report",
                                "type": "object",
                                "properties": {
                                  "total_orders": {
                                    "title": "Total Orders",
                                    "type": "integer",
                                    "description": "The total orders for a campaign.",
                                    "readOnly": true
                                  },
                                  "total_spent": {
                                    "title": "Total Spent",
                                    "type": "number",
                                    "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                                    "readOnly": true
                                  },
                                  "total_revenue": {
                                    "title": "Total Revenue",
                                    "type": "number",
                                    "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                                    "readOnly": true
                                  }
                                },
                                "description": "E-Commerce stats for a campaign."
                              }
                            },
                            "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                          },
                          "delivery_status": {
                            "title": "Campaign Delivery Status",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "title": "Delivery Status Enabled",
                                "type": "boolean",
                                "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                                "readOnly": true
                              },
                              "can_cancel": {
                                "title": "Campaign Cancelable",
                                "type": "boolean",
                                "description": "Whether a campaign send can be canceled.",
                                "readOnly": true
                              },
                              "status": {
                                "title": "Campaign Delivery Status",
                                "type": "string",
                                "description": "The current state of a campaign delivery.",
                                "readOnly": true,
                                "enum": [
                                  "delivering",
                                  "delivered",
                                  "canceling",
                                  "canceled"
                                ]
                              },
                              "emails_sent": {
                                "title": "Emails Sent",
                                "type": "integer",
                                "description": "The total number of emails confirmed sent for this campaign so far.",
                                "readOnly": true
                              },
                              "emails_canceled": {
                                "title": "Emails Canceled",
                                "type": "integer",
                                "description": "The total number of emails canceled for this campaign.",
                                "readOnly": true
                              }
                            },
                            "description": "Updates on campaigns in the process of sending."
                          },
                          "_links": {
                            "title": "Links",
                            "type": "array",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "readOnly": true,
                            "items": {
                              "title": "Resource Link",
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "title": "Rel",
                                  "type": "string",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "title": "Href",
                                  "type": "string",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "title": "Method",
                                  "type": "string",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "readOnly": true,
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ]
                                },
                                "targetSchema": {
                                  "title": "Target Schema",
                                  "type": "string",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "title": "Schema",
                                  "type": "string",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              },
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                            }
                          }
                        },
                        "description": "A summary of an individual campaign's settings and content."
                      }
                    },
                    "total_items": {
                      "title": "Item Count",
                      "type": "integer",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "An array of campaigns."
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaigns": {
                      "title": "Campaigns",
                      "type": "array",
                      "description": "An array of campaigns.",
                      "items": {
                        "title": "Campaign",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Campaign ID",
                            "type": "string",
                            "description": "A string that uniquely identifies this campaign.",
                            "readOnly": true
                          },
                          "web_id": {
                            "title": "Campaign Web ID",
                            "type": "integer",
                            "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                            "readOnly": true
                          },
                          "parent_campaign_id": {
                            "title": "Parent Campaign ID",
                            "type": "string",
                            "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                            "readOnly": true
                          },
                          "type": {
                            "title": "Campaign Type",
                            "type": "string",
                            "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                            "enum": [
                              "regular",
                              "plaintext",
                              "absplit",
                              "rss",
                              "variate"
                            ]
                          },
                          "create_time": {
                            "title": "Create Time",
                            "type": "string",
                            "description": "The date and time the campaign was created in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "archive_url": {
                            "title": "Archive URL",
                            "type": "string",
                            "description": "The link to the campaign's archive version in ISO 8601 format.",
                            "readOnly": true
                          },
                          "long_archive_url": {
                            "title": "Long Archive URL",
                            "type": "string",
                            "description": "The original link to the campaign's archive version.",
                            "readOnly": true
                          },
                          "status": {
                            "title": "Campaign Status",
                            "type": "string",
                            "description": "The current status of the campaign.",
                            "readOnly": true,
                            "enum": [
                              "save",
                              "paused",
                              "schedule",
                              "sending",
                              "sent",
                              "canceled",
                              "canceling",
                              "archived"
                            ]
                          },
                          "emails_sent": {
                            "title": "Emails Sent",
                            "type": "integer",
                            "description": "The total number of emails sent for this campaign.",
                            "readOnly": true
                          },
                          "send_time": {
                            "title": "Send Time",
                            "type": "string",
                            "description": "The date and time a campaign was sent.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "content_type": {
                            "title": "Content Type",
                            "type": "string",
                            "description": "How the campaign's content is put together.",
                            "enum": [
                              "template",
                              "html",
                              "url",
                              "multichannel"
                            ]
                          },
                          "needs_block_refresh": {
                            "title": "Needs Block Refresh",
                            "type": "boolean",
                            "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                            "readOnly": true
                          },
                          "resendable": {
                            "title": "Resendable",
                            "type": "boolean",
                            "description": "Determines if the campaign qualifies to be resent to non-openers.",
                            "readOnly": true
                          },
                          "recipients": {
                            "title": "List",
                            "type": "object",
                            "properties": {
                              "list_id": {
                                "title": "List ID",
                                "type": "string",
                                "description": "The unique list id."
                              },
                              "list_is_active": {
                                "title": "List Status",
                                "type": "boolean",
                                "description": "The status of the list used, namely if it's deleted or disabled.",
                                "readOnly": true
                              },
                              "list_name": {
                                "title": "List Name",
                                "type": "string",
                                "description": "The name of the list.",
                                "readOnly": true
                              },
                              "segment_text": {
                                "title": "Segment Text",
                                "type": "string",
                                "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                                "readOnly": true
                              },
                              "recipient_count": {
                                "title": "Recipient Count",
                                "type": "integer",
                                "description": "Count of the recipients on the associated list. Formatted as an integer.",
                                "readOnly": true
                              },
                              "segment_opts": {
                                "title": "Segment Options",
                                "type": "object",
                                "properties": {
                                  "saved_segment_id": {
                                    "title": "Saved Segment ID",
                                    "type": "integer",
                                    "description": "The id for an existing saved segment."
                                  },
                                  "prebuilt_segment_id": {
                                    "title": "Prebuilt Segment Id",
                                    "type": "string",
                                    "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                                    "example": "subscribers-female"
                                  },
                                  "match": {
                                    "title": "Match Type",
                                    "type": "string",
                                    "description": "Segment match type.",
                                    "enum": [
                                      "any",
                                      "all"
                                    ]
                                  },
                                  "conditions": {
                                    "title": "Segment Type",
                                    "type": "array",
                                    "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                                    "items": {
                                      "type": "object",
                                      "x-oneOf": [
                                        {
                                          "type": "object",
                                          "title": "Aim Segment",
                                          "description": "Segment by interaction with a specific campaign.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Aim",
                                              "enum": [
                                                "Aim"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "aim"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with a specific campaign.",
                                              "example": "aim"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "open",
                                                "click",
                                                "sent",
                                                "noopen",
                                                "noclick",
                                                "nosent"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                              "example": "open"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                              "example": "any"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Automation Segment",
                                          "description": "Segment by interaction with an Automation workflow.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Automation",
                                              "enum": [
                                                "Automation"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "automation"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with an Automation workflow.",
                                              "example": "automation"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "started",
                                                "completed",
                                                "not_started",
                                                "not_completed"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                              "example": "started"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The web id for the automation workflow to segment against.",
                                              "example": "2135217"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Poll Activity Segment",
                                          "description": "Segment by poll activity.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "CampaignPoll",
                                              "enum": [
                                                "CampaignPoll"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "poll"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by poll activity.",
                                              "example": "poll"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                              "example": "member"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The id for the poll.",
                                              "example": 409
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Conversation Segment",
                                          "description": "Segment by interaction with a campaign via Conversations.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Conversation",
                                              "enum": [
                                                "Conversation"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "conversation"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with a campaign via Conversations.",
                                              "example": "conversation"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                              "example": "member"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                              "example": "any"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Date Segment",
                                          "description": "Segment by a specific date field.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Date",
                                              "enum": [
                                                "Date"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "timestamp_opt",
                                                "info_changed",
                                                "ecomm_date"
                                              ],
                                              "title": "Segment Field",
                                              "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                              "example": "timestamp_opt"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "greater",
                                                "less",
                                                "is",
                                                "not",
                                                "blank",
                                                "blank_not",
                                                "within",
                                                "notwithin"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                              "example": "date"
                                            },
                                            "extra": {
                                              "type": "string",
                                              "title": "Segment Extra Value",
                                              "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                              "example": "2015-01-30T00:00:00.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Email Client Segment",
                                          "description": "Segment by use of a particular email client.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EmailClient",
                                              "enum": [
                                                "EmailClient"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "email_client"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by use of a particular email client.",
                                              "example": "email_client"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "client_is",
                                                "client_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                              "example": "client_is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The name of the email client.",
                                              "example": "Gmail"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Language Segment",
                                          "description": "Segment by language.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Language",
                                              "enum": [
                                                "Language"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "language"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting based off of a subscriber's language.",
                                              "example": "language"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's language is or is not set to a specific language.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "A two-letter language identifier.",
                                              "example": "en"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Member Rating Segment",
                                          "description": "Segment by member rating.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "MemberRating",
                                              "enum": [
                                                "MemberRating"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "rating"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by member rating.",
                                              "example": "rating"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The star rating number to segment against.",
                                              "example": 4
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Signup Source Segment",
                                          "description": "Segment by signup source.",
                                          "required": [
                                            "field",
                                            "condition_type",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "enum": [
                                                "SignupSource"
                                              ],
                                              "x-value": "SignupSource",
                                              "title": "Type"
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "source"
                                              ],
                                              "title": "Segment Field",
                                              "example": "source"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "source_is",
                                                "source_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's signup source was/was not a particular value.",
                                              "example": "source_is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The signup source.",
                                              "example": "List Import"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Survey Monkey Segment",
                                          "description": "Segment by interaction with a SurveyMonkey survey.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SurveyMonkey",
                                              "enum": [
                                                "SurveyMonkey"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "survey_monkey"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by interaction with a SurveyMonkey survey.",
                                              "example": "survey_monkey"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "started",
                                                "completed",
                                                "not_started",
                                                "not_completed"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                              "example": "started"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Survey ID",
                                              "description": "The unique ID of the survey monkey survey.",
                                              "example": "32179586"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "VIP Segment",
                                          "description": "Segment by VIP status.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "VIP",
                                              "enum": [
                                                "VIP"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "gmonkey"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by VIP status.",
                                              "example": "gmonkey"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member is or is not marked as VIP.",
                                              "example": "member"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Interests Segment",
                                          "description": "Segment by an interest group merge field.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "Interests",
                                              "enum": [
                                                "Interests"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                              "example": "interests-123"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "interestcontains",
                                                "interestcontainsall",
                                                "interestnotcontains"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member is a part of one, all, or none of the groups.",
                                              "example": "interestcontains"
                                            },
                                            "value": {
                                              "type": "array",
                                              "title": "Segment Value",
                                              "description": "An array containing strings, each representing a group id.",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "44401",
                                                  "44405",
                                                  "44409"
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Category Segment",
                                          "description": "Segment by purchases in specific items or categories.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommCategory",
                                              "enum": [
                                                "EcommCategory"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_cat",
                                                "ecomm_prod"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by purchases in specific items or categories.",
                                              "example": "ecomm_cat"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "contains",
                                                "notcontain",
                                                "starts",
                                                "ends"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The ecommerce category/item information.",
                                              "example": "Product"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Number Segment",
                                          "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommNumber",
                                              "enum": [
                                                "EcommNumber"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_spent_avg",
                                                "ecomm_orders",
                                                "ecomm_prod_all",
                                                "ecomm_avg_ord"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                              "example": "ecomm_orders"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                              "example": 42
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Purchased Segment",
                                          "description": "Segment by whether someone has purchased anything.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommPurchased",
                                              "enum": [
                                                "EcommPurchased"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_purchased"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by whether someone has purchased anything.",
                                              "example": "ecomm_purchased"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                              "example": "member"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Spent Segment",
                                          "description": "Segment by amount spent on a single order or across all orders.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommSpent",
                                              "enum": [
                                                "EcommSpent"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_spent_one",
                                                "ecomm_spent_all"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by amount spent on a single order or across all orders.",
                                              "example": "ecomm_spent_one"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have spent 'more' or 'less' than then specified value.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The total amount a member spent.",
                                              "example": 42
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Ecommerce Purchased Store Segment",
                                          "description": "Segment by purchases from a specific store.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EcommStore",
                                              "enum": [
                                                "EcommStore"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ecomm_store"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by purchases from a specific store.",
                                              "example": "ecomm_store"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have or have not purchased from a specific store.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Operator",
                                              "description": "The store id to segment against.",
                                              "example": "289"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Goal Activity Segment",
                                          "description": "Segment by Goal activity.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "GoalActivity",
                                              "enum": [
                                                "GoalActivity"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "goal"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by Goal activity.",
                                              "example": "goal"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "goal_not",
                                                "contains",
                                                "goal_notcontain",
                                                "starts",
                                                "ends"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The URL to check Goal activity against."
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Goal Timestamp Segment",
                                          "description": "Segment by most recent interaction with a website.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "GoalTimestamp",
                                              "enum": [
                                                "GoalTimestamp"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "goal_last_visited"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by most recent interaction with a website.",
                                              "example": "goal_last_visited"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "greater",
                                                "less",
                                                "is"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The date to check Goal activity against.",
                                              "example": "2015-07-20T19:45:21.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Similar Subscribers Segment Member Segment",
                                          "description": "Segment by similar subscribers.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "FuzzySegment",
                                              "enum": [
                                                "FuzzySegment"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "fuzzy_segment"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by similar subscribers.",
                                              "example": "fuzzy_segment"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "fuzzy_is",
                                                "fuzzy_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                              "example": "fuzzy_is"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The id for the 'similar subscribers' segment.",
                                              "example": 48433
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Static Segment Member Segment",
                                          "description": "Segment by a given static segment.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "StaticSegment",
                                              "enum": [
                                                "StaticSegment"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "static_segment"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by a given static segment.",
                                              "example": "static_segment"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "static_is",
                                                "static_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/are not apart of a static segment.",
                                              "example": "static_is"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The id for the static segment.",
                                              "example": 48433
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Location-Based Segment",
                                          "description": "Segment by a specific country or US state.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoCountryState",
                                              "enum": [
                                                "IPGeoCountryState"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeocountry",
                                                "ipgeonotcountry",
                                                "ipgeostate",
                                                "ipgeonotstate"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are within a specific country or US state.",
                                              "example": "ipgeocountry"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "The two-letter country code or US state abbreviation.",
                                              "example": "US"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Geolocation Segment",
                                          "description": "Segment by a specific geographic region.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value",
                                            "addr",
                                            "lat",
                                            "lng"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoIn",
                                              "enum": [
                                                "IPGeoIn"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeoin",
                                                "ipgeonotin"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are within a specific geographic region.",
                                              "example": "ipgeoin"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The radius of the target location.",
                                              "example": 42
                                            },
                                            "addr": {
                                              "type": "string",
                                              "title": "Segment Location Address",
                                              "description": "The address of the target location.",
                                              "example": "Atlanta, GA, USA"
                                            },
                                            "lat": {
                                              "type": "string",
                                              "title": "Segment Location Latitude",
                                              "description": "The latitude of the target location.",
                                              "example": "33.7489954"
                                            },
                                            "lng": {
                                              "type": "string",
                                              "title": "Segment Location Longitude",
                                              "description": "The longitude of the target location.",
                                              "example": -84.3879824
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "US Zip Code Segment",
                                          "description": "Segment by a specific US ZIP code.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value",
                                            "extra"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoInZip",
                                              "enum": [
                                                "IPGeoInZip"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeoinzip"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are within a specific US zip code.",
                                              "example": "ipgeoinzip"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The radius of the target location.",
                                              "example": 25
                                            },
                                            "extra": {
                                              "type": "integer",
                                              "title": "Extra Data",
                                              "description": "The zip code to segment against.",
                                              "example": 30318
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Unknown Location-Based Segment",
                                          "description": "Segment members whose location information is unknown.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoUnknown",
                                              "enum": [
                                                "IPGeoUnknown"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeounknown"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members for which location information is unknown.",
                                              "example": "ipgeounknown"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Zip Code Location-Based Segment",
                                          "description": "Segment by a specific US ZIP code.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "IPGeoZip",
                                              "enum": [
                                                "IPGeoZip"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeo"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting subscribers who are within a specific location.",
                                              "example": "ipgeo"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "ipgeoiszip",
                                                "ipgeonotzip"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Segment members who are/are not within a specific US zip code.",
                                              "example": "ipgeonotzip"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Segment Data",
                                              "description": "The 5-digit zip code.",
                                              "example": 30318
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Age Segment",
                                          "description": "Segment by age ranges in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialAge",
                                              "enum": [
                                                "SocialAge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_age"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by age ranges in Social Profiles data.",
                                              "example": "social_age"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "18-24",
                                                "25-34",
                                                "35-54",
                                                "55+"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The age range to segment.",
                                              "example": "35-54"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Gender Segment",
                                          "description": "Segment by listed gender in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialGender",
                                              "enum": [
                                                "SocialGender"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_gender"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by listed gender in Social Profiles data.",
                                              "example": "social_gender"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "male",
                                                "female"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The Social Profiles gender to segment.",
                                              "example": "female"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Influence Segment",
                                          "description": "Segment by influence rating in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialInfluence",
                                              "enum": [
                                                "SocialInfluence"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_influence"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by influence rating in Social Profiles data.",
                                              "example": "social_influence"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                              "example": "greater"
                                            },
                                            "value": {
                                              "type": "number",
                                              "title": "Segment Operator",
                                              "description": "The Social Profiles influence rating to segment.",
                                              "example": 2
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Social Network Segment",
                                          "description": "Segment by social network in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialNetworkMember",
                                              "enum": [
                                                "SocialNetworkMember"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_network"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by social network in Social Profiles data.",
                                              "example": "social_network"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "member",
                                                "notmember"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not on a given social network.",
                                              "example": "member"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "twitter",
                                                "facebook",
                                                "linkedin",
                                                "flickr",
                                                "foursquare",
                                                "lastfm",
                                                "myspace",
                                                "quora",
                                                "vimeo",
                                                "yelp",
                                                "youtube"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The social network to segment against.",
                                              "example": "twitter"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Social Profiles Social Network Follow Segment",
                                          "description": "Segment by social network in Social Profiles data.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SocialNetworkFollow",
                                              "enum": [
                                                "SocialNetworkFollow"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "social_network"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by social network in Social Profiles data.",
                                              "example": "social_network"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "follow",
                                                "notfollow"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not following a linked account on a given social network.",
                                              "example": "follow"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "twitter_follow"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The social network to segment against.",
                                              "example": "twitter_follow"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Address Merge Field Segment",
                                          "description": "Segment by an address-type merge field.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "AddressMerge",
                                              "enum": [
                                                "AddressMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "An address-type merge field to segment.",
                                              "example": "MMERGE3"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "contains",
                                                "notcontain",
                                                "blank",
                                                "blank_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                              "example": "contains"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to segment a text merge field with.",
                                              "example": "Atlanta"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Address/Zip Merge Field Segment",
                                          "description": "Segment by an address-type merge field within a given distance.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value",
                                            "extra"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "ZipMerge",
                                              "enum": [
                                                "ZipMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "An address or zip-type merge field to segment.",
                                              "example": "MMERGE2"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "geoin"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                              "example": "geoin"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The distance from the city/zip.",
                                              "example": "25"
                                            },
                                            "extra": {
                                              "type": "string",
                                              "title": "Segment Extra",
                                              "description": "The city or the zip being used to segment against.",
                                              "example": "30318"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Birthday Merge Field Segment",
                                          "description": "Segment by a contact's birthday.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "BirthdayMerge",
                                              "enum": [
                                                "BirthdayMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A date merge field to segment.",
                                              "example": "MMERGE4"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "blank",
                                                "blank_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "A date to segment against (mm/dd).",
                                              "example": "01/30"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Date Merge Field Segment",
                                          "description": "Segment by a given date merge field.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "DateMerge",
                                              "enum": [
                                                "DateMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A date merge field to segment.",
                                              "example": "MMERGE5"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "less",
                                                "blank",
                                                "blank_not",
                                                "greater"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "A date to segment against.",
                                              "example": "01/30/2015"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Dropdown/Radio Merge Field Segment",
                                          "description": "An individual segment condition",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "SelectMerge",
                                              "enum": [
                                                "SelectMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A merge field to segment.",
                                              "example": "MMERGE6"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "blank",
                                                "blank_not",
                                                "notcontain",
                                                "contains"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to segment a text merge field with.",
                                              "example": "Second Choice"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Text or Number Merge Field Segment",
                                          "description": "Segment by a given text or number merge field.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "TextMerge",
                                              "enum": [
                                                "TextMerge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "title": "Segment Field",
                                              "description": "A text or number merge field to segment.",
                                              "example": "MMERGE7"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "contains",
                                                "notcontain",
                                                "starts",
                                                "ends",
                                                "greater",
                                                "less",
                                                "blank",
                                                "blank_not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                              "example": "contains"
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to segment a text or number merge field with.",
                                              "example": "Freddie's Jokes"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Email Segment",
                                          "description": "Segment by email address.",
                                          "required": [
                                            "field",
                                            "op"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "EmailAddress",
                                              "enum": [
                                                "EmailAddress"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "merge0",
                                                "EMAIL"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segmenting based off of a subscriber's email address.",
                                              "example": "EMAIL"
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not",
                                                "contains",
                                                "notcontain",
                                                "starts",
                                                "ends",
                                                "greater",
                                                "less"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Value",
                                              "description": "The value to compare the email against.",
                                              "example": "urist.mcvankab@freddiesjokes.com"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Predicted Gender Segment",
                                          "description": "Segment by predicted gender.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "PredictedGender",
                                              "enum": [
                                                "PredictedGender"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "predicted_gender"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by predicted gender."
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is",
                                                "not"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "male",
                                                "female"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The predicted gender to segment.",
                                              "example": "female"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "Predicted Age Segment",
                                          "description": "Segment by predicted age.",
                                          "required": [
                                            "field",
                                            "op",
                                            "value"
                                          ],
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "PredictedAge",
                                              "enum": [
                                                "PredictedAge"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "predicted_age_range"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by predicted age."
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Members who are/not the exact criteria listed.",
                                              "example": "is"
                                            },
                                            "value": {
                                              "type": "string",
                                              "enum": [
                                                "18-24",
                                                "25-34",
                                                "35-44",
                                                "45-54",
                                                "55-64",
                                                "65+"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "The predicted age to segment.",
                                              "example": "female"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "New Subscribers Prebuilt Segment",
                                          "description": "Segment by when people subscribed.",
                                          "properties": {
                                            "condition_type": {
                                              "type": "string",
                                              "x-value": "NewSubscribers",
                                              "enum": [
                                                "NewSubscribers"
                                              ]
                                            },
                                            "field": {
                                              "type": "string",
                                              "enum": [
                                                "timestamp_opt"
                                              ],
                                              "title": "Segment Field",
                                              "description": "Segment by when people subscribed."
                                            },
                                            "op": {
                                              "type": "string",
                                              "enum": [
                                                "date_within"
                                              ],
                                              "title": "Segment Operator",
                                              "description": "Whe the event took place, namely within a time frame."
                                            },
                                            "value": {
                                              "type": "string",
                                              "title": "Segment Data",
                                              "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                            }
                                          }
                                        }
                                      ],
                                      "x-discriminator": {
                                        "type": "string",
                                        "propertyName": "condition_type"
                                      }
                                    }
                                  }
                                },
                                "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                              }
                            },
                            "description": "List settings for the campaign."
                          },
                          "settings": {
                            "title": "Campaign Settings",
                            "type": "object",
                            "properties": {
                              "subject_line": {
                                "title": "Campaign Subject Line",
                                "type": "string",
                                "description": "The subject line for the campaign."
                              },
                              "preview_text": {
                                "title": "Campaign Preview Text",
                                "type": "string",
                                "description": "The preview text for the campaign."
                              },
                              "title": {
                                "title": "Campaign Title",
                                "type": "string",
                                "description": "The title of the campaign."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "string",
                                "description": "The 'from' name on the campaign (not an email address)."
                              },
                              "reply_to": {
                                "title": "Reply To Address",
                                "type": "string",
                                "description": "The reply-to email address for the campaign."
                              },
                              "use_conversation": {
                                "title": "Conversation",
                                "type": "boolean",
                                "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                              },
                              "to_name": {
                                "title": "To Name",
                                "type": "string",
                                "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                              },
                              "folder_id": {
                                "title": "Folder ID",
                                "type": "string",
                                "description": "If the campaign is listed in a folder, the id for that folder."
                              },
                              "authenticate": {
                                "title": "Authentication",
                                "type": "boolean",
                                "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                              },
                              "auto_footer": {
                                "title": "Auto-Footer",
                                "type": "boolean",
                                "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                              },
                              "inline_css": {
                                "title": "Inline CSS",
                                "type": "boolean",
                                "description": "Automatically inline the CSS included with the campaign content."
                              },
                              "auto_tweet": {
                                "title": "Auto-Tweet",
                                "type": "boolean",
                                "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                              },
                              "auto_fb_post": {
                                "title": "Auto Post to Facebook",
                                "type": "array",
                                "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fb_comments": {
                                "title": "Facebook Comments",
                                "type": "boolean",
                                "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                              },
                              "timewarp": {
                                "title": "Timewarp Send",
                                "type": "boolean",
                                "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                                "readOnly": true
                              },
                              "template_id": {
                                "title": "Template ID",
                                "type": "integer",
                                "description": "The id for the template used in this campaign."
                              },
                              "drag_and_drop": {
                                "title": "Drag And Drop Campaign",
                                "type": "boolean",
                                "description": "Whether the campaign uses the drag-and-drop editor.",
                                "readOnly": true
                              }
                            },
                            "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                          },
                          "variate_settings": {
                            "title": "A/B Test Options",
                            "type": "object",
                            "properties": {
                              "winning_combination_id": {
                                "title": "Winning Combination ID",
                                "type": "string",
                                "description": "ID for the winning combination.",
                                "readOnly": true
                              },
                              "winning_campaign_id": {
                                "title": "Winning Campaign ID",
                                "type": "string",
                                "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                                "readOnly": true
                              },
                              "winner_criteria": {
                                "title": "Winning Criteria",
                                "type": "string",
                                "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                                "enum": [
                                  "opens",
                                  "clicks",
                                  "manual",
                                  "total_revenue"
                                ]
                              },
                              "wait_time": {
                                "title": "Wait Time",
                                "type": "integer",
                                "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                              },
                              "test_size": {
                                "title": "Test Size",
                                "type": "integer",
                                "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                              },
                              "subject_lines": {
                                "title": "Subject Lines",
                                "type": "array",
                                "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "send_times": {
                                "title": "Send Times",
                                "type": "array",
                                "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                                "items": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "from_names": {
                                "title": "From Names",
                                "type": "array",
                                "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "reply_to_addresses": {
                                "title": "Reply To Addresses",
                                "type": "array",
                                "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "contents": {
                                "title": "Content Descriptions",
                                "type": "array",
                                "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "combinations": {
                                "title": "Combinations",
                                "type": "array",
                                "description": "Combinations of possible variables used to build emails.",
                                "readOnly": true,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "ID",
                                      "type": "string",
                                      "description": "Unique ID for the combination."
                                    },
                                    "subject_line": {
                                      "title": "Subject Line",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.subject_lines` used."
                                    },
                                    "send_time": {
                                      "title": "Send Time",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.send_times` used."
                                    },
                                    "from_name": {
                                      "title": "From Name",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.from_names` used."
                                    },
                                    "reply_to": {
                                      "title": "Reply To",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.reply_to_addresses` used."
                                    },
                                    "content_description": {
                                      "title": "Content Description",
                                      "type": "integer",
                                      "description": "The index of `variate_settings.contents` used."
                                    },
                                    "recipients": {
                                      "title": "Recipients",
                                      "type": "integer",
                                      "description": "The number of recipients for this combination."
                                    }
                                  }
                                }
                              }
                            },
                            "description": "The settings specific to A/B test campaigns."
                          },
                          "tracking": {
                            "title": "Campaign Tracking Options",
                            "type": "object",
                            "properties": {
                              "opens": {
                                "title": "Opens",
                                "type": "boolean",
                                "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "html_clicks": {
                                "title": "HTML Click Tracking",
                                "type": "boolean",
                                "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "text_clicks": {
                                "title": "Plain-Text Click Tracking",
                                "type": "boolean",
                                "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "goal_tracking": {
                                "title": "Mailchimp Goal Tracking",
                                "type": "boolean",
                                "description": "Deprecated"
                              },
                              "ecomm360": {
                                "title": "E-commerce Tracking",
                                "type": "boolean",
                                "description": "Whether to enable e-commerce tracking."
                              },
                              "google_analytics": {
                                "title": "Google Analytics Tracking",
                                "type": "string",
                                "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                              },
                              "clicktale": {
                                "title": "ClickTale Analytics Tracking",
                                "type": "string",
                                "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                              },
                              "salesforce": {
                                "title": "Salesforce CRM Tracking",
                                "type": "object",
                                "properties": {
                                  "campaign": {
                                    "title": "Salesforce Campaign",
                                    "type": "boolean",
                                    "description": "Create a campaign in a connected Salesforce account."
                                  },
                                  "notes": {
                                    "title": "Salesforce Note",
                                    "type": "boolean",
                                    "description": "Update contact notes for a campaign based on subscriber email addresses."
                                  }
                                },
                                "description": "Deprecated"
                              },
                              "capsule": {
                                "title": "Capsule CRM Tracking",
                                "type": "object",
                                "properties": {
                                  "notes": {
                                    "title": "Capsule Note",
                                    "type": "boolean",
                                    "description": "Update contact notes for a campaign based on subscriber email addresses."
                                  }
                                },
                                "description": "Deprecated"
                              }
                            },
                            "description": "The tracking options for a campaign."
                          },
                          "rss_opts": {
                            "title": "RSS Options",
                            "type": "object",
                            "properties": {
                              "feed_url": {
                                "title": "Feed URL",
                                "type": "string",
                                "description": "The URL for the RSS feed.",
                                "format": "uri"
                              },
                              "frequency": {
                                "title": "Frequency",
                                "type": "string",
                                "description": "The frequency of the RSS Campaign.",
                                "enum": [
                                  "daily",
                                  "weekly",
                                  "monthly"
                                ]
                              },
                              "schedule": {
                                "title": "Sending Schedule",
                                "type": "object",
                                "properties": {
                                  "hour": {
                                    "title": "Sending Hour",
                                    "maximum": 23,
                                    "minimum": 0,
                                    "type": "integer",
                                    "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                                  },
                                  "daily_send": {
                                    "title": "Daily Sending Days",
                                    "type": "object",
                                    "properties": {
                                      "sunday": {
                                        "title": "Sunday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Sundays."
                                      },
                                      "monday": {
                                        "title": "Monday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Mondays."
                                      },
                                      "tuesday": {
                                        "title": "tuesday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Tuesdays."
                                      },
                                      "wednesday": {
                                        "title": "Monday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Wednesdays."
                                      },
                                      "thursday": {
                                        "title": "Thursday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Thursdays."
                                      },
                                      "friday": {
                                        "title": "Friday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Fridays."
                                      },
                                      "saturday": {
                                        "title": "Saturday",
                                        "type": "boolean",
                                        "description": "Sends the daily RSS Campaign on Saturdays."
                                      }
                                    },
                                    "description": "The days of the week to send a daily RSS Campaign."
                                  },
                                  "weekly_send_day": {
                                    "title": "Weekly Sending Day",
                                    "type": "string",
                                    "description": "The day of the week to send a weekly RSS Campaign.",
                                    "enum": [
                                      "sunday",
                                      "monday",
                                      "tuesday",
                                      "wednesday",
                                      "thursday",
                                      "friday",
                                      "saturday"
                                    ]
                                  },
                                  "monthly_send_date": {
                                    "title": "Monthly Sending Day",
                                    "maximum": 31,
                                    "minimum": 0,
                                    "type": "number",
                                    "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                                  }
                                },
                                "description": "The schedule for sending the RSS Campaign."
                              },
                              "last_sent": {
                                "title": "Last Sent",
                                "type": "string",
                                "description": "The date the campaign was last sent.",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "constrain_rss_img": {
                                "title": "Constrain RSS Images",
                                "type": "boolean",
                                "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                              }
                            },
                            "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                          },
                          "ab_split_opts": {
                            "title": "A/B Testing Options",
                            "type": "object",
                            "properties": {
                              "split_test": {
                                "title": "Split Test",
                                "type": "string",
                                "description": "The type of AB split to run.",
                                "enum": [
                                  "subject",
                                  "from_name",
                                  "schedule"
                                ]
                              },
                              "pick_winner": {
                                "title": "Pick Winner",
                                "type": "string",
                                "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                                "enum": [
                                  "opens",
                                  "clicks",
                                  "manual"
                                ]
                              },
                              "wait_units": {
                                "title": "Wait Time",
                                "type": "string",
                                "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                                "enum": [
                                  "hours",
                                  "days"
                                ]
                              },
                              "wait_time": {
                                "title": "Wait Time",
                                "type": "integer",
                                "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                              },
                              "split_size": {
                                "title": "Split Size",
                                "maximum": 50,
                                "minimum": 1,
                                "type": "integer",
                                "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                              },
                              "from_name_a": {
                                "title": "From Name Group A",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the name for Group A."
                              },
                              "from_name_b": {
                                "title": "From Name Group B",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the name for Group B."
                              },
                              "reply_email_a": {
                                "title": "Reply Email Group A",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                              },
                              "reply_email_b": {
                                "title": "Reply Email Group B",
                                "type": "string",
                                "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                              },
                              "subject_a": {
                                "title": "Subject Line Group A",
                                "type": "string",
                                "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                              },
                              "subject_b": {
                                "title": "Subject Line Group B",
                                "type": "string",
                                "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                              },
                              "send_time_a": {
                                "title": "Send Time Group A",
                                "type": "string",
                                "description": "The send time for Group A.",
                                "format": "date-time"
                              },
                              "send_time_b": {
                                "title": "Send Time Group B",
                                "type": "string",
                                "description": "The send time for Group B.",
                                "format": "date-time"
                              },
                              "send_time_winner": {
                                "title": "Send Time Winner",
                                "type": "string",
                                "description": "The send time for the winning version."
                              }
                            },
                            "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                            "readOnly": true
                          },
                          "social_card": {
                            "title": "Campaign Social Card",
                            "type": "object",
                            "properties": {
                              "image_url": {
                                "title": "Image URL",
                                "type": "string",
                                "description": "The url for the header image for the card."
                              },
                              "description": {
                                "title": "Campaign Description",
                                "type": "string",
                                "description": "A short summary of the campaign to display."
                              },
                              "title": {
                                "title": "Title",
                                "type": "string",
                                "description": "The title for the card. Typically the subject line of the campaign."
                              }
                            },
                            "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                          },
                          "report_summary": {
                            "title": "Campaign Report Summary",
                            "type": "object",
                            "properties": {
                              "opens": {
                                "title": "Automation Opens",
                                "type": "integer",
                                "description": "The total number of opens for a campaign.",
                                "readOnly": true
                              },
                              "unique_opens": {
                                "title": "Unique Opens",
                                "type": "integer",
                                "description": "The number of unique opens.",
                                "readOnly": true
                              },
                              "open_rate": {
                                "title": "Open Rate",
                                "type": "number",
                                "description": "The number of unique opens divided by the total number of successful deliveries.",
                                "readOnly": true
                              },
                              "clicks": {
                                "title": "Total Clicks",
                                "type": "integer",
                                "description": "The total number of clicks for an campaign.",
                                "readOnly": true
                              },
                              "subscriber_clicks": {
                                "title": "Unique Subscriber Clicks",
                                "type": "integer",
                                "description": "The number of unique clicks.",
                                "readOnly": true
                              },
                              "click_rate": {
                                "title": "Click Rate",
                                "type": "number",
                                "description": "The number of unique clicks divided by the total number of successful deliveries.",
                                "readOnly": true
                              },
                              "ecommerce": {
                                "title": "E-Commerce Report",
                                "type": "object",
                                "properties": {
                                  "total_orders": {
                                    "title": "Total Orders",
                                    "type": "integer",
                                    "description": "The total orders for a campaign.",
                                    "readOnly": true
                                  },
                                  "total_spent": {
                                    "title": "Total Spent",
                                    "type": "number",
                                    "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                                    "readOnly": true
                                  },
                                  "total_revenue": {
                                    "title": "Total Revenue",
                                    "type": "number",
                                    "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                                    "readOnly": true
                                  }
                                },
                                "description": "E-Commerce stats for a campaign."
                              }
                            },
                            "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                          },
                          "delivery_status": {
                            "title": "Campaign Delivery Status",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "title": "Delivery Status Enabled",
                                "type": "boolean",
                                "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                                "readOnly": true
                              },
                              "can_cancel": {
                                "title": "Campaign Cancelable",
                                "type": "boolean",
                                "description": "Whether a campaign send can be canceled.",
                                "readOnly": true
                              },
                              "status": {
                                "title": "Campaign Delivery Status",
                                "type": "string",
                                "description": "The current state of a campaign delivery.",
                                "readOnly": true,
                                "enum": [
                                  "delivering",
                                  "delivered",
                                  "canceling",
                                  "canceled"
                                ]
                              },
                              "emails_sent": {
                                "title": "Emails Sent",
                                "type": "integer",
                                "description": "The total number of emails confirmed sent for this campaign so far.",
                                "readOnly": true
                              },
                              "emails_canceled": {
                                "title": "Emails Canceled",
                                "type": "integer",
                                "description": "The total number of emails canceled for this campaign.",
                                "readOnly": true
                              }
                            },
                            "description": "Updates on campaigns in the process of sending."
                          },
                          "_links": {
                            "title": "Links",
                            "type": "array",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "readOnly": true,
                            "items": {
                              "title": "Resource Link",
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "title": "Rel",
                                  "type": "string",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "title": "Href",
                                  "type": "string",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "title": "Method",
                                  "type": "string",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "readOnly": true,
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ]
                                },
                                "targetSchema": {
                                  "title": "Target Schema",
                                  "type": "string",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "title": "Schema",
                                  "type": "string",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              },
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                            }
                          }
                        },
                        "description": "A summary of an individual campaign's settings and content."
                      }
                    },
                    "total_items": {
                      "title": "Item Count",
                      "type": "integer",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "An array of campaigns."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "list",
          "methodNameCamel": "list"
        }
      },
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Add campaign",
        "description": "Create a new Mailchimp campaign.",
        "operationId": "postCampaigns",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Campaign",
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Campaign Type",
                    "type": "string",
                    "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                    "enum": [
                      "regular",
                      "plaintext",
                      "absplit",
                      "rss",
                      "variate"
                    ]
                  },
                  "recipients": {
                    "title": "List",
                    "required": [
                      "list_id"
                    ],
                    "type": "object",
                    "properties": {
                      "list_id": {
                        "title": "List ID",
                        "type": "string",
                        "description": "The unique list id."
                      },
                      "segment_opts": {
                        "title": "Segment Options",
                        "type": "object",
                        "properties": {
                          "saved_segment_id": {
                            "title": "Saved Segment ID",
                            "type": "integer",
                            "description": "The id for an existing saved segment."
                          },
                          "match": {
                            "title": "Match Type",
                            "type": "string",
                            "description": "Segment match type.",
                            "enum": [
                              "any",
                              "all"
                            ]
                          },
                          "conditions": {
                            "title": "Segment Type",
                            "type": "array",
                            "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                            "items": {
                              "type": "object",
                              "x-oneOf": [
                                {
                                  "type": "object",
                                  "title": "Aim Segment",
                                  "description": "Segment by interaction with a specific campaign.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Aim",
                                      "enum": [
                                        "Aim"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "aim"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with a specific campaign.",
                                      "example": "aim"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "open",
                                        "click",
                                        "sent",
                                        "noopen",
                                        "noclick",
                                        "nosent"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                      "example": "open"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                      "example": "any"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Automation Segment",
                                  "description": "Segment by interaction with an Automation workflow.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Automation",
                                      "enum": [
                                        "Automation"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "automation"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with an Automation workflow.",
                                      "example": "automation"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "started",
                                        "completed",
                                        "not_started",
                                        "not_completed"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                      "example": "started"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The web id for the automation workflow to segment against.",
                                      "example": "2135217"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Poll Activity Segment",
                                  "description": "Segment by poll activity.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "CampaignPoll",
                                      "enum": [
                                        "CampaignPoll"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "poll"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by poll activity.",
                                      "example": "poll"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                      "example": "member"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The id for the poll.",
                                      "example": 409
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Conversation Segment",
                                  "description": "Segment by interaction with a campaign via Conversations.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Conversation",
                                      "enum": [
                                        "Conversation"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "conversation"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with a campaign via Conversations.",
                                      "example": "conversation"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                      "example": "member"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                      "example": "any"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Date Segment",
                                  "description": "Segment by a specific date field.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Date",
                                      "enum": [
                                        "Date"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "timestamp_opt",
                                        "info_changed",
                                        "ecomm_date"
                                      ],
                                      "title": "Segment Field",
                                      "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                      "example": "timestamp_opt"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "greater",
                                        "less",
                                        "is",
                                        "not",
                                        "blank",
                                        "blank_not",
                                        "within",
                                        "notwithin"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                      "example": "date"
                                    },
                                    "extra": {
                                      "type": "string",
                                      "title": "Segment Extra Value",
                                      "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                      "example": "2015-01-30T00:00:00.000Z"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Email Client Segment",
                                  "description": "Segment by use of a particular email client.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EmailClient",
                                      "enum": [
                                        "EmailClient"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "email_client"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by use of a particular email client.",
                                      "example": "email_client"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "client_is",
                                        "client_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                      "example": "client_is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The name of the email client.",
                                      "example": "Gmail"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Language Segment",
                                  "description": "Segment by language.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Language",
                                      "enum": [
                                        "Language"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "language"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting based off of a subscriber's language.",
                                      "example": "language"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's language is or is not set to a specific language.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "A two-letter language identifier.",
                                      "example": "en"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Member Rating Segment",
                                  "description": "Segment by member rating.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "MemberRating",
                                      "enum": [
                                        "MemberRating"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "rating"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by member rating.",
                                      "example": "rating"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The star rating number to segment against.",
                                      "example": 4
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Signup Source Segment",
                                  "description": "Segment by signup source.",
                                  "required": [
                                    "field",
                                    "condition_type",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "enum": [
                                        "SignupSource"
                                      ],
                                      "x-value": "SignupSource",
                                      "title": "Type"
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "source"
                                      ],
                                      "title": "Segment Field",
                                      "example": "source"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "source_is",
                                        "source_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's signup source was/was not a particular value.",
                                      "example": "source_is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The signup source.",
                                      "example": "List Import"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Survey Monkey Segment",
                                  "description": "Segment by interaction with a SurveyMonkey survey.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SurveyMonkey",
                                      "enum": [
                                        "SurveyMonkey"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "survey_monkey"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with a SurveyMonkey survey.",
                                      "example": "survey_monkey"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "started",
                                        "completed",
                                        "not_started",
                                        "not_completed"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                      "example": "started"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Survey ID",
                                      "description": "The unique ID of the survey monkey survey.",
                                      "example": "32179586"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "VIP Segment",
                                  "description": "Segment by VIP status.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "VIP",
                                      "enum": [
                                        "VIP"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "gmonkey"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by VIP status.",
                                      "example": "gmonkey"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member is or is not marked as VIP.",
                                      "example": "member"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Interests Segment",
                                  "description": "Segment by an interest group merge field.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Interests",
                                      "enum": [
                                        "Interests"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                      "example": "interests-123"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "interestcontains",
                                        "interestcontainsall",
                                        "interestnotcontains"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member is a part of one, all, or none of the groups.",
                                      "example": "interestcontains"
                                    },
                                    "value": {
                                      "type": "array",
                                      "title": "Segment Value",
                                      "description": "An array containing strings, each representing a group id.",
                                      "items": {
                                        "type": "string",
                                        "example": [
                                          "44401",
                                          "44405",
                                          "44409"
                                        ]
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Category Segment",
                                  "description": "Segment by purchases in specific items or categories.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommCategory",
                                      "enum": [
                                        "EcommCategory"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_cat",
                                        "ecomm_prod"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by purchases in specific items or categories.",
                                      "example": "ecomm_cat"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "contains",
                                        "notcontain",
                                        "starts",
                                        "ends"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The ecommerce category/item information.",
                                      "example": "Product"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Number Segment",
                                  "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommNumber",
                                      "enum": [
                                        "EcommNumber"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_spent_avg",
                                        "ecomm_orders",
                                        "ecomm_prod_all",
                                        "ecomm_avg_ord"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                      "example": "ecomm_orders"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                      "example": 42
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Purchased Segment",
                                  "description": "Segment by whether someone has purchased anything.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommPurchased",
                                      "enum": [
                                        "EcommPurchased"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_purchased"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by whether someone has purchased anything.",
                                      "example": "ecomm_purchased"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                      "example": "member"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Spent Segment",
                                  "description": "Segment by amount spent on a single order or across all orders.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommSpent",
                                      "enum": [
                                        "EcommSpent"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_spent_one",
                                        "ecomm_spent_all"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by amount spent on a single order or across all orders.",
                                      "example": "ecomm_spent_one"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have spent 'more' or 'less' than then specified value.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The total amount a member spent.",
                                      "example": 42
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Purchased Store Segment",
                                  "description": "Segment by purchases from a specific store.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommStore",
                                      "enum": [
                                        "EcommStore"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_store"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by purchases from a specific store.",
                                      "example": "ecomm_store"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have or have not purchased from a specific store.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Operator",
                                      "description": "The store id to segment against.",
                                      "example": "289"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Goal Activity Segment",
                                  "description": "Segment by Goal activity.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "GoalActivity",
                                      "enum": [
                                        "GoalActivity"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "goal"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by Goal activity.",
                                      "example": "goal"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "goal_not",
                                        "contains",
                                        "goal_notcontain",
                                        "starts",
                                        "ends"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The URL to check Goal activity against."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Goal Timestamp Segment",
                                  "description": "Segment by most recent interaction with a website.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "GoalTimestamp",
                                      "enum": [
                                        "GoalTimestamp"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "goal_last_visited"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by most recent interaction with a website.",
                                      "example": "goal_last_visited"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "greater",
                                        "less",
                                        "is"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The date to check Goal activity against.",
                                      "example": "2015-07-20T19:45:21.000Z"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Similar Subscribers Segment Member Segment",
                                  "description": "Segment by similar subscribers.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "FuzzySegment",
                                      "enum": [
                                        "FuzzySegment"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "fuzzy_segment"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by similar subscribers.",
                                      "example": "fuzzy_segment"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "fuzzy_is",
                                        "fuzzy_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                      "example": "fuzzy_is"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The id for the 'similar subscribers' segment.",
                                      "example": 48433
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Static Segment Member Segment",
                                  "description": "Segment by a given static segment.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "StaticSegment",
                                      "enum": [
                                        "StaticSegment"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "static_segment"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by a given static segment.",
                                      "example": "static_segment"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "static_is",
                                        "static_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/are not apart of a static segment.",
                                      "example": "static_is"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The id for the static segment.",
                                      "example": 48433
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Location-Based Segment",
                                  "description": "Segment by a specific country or US state.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoCountryState",
                                      "enum": [
                                        "IPGeoCountryState"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeocountry",
                                        "ipgeonotcountry",
                                        "ipgeostate",
                                        "ipgeonotstate"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are within a specific country or US state.",
                                      "example": "ipgeocountry"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The two-letter country code or US state abbreviation.",
                                      "example": "US"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Geolocation Segment",
                                  "description": "Segment by a specific geographic region.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value",
                                    "addr",
                                    "lat",
                                    "lng"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoIn",
                                      "enum": [
                                        "IPGeoIn"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeoin",
                                        "ipgeonotin"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are within a specific geographic region.",
                                      "example": "ipgeoin"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The radius of the target location.",
                                      "example": 42
                                    },
                                    "addr": {
                                      "type": "string",
                                      "title": "Segment Location Address",
                                      "description": "The address of the target location.",
                                      "example": "Atlanta, GA, USA"
                                    },
                                    "lat": {
                                      "type": "string",
                                      "title": "Segment Location Latitude",
                                      "description": "The latitude of the target location.",
                                      "example": "33.7489954"
                                    },
                                    "lng": {
                                      "type": "string",
                                      "title": "Segment Location Longitude",
                                      "description": "The longitude of the target location.",
                                      "example": -84.3879824
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "US Zip Code Segment",
                                  "description": "Segment by a specific US ZIP code.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value",
                                    "extra"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoInZip",
                                      "enum": [
                                        "IPGeoInZip"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeoinzip"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are within a specific US zip code.",
                                      "example": "ipgeoinzip"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The radius of the target location.",
                                      "example": 25
                                    },
                                    "extra": {
                                      "type": "integer",
                                      "title": "Extra Data",
                                      "description": "The zip code to segment against.",
                                      "example": 30318
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Unknown Location-Based Segment",
                                  "description": "Segment members whose location information is unknown.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoUnknown",
                                      "enum": [
                                        "IPGeoUnknown"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeounknown"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members for which location information is unknown.",
                                      "example": "ipgeounknown"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Zip Code Location-Based Segment",
                                  "description": "Segment by a specific US ZIP code.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoZip",
                                      "enum": [
                                        "IPGeoZip"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeoiszip",
                                        "ipgeonotzip"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are/are not within a specific US zip code.",
                                      "example": "ipgeonotzip"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The 5-digit zip code.",
                                      "example": 30318
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Age Segment",
                                  "description": "Segment by age ranges in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialAge",
                                      "enum": [
                                        "SocialAge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_age"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by age ranges in Social Profiles data.",
                                      "example": "social_age"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "18-24",
                                        "25-34",
                                        "35-54",
                                        "55+"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The age range to segment.",
                                      "example": "35-54"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Gender Segment",
                                  "description": "Segment by listed gender in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialGender",
                                      "enum": [
                                        "SocialGender"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_gender"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by listed gender in Social Profiles data.",
                                      "example": "social_gender"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "male",
                                        "female"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The Social Profiles gender to segment.",
                                      "example": "female"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Influence Segment",
                                  "description": "Segment by influence rating in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialInfluence",
                                      "enum": [
                                        "SocialInfluence"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_influence"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by influence rating in Social Profiles data.",
                                      "example": "social_influence"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The Social Profiles influence rating to segment.",
                                      "example": 2
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Social Network Segment",
                                  "description": "Segment by social network in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialNetworkMember",
                                      "enum": [
                                        "SocialNetworkMember"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_network"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by social network in Social Profiles data.",
                                      "example": "social_network"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not on a given social network.",
                                      "example": "member"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "twitter",
                                        "facebook",
                                        "linkedin",
                                        "flickr",
                                        "foursquare",
                                        "lastfm",
                                        "myspace",
                                        "quora",
                                        "vimeo",
                                        "yelp",
                                        "youtube"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The social network to segment against.",
                                      "example": "twitter"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Social Network Follow Segment",
                                  "description": "Segment by social network in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialNetworkFollow",
                                      "enum": [
                                        "SocialNetworkFollow"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_network"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by social network in Social Profiles data.",
                                      "example": "social_network"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "follow",
                                        "notfollow"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not following a linked account on a given social network.",
                                      "example": "follow"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "twitter_follow"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The social network to segment against.",
                                      "example": "twitter_follow"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Address Merge Field Segment",
                                  "description": "Segment by an address-type merge field.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "AddressMerge",
                                      "enum": [
                                        "AddressMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "An address-type merge field to segment.",
                                      "example": "MMERGE3"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "notcontain",
                                        "blank",
                                        "blank_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                      "example": "contains"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to segment a text merge field with.",
                                      "example": "Atlanta"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Address/Zip Merge Field Segment",
                                  "description": "Segment by an address-type merge field within a given distance.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value",
                                    "extra"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "ZipMerge",
                                      "enum": [
                                        "ZipMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "An address or zip-type merge field to segment.",
                                      "example": "MMERGE2"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "geoin"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                      "example": "geoin"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The distance from the city/zip.",
                                      "example": "25"
                                    },
                                    "extra": {
                                      "type": "string",
                                      "title": "Segment Extra",
                                      "description": "The city or the zip being used to segment against.",
                                      "example": "30318"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Birthday Merge Field Segment",
                                  "description": "Segment by a contact's birthday.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "BirthdayMerge",
                                      "enum": [
                                        "BirthdayMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A date merge field to segment.",
                                      "example": "MMERGE4"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "blank",
                                        "blank_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "A date to segment against (mm/dd).",
                                      "example": "01/30"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Date Merge Field Segment",
                                  "description": "Segment by a given date merge field.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "DateMerge",
                                      "enum": [
                                        "DateMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A date merge field to segment.",
                                      "example": "MMERGE5"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "less",
                                        "blank",
                                        "blank_not",
                                        "greater"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "A date to segment against.",
                                      "example": "01/30/2015"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Dropdown/Radio Merge Field Segment",
                                  "description": "An individual segment condition",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SelectMerge",
                                      "enum": [
                                        "SelectMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A merge field to segment.",
                                      "example": "MMERGE6"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "blank",
                                        "blank_not",
                                        "notcontain",
                                        "contains"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to segment a text merge field with.",
                                      "example": "Second Choice"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Text or Number Merge Field Segment",
                                  "description": "Segment by a given text or number merge field.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "TextMerge",
                                      "enum": [
                                        "TextMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A text or number merge field to segment.",
                                      "example": "MMERGE7"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "contains",
                                        "notcontain",
                                        "starts",
                                        "ends",
                                        "greater",
                                        "less",
                                        "blank",
                                        "blank_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                      "example": "contains"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to segment a text or number merge field with.",
                                      "example": "Freddie's Jokes"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Email Segment",
                                  "description": "Segment by email address.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EmailAddress",
                                      "enum": [
                                        "EmailAddress"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "merge0",
                                        "EMAIL"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting based off of a subscriber's email address.",
                                      "example": "EMAIL"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "contains",
                                        "notcontain",
                                        "starts",
                                        "ends",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to compare the email against.",
                                      "example": "urist.mcvankab@freddiesjokes.com"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Predicted Gender Segment",
                                  "description": "Segment by predicted gender.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "PredictedGender",
                                      "enum": [
                                        "PredictedGender"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "predicted_gender"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by predicted gender."
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "male",
                                        "female"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The predicted gender to segment.",
                                      "example": "female"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Predicted Age Segment",
                                  "description": "Segment by predicted age.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "PredictedAge",
                                      "enum": [
                                        "PredictedAge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "predicted_age_range"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by predicted age."
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "18-24",
                                        "25-34",
                                        "35-44",
                                        "45-54",
                                        "55-64",
                                        "65+"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The predicted age to segment.",
                                      "example": "female"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "New Subscribers Prebuilt Segment",
                                  "description": "Segment by when people subscribed.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "NewSubscribers",
                                      "enum": [
                                        "NewSubscribers"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "timestamp_opt"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by when people subscribed."
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "date_within"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whe the event took place, namely within a time frame."
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                    }
                                  }
                                }
                              ],
                              "x-discriminator": {
                                "type": "string",
                                "propertyName": "condition_type"
                              }
                            }
                          }
                        },
                        "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                      }
                    },
                    "description": "List settings for the campaign."
                  },
                  "settings": {
                    "title": "Campaign Settings",
                    "type": "object",
                    "properties": {
                      "subject_line": {
                        "title": "Campaign Subject Line",
                        "type": "string",
                        "description": "The subject line for the campaign."
                      },
                      "preview_text": {
                        "title": "Campaign Preview Text",
                        "type": "string",
                        "description": "The preview text for the campaign."
                      },
                      "title": {
                        "title": "Campaign Title",
                        "type": "string",
                        "description": "The title of the campaign."
                      },
                      "from_name": {
                        "title": "From Name",
                        "type": "string",
                        "description": "The 'from' name on the campaign (not an email address)."
                      },
                      "reply_to": {
                        "title": "Reply To Address",
                        "type": "string",
                        "description": "The reply-to email address for the campaign. Note: while this field is not required for campaign creation, it is required for sending."
                      },
                      "use_conversation": {
                        "title": "Conversation",
                        "type": "boolean",
                        "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                      },
                      "to_name": {
                        "title": "To Name",
                        "type": "string",
                        "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                      },
                      "folder_id": {
                        "title": "Folder ID",
                        "type": "string",
                        "description": "If the campaign is listed in a folder, the id for that folder."
                      },
                      "authenticate": {
                        "title": "Authentication",
                        "type": "boolean",
                        "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                      },
                      "auto_footer": {
                        "title": "Auto-Footer",
                        "type": "boolean",
                        "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                      },
                      "inline_css": {
                        "title": "Inline CSS",
                        "type": "boolean",
                        "description": "Automatically inline the CSS included with the campaign content."
                      },
                      "auto_tweet": {
                        "title": "Auto-Tweet",
                        "type": "boolean",
                        "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                      },
                      "auto_fb_post": {
                        "title": "Auto Post to Facebook",
                        "type": "array",
                        "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fb_comments": {
                        "title": "Facebook Comments",
                        "type": "boolean",
                        "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                      },
                      "template_id": {
                        "title": "Template ID",
                        "type": "integer",
                        "description": "The id of the template to use."
                      }
                    },
                    "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                  },
                  "variate_settings": {
                    "title": "A/B Test Options",
                    "required": [
                      "winner_criteria"
                    ],
                    "type": "object",
                    "properties": {
                      "winner_criteria": {
                        "title": "Winning Criteria",
                        "type": "string",
                        "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                        "enum": [
                          "opens",
                          "clicks",
                          "manual",
                          "total_revenue"
                        ]
                      },
                      "wait_time": {
                        "title": "Wait Time",
                        "type": "integer",
                        "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                      },
                      "test_size": {
                        "title": "Test Size",
                        "type": "integer",
                        "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                      },
                      "subject_lines": {
                        "title": "Subject Lines",
                        "type": "array",
                        "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "send_times": {
                        "title": "Send Times",
                        "type": "array",
                        "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                        "items": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "from_names": {
                        "title": "From Names",
                        "type": "array",
                        "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "reply_to_addresses": {
                        "title": "Reply To Addresses",
                        "type": "array",
                        "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "The settings specific to A/B test campaigns."
                  },
                  "tracking": {
                    "title": "Campaign Tracking Options",
                    "type": "object",
                    "properties": {
                      "opens": {
                        "title": "Opens",
                        "type": "boolean",
                        "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                      },
                      "html_clicks": {
                        "title": "HTML Click Tracking",
                        "type": "boolean",
                        "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                      },
                      "text_clicks": {
                        "title": "Plain-Text Click Tracking",
                        "type": "boolean",
                        "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                      },
                      "goal_tracking": {
                        "title": "Mailchimp Goal Tracking",
                        "type": "boolean",
                        "description": "Deprecated"
                      },
                      "ecomm360": {
                        "title": "E-commerce Tracking",
                        "type": "boolean",
                        "description": "Whether to enable e-commerce tracking."
                      },
                      "google_analytics": {
                        "title": "Google Analytics Tracking",
                        "type": "string",
                        "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                      },
                      "clicktale": {
                        "title": "ClickTale Analytics Tracking",
                        "type": "string",
                        "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                      },
                      "salesforce": {
                        "title": "Salesforce CRM Tracking",
                        "type": "object",
                        "properties": {
                          "campaign": {
                            "title": "Salesforce Campaign",
                            "type": "boolean",
                            "description": "Create a campaign in a connected Salesforce account."
                          },
                          "notes": {
                            "title": "Salesforce Note",
                            "type": "boolean",
                            "description": "Update contact notes for a campaign based on subscriber email addresses."
                          }
                        },
                        "description": "Deprecated"
                      },
                      "capsule": {
                        "title": "Capsule CRM Tracking",
                        "type": "object",
                        "properties": {
                          "notes": {
                            "title": "Capsule Note",
                            "type": "boolean",
                            "description": "Update contact notes for a campaign based on subscriber email addresses."
                          }
                        },
                        "description": "Deprecated"
                      }
                    },
                    "description": "The tracking options for a campaign."
                  },
                  "rss_opts": {
                    "title": "RSS Options",
                    "required": [
                      "feed_url",
                      "frequency"
                    ],
                    "type": "object",
                    "properties": {
                      "feed_url": {
                        "title": "Feed URL",
                        "type": "string",
                        "description": "The URL for the RSS feed.",
                        "format": "uri"
                      },
                      "frequency": {
                        "title": "Frequency",
                        "type": "string",
                        "description": "The frequency of the RSS Campaign.",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ]
                      },
                      "schedule": {
                        "title": "Sending Schedule",
                        "type": "object",
                        "properties": {
                          "hour": {
                            "title": "Sending Hour",
                            "maximum": 23,
                            "minimum": 0,
                            "type": "integer",
                            "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                          },
                          "daily_send": {
                            "title": "Daily Sending Days",
                            "type": "object",
                            "properties": {
                              "sunday": {
                                "title": "Sunday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Sundays."
                              },
                              "monday": {
                                "title": "Monday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Mondays."
                              },
                              "tuesday": {
                                "title": "tuesday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Tuesdays."
                              },
                              "wednesday": {
                                "title": "Monday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Wednesdays."
                              },
                              "thursday": {
                                "title": "Thursday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Thursdays."
                              },
                              "friday": {
                                "title": "Friday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Fridays."
                              },
                              "saturday": {
                                "title": "Saturday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Saturdays."
                              }
                            },
                            "description": "The days of the week to send a daily RSS Campaign."
                          },
                          "weekly_send_day": {
                            "title": "Weekly Sending Day",
                            "type": "string",
                            "description": "The day of the week to send a weekly RSS Campaign.",
                            "enum": [
                              "sunday",
                              "monday",
                              "tuesday",
                              "wednesday",
                              "thursday",
                              "friday",
                              "saturday"
                            ]
                          },
                          "monthly_send_date": {
                            "title": "Monthly Sending Day",
                            "maximum": 31,
                            "minimum": 0,
                            "type": "number",
                            "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                          }
                        },
                        "description": "The schedule for sending the RSS Campaign."
                      },
                      "constrain_rss_img": {
                        "title": "Constrain RSS Images",
                        "type": "boolean",
                        "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                      }
                    },
                    "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options, specific to an RSS campaign."
                  },
                  "social_card": {
                    "title": "Campaign Social Card",
                    "type": "object",
                    "properties": {
                      "image_url": {
                        "title": "Image URL",
                        "type": "string",
                        "description": "The url for the header image for the card."
                      },
                      "description": {
                        "title": "Campaign Description",
                        "type": "string",
                        "description": "A short summary of the campaign to display."
                      },
                      "title": {
                        "title": "Title",
                        "type": "string",
                        "description": "The title for the card. Typically the subject line of the campaign."
                      }
                    },
                    "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                  },
                  "content_type": {
                    "title": "Content Type",
                    "type": "string",
                    "description": "How the campaign's content is put together. The old drag and drop editor uses 'template' while the new editor uses 'multichannel'. Defaults to template.",
                    "example": "template",
                    "enum": [
                      "template",
                      "multichannel"
                    ]
                  }
                },
                "description": "A summary of an individual campaign's settings and content."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version in ISO 8601 format.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together.",
                      "enum": [
                        "template",
                        "html",
                        "url",
                        "multichannel"
                      ]
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_is_active": {
                          "title": "List Status",
                          "type": "boolean",
                          "description": "The status of the list used, namely if it's deleted or disabled.",
                          "readOnly": true
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign."
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version in ISO 8601 format.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together.",
                      "enum": [
                        "template",
                        "html",
                        "url",
                        "multichannel"
                      ]
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_is_active": {
                          "title": "List Status",
                          "type": "boolean",
                          "description": "The status of the list used, namely if it's deleted or disabled.",
                          "readOnly": true
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign."
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "create",
          "methodNameCamel": "create"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Get campaign info",
        "description": "Get information about a specific campaign.",
        "operationId": "getCampaignsId",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version in ISO 8601 format.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together.",
                      "enum": [
                        "template",
                        "html",
                        "url",
                        "multichannel"
                      ]
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_is_active": {
                          "title": "List Status",
                          "type": "boolean",
                          "description": "The status of the list used, namely if it's deleted or disabled.",
                          "readOnly": true
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign."
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version in ISO 8601 format.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together.",
                      "enum": [
                        "template",
                        "html",
                        "url",
                        "multichannel"
                      ]
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_is_active": {
                          "title": "List Status",
                          "type": "boolean",
                          "description": "The status of the list used, namely if it's deleted or disabled.",
                          "readOnly": true
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign."
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "get",
          "methodNameCamel": "get"
        }
      },
      "delete": {
        "tags": [
          "campaigns"
        ],
        "summary": "Delete campaign",
        "description": "Remove a campaign from your Mailchimp account.",
        "operationId": "deleteCampaignsId",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "remove",
          "methodNameCamel": "remove"
        }
      },
      "patch": {
        "tags": [
          "campaigns"
        ],
        "summary": "Update campaign settings",
        "description": "Update some or all of the settings for a specific campaign.",
        "operationId": "patchCampaignsId",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Campaign",
                "required": [
                  "settings"
                ],
                "type": "object",
                "properties": {
                  "recipients": {
                    "title": "List",
                    "required": [
                      "list_id"
                    ],
                    "type": "object",
                    "properties": {
                      "list_id": {
                        "title": "List ID",
                        "type": "string",
                        "description": "The unique list id."
                      },
                      "segment_opts": {
                        "title": "Segment Options",
                        "type": "object",
                        "properties": {
                          "saved_segment_id": {
                            "title": "Saved Segment ID",
                            "type": "integer",
                            "description": "The id for an existing saved segment."
                          },
                          "prebuilt_segment_id": {
                            "title": "Prebuilt Segment Id",
                            "type": "string",
                            "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                            "example": "subscribers-female"
                          },
                          "match": {
                            "title": "Match Type",
                            "type": "string",
                            "description": "Segment match type.",
                            "enum": [
                              "any",
                              "all"
                            ]
                          },
                          "conditions": {
                            "title": "Segment Type",
                            "type": "array",
                            "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                            "items": {
                              "type": "object",
                              "x-oneOf": [
                                {
                                  "type": "object",
                                  "title": "Aim Segment",
                                  "description": "Segment by interaction with a specific campaign.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Aim",
                                      "enum": [
                                        "Aim"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "aim"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with a specific campaign.",
                                      "example": "aim"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "open",
                                        "click",
                                        "sent",
                                        "noopen",
                                        "noclick",
                                        "nosent"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                      "example": "open"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                      "example": "any"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Automation Segment",
                                  "description": "Segment by interaction with an Automation workflow.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Automation",
                                      "enum": [
                                        "Automation"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "automation"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with an Automation workflow.",
                                      "example": "automation"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "started",
                                        "completed",
                                        "not_started",
                                        "not_completed"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                      "example": "started"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The web id for the automation workflow to segment against.",
                                      "example": "2135217"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Poll Activity Segment",
                                  "description": "Segment by poll activity.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "CampaignPoll",
                                      "enum": [
                                        "CampaignPoll"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "poll"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by poll activity.",
                                      "example": "poll"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                      "example": "member"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The id for the poll.",
                                      "example": 409
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Conversation Segment",
                                  "description": "Segment by interaction with a campaign via Conversations.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Conversation",
                                      "enum": [
                                        "Conversation"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "conversation"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with a campaign via Conversations.",
                                      "example": "conversation"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                      "example": "member"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                      "example": "any"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Date Segment",
                                  "description": "Segment by a specific date field.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Date",
                                      "enum": [
                                        "Date"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "timestamp_opt",
                                        "info_changed",
                                        "ecomm_date"
                                      ],
                                      "title": "Segment Field",
                                      "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                      "example": "timestamp_opt"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "greater",
                                        "less",
                                        "is",
                                        "not",
                                        "blank",
                                        "blank_not",
                                        "within",
                                        "notwithin"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                      "example": "date"
                                    },
                                    "extra": {
                                      "type": "string",
                                      "title": "Segment Extra Value",
                                      "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                      "example": "2015-01-30T00:00:00.000Z"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Email Client Segment",
                                  "description": "Segment by use of a particular email client.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EmailClient",
                                      "enum": [
                                        "EmailClient"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "email_client"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by use of a particular email client.",
                                      "example": "email_client"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "client_is",
                                        "client_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                      "example": "client_is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The name of the email client.",
                                      "example": "Gmail"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Language Segment",
                                  "description": "Segment by language.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Language",
                                      "enum": [
                                        "Language"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "language"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting based off of a subscriber's language.",
                                      "example": "language"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's language is or is not set to a specific language.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "A two-letter language identifier.",
                                      "example": "en"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Member Rating Segment",
                                  "description": "Segment by member rating.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "MemberRating",
                                      "enum": [
                                        "MemberRating"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "rating"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by member rating.",
                                      "example": "rating"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The star rating number to segment against.",
                                      "example": 4
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Signup Source Segment",
                                  "description": "Segment by signup source.",
                                  "required": [
                                    "field",
                                    "condition_type",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "enum": [
                                        "SignupSource"
                                      ],
                                      "x-value": "SignupSource",
                                      "title": "Type"
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "source"
                                      ],
                                      "title": "Segment Field",
                                      "example": "source"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "source_is",
                                        "source_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's signup source was/was not a particular value.",
                                      "example": "source_is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The signup source.",
                                      "example": "List Import"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Survey Monkey Segment",
                                  "description": "Segment by interaction with a SurveyMonkey survey.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SurveyMonkey",
                                      "enum": [
                                        "SurveyMonkey"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "survey_monkey"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by interaction with a SurveyMonkey survey.",
                                      "example": "survey_monkey"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "started",
                                        "completed",
                                        "not_started",
                                        "not_completed"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                      "example": "started"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Survey ID",
                                      "description": "The unique ID of the survey monkey survey.",
                                      "example": "32179586"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "VIP Segment",
                                  "description": "Segment by VIP status.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "VIP",
                                      "enum": [
                                        "VIP"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "gmonkey"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by VIP status.",
                                      "example": "gmonkey"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member is or is not marked as VIP.",
                                      "example": "member"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Interests Segment",
                                  "description": "Segment by an interest group merge field.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "Interests",
                                      "enum": [
                                        "Interests"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                      "example": "interests-123"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "interestcontains",
                                        "interestcontainsall",
                                        "interestnotcontains"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member is a part of one, all, or none of the groups.",
                                      "example": "interestcontains"
                                    },
                                    "value": {
                                      "type": "array",
                                      "title": "Segment Value",
                                      "description": "An array containing strings, each representing a group id.",
                                      "items": {
                                        "type": "string",
                                        "example": [
                                          "44401",
                                          "44405",
                                          "44409"
                                        ]
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Category Segment",
                                  "description": "Segment by purchases in specific items or categories.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommCategory",
                                      "enum": [
                                        "EcommCategory"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_cat",
                                        "ecomm_prod"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by purchases in specific items or categories.",
                                      "example": "ecomm_cat"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "contains",
                                        "notcontain",
                                        "starts",
                                        "ends"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The ecommerce category/item information.",
                                      "example": "Product"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Number Segment",
                                  "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommNumber",
                                      "enum": [
                                        "EcommNumber"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_spent_avg",
                                        "ecomm_orders",
                                        "ecomm_prod_all",
                                        "ecomm_avg_ord"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                      "example": "ecomm_orders"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                      "example": 42
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Purchased Segment",
                                  "description": "Segment by whether someone has purchased anything.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommPurchased",
                                      "enum": [
                                        "EcommPurchased"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_purchased"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by whether someone has purchased anything.",
                                      "example": "ecomm_purchased"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                      "example": "member"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Spent Segment",
                                  "description": "Segment by amount spent on a single order or across all orders.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommSpent",
                                      "enum": [
                                        "EcommSpent"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_spent_one",
                                        "ecomm_spent_all"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by amount spent on a single order or across all orders.",
                                      "example": "ecomm_spent_one"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have spent 'more' or 'less' than then specified value.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The total amount a member spent.",
                                      "example": 42
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Ecommerce Purchased Store Segment",
                                  "description": "Segment by purchases from a specific store.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EcommStore",
                                      "enum": [
                                        "EcommStore"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ecomm_store"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by purchases from a specific store.",
                                      "example": "ecomm_store"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have or have not purchased from a specific store.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Operator",
                                      "description": "The store id to segment against.",
                                      "example": "289"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Goal Activity Segment",
                                  "description": "Segment by Goal activity.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "GoalActivity",
                                      "enum": [
                                        "GoalActivity"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "goal"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by Goal activity.",
                                      "example": "goal"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "goal_not",
                                        "contains",
                                        "goal_notcontain",
                                        "starts",
                                        "ends"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The URL to check Goal activity against."
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Goal Timestamp Segment",
                                  "description": "Segment by most recent interaction with a website.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "GoalTimestamp",
                                      "enum": [
                                        "GoalTimestamp"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "goal_last_visited"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by most recent interaction with a website.",
                                      "example": "goal_last_visited"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "greater",
                                        "less",
                                        "is"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The date to check Goal activity against.",
                                      "example": "2015-07-20T19:45:21.000Z"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Similar Subscribers Segment Member Segment",
                                  "description": "Segment by similar subscribers.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "FuzzySegment",
                                      "enum": [
                                        "FuzzySegment"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "fuzzy_segment"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by similar subscribers.",
                                      "example": "fuzzy_segment"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "fuzzy_is",
                                        "fuzzy_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                      "example": "fuzzy_is"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The id for the 'similar subscribers' segment.",
                                      "example": 48433
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Static Segment Member Segment",
                                  "description": "Segment by a given static segment.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "StaticSegment",
                                      "enum": [
                                        "StaticSegment"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "static_segment"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by a given static segment.",
                                      "example": "static_segment"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "static_is",
                                        "static_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/are not apart of a static segment.",
                                      "example": "static_is"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The id for the static segment.",
                                      "example": 48433
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Location-Based Segment",
                                  "description": "Segment by a specific country or US state.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoCountryState",
                                      "enum": [
                                        "IPGeoCountryState"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeocountry",
                                        "ipgeonotcountry",
                                        "ipgeostate",
                                        "ipgeonotstate"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are within a specific country or US state.",
                                      "example": "ipgeocountry"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "The two-letter country code or US state abbreviation.",
                                      "example": "US"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Geolocation Segment",
                                  "description": "Segment by a specific geographic region.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value",
                                    "addr",
                                    "lat",
                                    "lng"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoIn",
                                      "enum": [
                                        "IPGeoIn"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeoin",
                                        "ipgeonotin"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are within a specific geographic region.",
                                      "example": "ipgeoin"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The radius of the target location.",
                                      "example": 42
                                    },
                                    "addr": {
                                      "type": "string",
                                      "title": "Segment Location Address",
                                      "description": "The address of the target location.",
                                      "example": "Atlanta, GA, USA"
                                    },
                                    "lat": {
                                      "type": "string",
                                      "title": "Segment Location Latitude",
                                      "description": "The latitude of the target location.",
                                      "example": "33.7489954"
                                    },
                                    "lng": {
                                      "type": "string",
                                      "title": "Segment Location Longitude",
                                      "description": "The longitude of the target location.",
                                      "example": -84.3879824
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "US Zip Code Segment",
                                  "description": "Segment by a specific US ZIP code.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value",
                                    "extra"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoInZip",
                                      "enum": [
                                        "IPGeoInZip"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeoinzip"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are within a specific US zip code.",
                                      "example": "ipgeoinzip"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The radius of the target location.",
                                      "example": 25
                                    },
                                    "extra": {
                                      "type": "integer",
                                      "title": "Extra Data",
                                      "description": "The zip code to segment against.",
                                      "example": 30318
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Unknown Location-Based Segment",
                                  "description": "Segment members whose location information is unknown.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoUnknown",
                                      "enum": [
                                        "IPGeoUnknown"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeounknown"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members for which location information is unknown.",
                                      "example": "ipgeounknown"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Zip Code Location-Based Segment",
                                  "description": "Segment by a specific US ZIP code.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "IPGeoZip",
                                      "enum": [
                                        "IPGeoZip"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeo"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting subscribers who are within a specific location.",
                                      "example": "ipgeo"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "ipgeoiszip",
                                        "ipgeonotzip"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Segment members who are/are not within a specific US zip code.",
                                      "example": "ipgeonotzip"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "title": "Segment Data",
                                      "description": "The 5-digit zip code.",
                                      "example": 30318
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Age Segment",
                                  "description": "Segment by age ranges in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialAge",
                                      "enum": [
                                        "SocialAge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_age"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by age ranges in Social Profiles data.",
                                      "example": "social_age"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "18-24",
                                        "25-34",
                                        "35-54",
                                        "55+"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The age range to segment.",
                                      "example": "35-54"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Gender Segment",
                                  "description": "Segment by listed gender in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialGender",
                                      "enum": [
                                        "SocialGender"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_gender"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by listed gender in Social Profiles data.",
                                      "example": "social_gender"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "male",
                                        "female"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The Social Profiles gender to segment.",
                                      "example": "female"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Influence Segment",
                                  "description": "Segment by influence rating in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialInfluence",
                                      "enum": [
                                        "SocialInfluence"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_influence"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by influence rating in Social Profiles data.",
                                      "example": "social_influence"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                      "example": "greater"
                                    },
                                    "value": {
                                      "type": "number",
                                      "title": "Segment Operator",
                                      "description": "The Social Profiles influence rating to segment.",
                                      "example": 2
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Social Network Segment",
                                  "description": "Segment by social network in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialNetworkMember",
                                      "enum": [
                                        "SocialNetworkMember"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_network"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by social network in Social Profiles data.",
                                      "example": "social_network"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "notmember"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not on a given social network.",
                                      "example": "member"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "twitter",
                                        "facebook",
                                        "linkedin",
                                        "flickr",
                                        "foursquare",
                                        "lastfm",
                                        "myspace",
                                        "quora",
                                        "vimeo",
                                        "yelp",
                                        "youtube"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The social network to segment against.",
                                      "example": "twitter"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Social Profiles Social Network Follow Segment",
                                  "description": "Segment by social network in Social Profiles data.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SocialNetworkFollow",
                                      "enum": [
                                        "SocialNetworkFollow"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "social_network"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by social network in Social Profiles data.",
                                      "example": "social_network"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "follow",
                                        "notfollow"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not following a linked account on a given social network.",
                                      "example": "follow"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "twitter_follow"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The social network to segment against.",
                                      "example": "twitter_follow"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Address Merge Field Segment",
                                  "description": "Segment by an address-type merge field.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "AddressMerge",
                                      "enum": [
                                        "AddressMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "An address-type merge field to segment.",
                                      "example": "MMERGE3"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "notcontain",
                                        "blank",
                                        "blank_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                      "example": "contains"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to segment a text merge field with.",
                                      "example": "Atlanta"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Address/Zip Merge Field Segment",
                                  "description": "Segment by an address-type merge field within a given distance.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value",
                                    "extra"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "ZipMerge",
                                      "enum": [
                                        "ZipMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "An address or zip-type merge field to segment.",
                                      "example": "MMERGE2"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "geoin"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                      "example": "geoin"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The distance from the city/zip.",
                                      "example": "25"
                                    },
                                    "extra": {
                                      "type": "string",
                                      "title": "Segment Extra",
                                      "description": "The city or the zip being used to segment against.",
                                      "example": "30318"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Birthday Merge Field Segment",
                                  "description": "Segment by a contact's birthday.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "BirthdayMerge",
                                      "enum": [
                                        "BirthdayMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A date merge field to segment.",
                                      "example": "MMERGE4"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "blank",
                                        "blank_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "A date to segment against (mm/dd).",
                                      "example": "01/30"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Date Merge Field Segment",
                                  "description": "Segment by a given date merge field.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "DateMerge",
                                      "enum": [
                                        "DateMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A date merge field to segment.",
                                      "example": "MMERGE5"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "less",
                                        "blank",
                                        "blank_not",
                                        "greater"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "A date to segment against.",
                                      "example": "01/30/2015"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Dropdown/Radio Merge Field Segment",
                                  "description": "An individual segment condition",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "SelectMerge",
                                      "enum": [
                                        "SelectMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A merge field to segment.",
                                      "example": "MMERGE6"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "blank",
                                        "blank_not",
                                        "notcontain",
                                        "contains"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to segment a text merge field with.",
                                      "example": "Second Choice"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Text or Number Merge Field Segment",
                                  "description": "Segment by a given text or number merge field.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "TextMerge",
                                      "enum": [
                                        "TextMerge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "title": "Segment Field",
                                      "description": "A text or number merge field to segment.",
                                      "example": "MMERGE7"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "contains",
                                        "notcontain",
                                        "starts",
                                        "ends",
                                        "greater",
                                        "less",
                                        "blank",
                                        "blank_not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                      "example": "contains"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to segment a text or number merge field with.",
                                      "example": "Freddie's Jokes"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Email Segment",
                                  "description": "Segment by email address.",
                                  "required": [
                                    "field",
                                    "op"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "EmailAddress",
                                      "enum": [
                                        "EmailAddress"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "merge0",
                                        "EMAIL"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segmenting based off of a subscriber's email address.",
                                      "example": "EMAIL"
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not",
                                        "contains",
                                        "notcontain",
                                        "starts",
                                        "ends",
                                        "greater",
                                        "less"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Value",
                                      "description": "The value to compare the email against.",
                                      "example": "urist.mcvankab@freddiesjokes.com"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Predicted Gender Segment",
                                  "description": "Segment by predicted gender.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "PredictedGender",
                                      "enum": [
                                        "PredictedGender"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "predicted_gender"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by predicted gender."
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is",
                                        "not"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "male",
                                        "female"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The predicted gender to segment.",
                                      "example": "female"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "Predicted Age Segment",
                                  "description": "Segment by predicted age.",
                                  "required": [
                                    "field",
                                    "op",
                                    "value"
                                  ],
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "PredictedAge",
                                      "enum": [
                                        "PredictedAge"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "predicted_age_range"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by predicted age."
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "is"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Members who are/not the exact criteria listed.",
                                      "example": "is"
                                    },
                                    "value": {
                                      "type": "string",
                                      "enum": [
                                        "18-24",
                                        "25-34",
                                        "35-44",
                                        "45-54",
                                        "55-64",
                                        "65+"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "The predicted age to segment.",
                                      "example": "female"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "title": "New Subscribers Prebuilt Segment",
                                  "description": "Segment by when people subscribed.",
                                  "properties": {
                                    "condition_type": {
                                      "type": "string",
                                      "x-value": "NewSubscribers",
                                      "enum": [
                                        "NewSubscribers"
                                      ]
                                    },
                                    "field": {
                                      "type": "string",
                                      "enum": [
                                        "timestamp_opt"
                                      ],
                                      "title": "Segment Field",
                                      "description": "Segment by when people subscribed."
                                    },
                                    "op": {
                                      "type": "string",
                                      "enum": [
                                        "date_within"
                                      ],
                                      "title": "Segment Operator",
                                      "description": "Whe the event took place, namely within a time frame."
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Segment Data",
                                      "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                    }
                                  }
                                }
                              ],
                              "x-discriminator": {
                                "type": "string",
                                "propertyName": "condition_type"
                              }
                            }
                          }
                        },
                        "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                      }
                    },
                    "description": "List settings for the campaign."
                  },
                  "settings": {
                    "title": "Campaign Settings",
                    "required": [
                      "from_name",
                      "reply_to",
                      "subject_line"
                    ],
                    "type": "object",
                    "properties": {
                      "subject_line": {
                        "title": "Campaign Subject Line",
                        "type": "string",
                        "description": "The subject line for the campaign."
                      },
                      "preview_text": {
                        "title": "Campaign Preview Text",
                        "type": "string",
                        "description": "The preview text for the campaign."
                      },
                      "title": {
                        "title": "Campaign Title",
                        "type": "string",
                        "description": "The title of the campaign."
                      },
                      "from_name": {
                        "title": "From Name",
                        "type": "string",
                        "description": "The 'from' name on the campaign (not an email address)."
                      },
                      "reply_to": {
                        "title": "Reply To Address",
                        "type": "string",
                        "description": "The reply-to email address for the campaign."
                      },
                      "use_conversation": {
                        "title": "Conversation",
                        "type": "boolean",
                        "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                      },
                      "to_name": {
                        "title": "To Name",
                        "type": "string",
                        "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                      },
                      "folder_id": {
                        "title": "Folder ID",
                        "type": "string",
                        "description": "If the campaign is listed in a folder, the id for that folder."
                      },
                      "authenticate": {
                        "title": "Authentication",
                        "type": "boolean",
                        "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                      },
                      "auto_footer": {
                        "title": "Auto-Footer",
                        "type": "boolean",
                        "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                      },
                      "inline_css": {
                        "title": "Inline CSS",
                        "type": "boolean",
                        "description": "Automatically inline the CSS included with the campaign content."
                      },
                      "auto_tweet": {
                        "title": "Auto-Tweet",
                        "type": "boolean",
                        "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                      },
                      "auto_fb_post": {
                        "title": "Auto Post to Facebook",
                        "type": "array",
                        "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fb_comments": {
                        "title": "Facebook Comments",
                        "type": "boolean",
                        "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                      },
                      "template_id": {
                        "title": "Template ID",
                        "type": "integer",
                        "description": "The id of the template to use."
                      }
                    },
                    "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                  },
                  "variate_settings": {
                    "title": "A/B Test Options",
                    "required": [
                      "winner_criteria"
                    ],
                    "type": "object",
                    "properties": {
                      "winner_criteria": {
                        "title": "Winning Criteria",
                        "type": "string",
                        "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                        "enum": [
                          "opens",
                          "clicks",
                          "manual",
                          "total_revenue"
                        ]
                      },
                      "wait_time": {
                        "title": "Wait Time",
                        "type": "integer",
                        "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                      },
                      "test_size": {
                        "title": "Test Size",
                        "type": "integer",
                        "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                      },
                      "subject_lines": {
                        "title": "Subject Lines",
                        "type": "array",
                        "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "send_times": {
                        "title": "Send Times",
                        "type": "array",
                        "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                        "items": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "from_names": {
                        "title": "From Names",
                        "type": "array",
                        "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "reply_to_addresses": {
                        "title": "Reply To Addresses",
                        "type": "array",
                        "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "The settings specific to A/B test campaigns."
                  },
                  "tracking": {
                    "title": "Campaign Tracking Options",
                    "type": "object",
                    "properties": {
                      "opens": {
                        "title": "Opens",
                        "type": "boolean",
                        "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                      },
                      "html_clicks": {
                        "title": "HTML Click Tracking",
                        "type": "boolean",
                        "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                      },
                      "text_clicks": {
                        "title": "Plain-Text Click Tracking",
                        "type": "boolean",
                        "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                      },
                      "goal_tracking": {
                        "title": "Mailchimp Goal Tracking",
                        "type": "boolean",
                        "description": "Deprecated"
                      },
                      "ecomm360": {
                        "title": "E-commerce Tracking",
                        "type": "boolean",
                        "description": "Whether to enable e-commerce tracking."
                      },
                      "google_analytics": {
                        "title": "Google Analytics Tracking",
                        "type": "string",
                        "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                      },
                      "clicktale": {
                        "title": "ClickTale Analytics Tracking",
                        "type": "string",
                        "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                      },
                      "salesforce": {
                        "title": "Salesforce CRM Tracking",
                        "type": "object",
                        "properties": {
                          "campaign": {
                            "title": "Salesforce Campaign",
                            "type": "boolean",
                            "description": "Create a campaign in a connected Salesforce account."
                          },
                          "notes": {
                            "title": "Salesforce Note",
                            "type": "boolean",
                            "description": "Update contact notes for a campaign based on subscriber email addresses."
                          }
                        },
                        "description": "Deprecated"
                      },
                      "capsule": {
                        "title": "Capsule CRM Tracking",
                        "type": "object",
                        "properties": {
                          "notes": {
                            "title": "Capsule Note",
                            "type": "boolean",
                            "description": "Update contact notes for a campaign based on subscriber email addresses."
                          }
                        },
                        "description": "Deprecated"
                      }
                    },
                    "description": "The tracking options for a campaign."
                  },
                  "rss_opts": {
                    "title": "RSS Options",
                    "required": [
                      "feed_url",
                      "frequency"
                    ],
                    "type": "object",
                    "properties": {
                      "feed_url": {
                        "title": "Feed URL",
                        "type": "string",
                        "description": "The URL for the RSS feed.",
                        "format": "uri"
                      },
                      "frequency": {
                        "title": "Frequency",
                        "type": "string",
                        "description": "The frequency of the RSS Campaign.",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ]
                      },
                      "schedule": {
                        "title": "Sending Schedule",
                        "type": "object",
                        "properties": {
                          "hour": {
                            "title": "Sending Hour",
                            "maximum": 23,
                            "minimum": 0,
                            "type": "integer",
                            "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                          },
                          "daily_send": {
                            "title": "Daily Sending Days",
                            "type": "object",
                            "properties": {
                              "sunday": {
                                "title": "Sunday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Sundays."
                              },
                              "monday": {
                                "title": "Monday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Mondays."
                              },
                              "tuesday": {
                                "title": "tuesday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Tuesdays."
                              },
                              "wednesday": {
                                "title": "Monday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Wednesdays."
                              },
                              "thursday": {
                                "title": "Thursday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Thursdays."
                              },
                              "friday": {
                                "title": "Friday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Fridays."
                              },
                              "saturday": {
                                "title": "Saturday",
                                "type": "boolean",
                                "description": "Sends the daily RSS Campaign on Saturdays."
                              }
                            },
                            "description": "The days of the week to send a daily RSS Campaign."
                          },
                          "weekly_send_day": {
                            "title": "Weekly Sending Day",
                            "type": "string",
                            "description": "The day of the week to send a weekly RSS Campaign.",
                            "enum": [
                              "sunday",
                              "monday",
                              "tuesday",
                              "wednesday",
                              "thursday",
                              "friday",
                              "saturday"
                            ]
                          },
                          "monthly_send_date": {
                            "title": "Monthly Sending Day",
                            "maximum": 31,
                            "minimum": 0,
                            "type": "number",
                            "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                          }
                        },
                        "description": "The schedule for sending the RSS Campaign."
                      },
                      "constrain_rss_img": {
                        "title": "Constrain RSS Images",
                        "type": "boolean",
                        "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                      }
                    },
                    "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                  },
                  "social_card": {
                    "title": "Campaign Social Card",
                    "type": "object",
                    "properties": {
                      "image_url": {
                        "title": "Image URL",
                        "type": "string",
                        "description": "The url for the header image for the card."
                      },
                      "description": {
                        "title": "Campaign Description",
                        "type": "string",
                        "description": "A short summary of the campaign to display."
                      },
                      "title": {
                        "title": "Title",
                        "type": "string",
                        "description": "The title for the card. Typically the subject line of the campaign."
                      }
                    },
                    "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                  }
                },
                "description": "A summary of an individual campaign's settings and content."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version in ISO 8601 format.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together.",
                      "enum": [
                        "template",
                        "html",
                        "url",
                        "multichannel"
                      ]
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_is_active": {
                          "title": "List Status",
                          "type": "boolean",
                          "description": "The status of the list used, namely if it's deleted or disabled.",
                          "readOnly": true
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign."
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version in ISO 8601 format.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together.",
                      "enum": [
                        "template",
                        "html",
                        "url",
                        "multichannel"
                      ]
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_is_active": {
                          "title": "List Status",
                          "type": "boolean",
                          "description": "The status of the list used, namely if it's deleted or disabled.",
                          "readOnly": true
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage out-of-office replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign."
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "x-custom-config": {
          "methodNameSnake": "update",
          "methodNameCamel": "update"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}/actions/cancel-send": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Cancel campaign",
        "description": "Cancel a Regular or Plain-Text Campaign after you send, before all of your recipients receive it. This feature is included with Mailchimp Pro.",
        "operationId": "postCampaignsIdActionsCancelSend",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-pro-required": true,
        "x-custom-config": {
          "methodNameSnake": "cancel_send",
          "methodNameCamel": "cancelSend"
        }
      }
    },
    "/campaigns/{campaign_id}/actions/replicate": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Replicate campaign",
        "description": "Replicate a campaign in saved or send status.",
        "operationId": "postCampaignsIdActionsReplicate",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                      "readOnly": true
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "required": [
                        "list_id"
                      ],
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign.",
                          "readOnly": true
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "required": [
                        "winner_criteria"
                      ],
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "required": [
                        "feed_url",
                        "frequency"
                      ],
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens and clicks."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                      "readOnly": true
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "required": [
                        "list_id"
                      ],
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign.",
                          "readOnly": true
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "required": [
                        "winner_criteria"
                      ],
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "required": [
                        "feed_url",
                        "frequency"
                      ],
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens and clicks."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "replicate",
          "methodNameCamel": "replicate"
        }
      }
    },
    "/campaigns/{campaign_id}/actions/send": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Send campaign",
        "description": "Send a Mailchimp campaign. For RSS Campaigns, the campaign will send according to its schedule. All other campaigns will send immediately.",
        "operationId": "postCampaignsIdActionsSend",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "send",
          "methodNameCamel": "send"
        }
      }
    },
    "/campaigns/{campaign_id}/actions/schedule": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Schedule campaign",
        "description": "Schedule a campaign for delivery. If you're using Multivariate Campaigns to test send times or sending RSS Campaigns, use the send action instead.",
        "operationId": "postCampaignsIdActionsSchedule",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "schedule_time"
                ],
                "type": "object",
                "properties": {
                  "schedule_time": {
                    "title": "Schedule Time",
                    "type": "string",
                    "description": "The UTC date and time to schedule the campaign for delivery in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45).",
                    "format": "date-time"
                  },
                  "timewarp": {
                    "title": "Timewarp",
                    "type": "boolean",
                    "description": "Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/) when sending. Campaigns scheduled with Timewarp are localized based on the recipients' time zones. For example, a Timewarp campaign with a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to `true` for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/)."
                  },
                  "batch_delivery": {
                    "title": "Batch Delivery",
                    "required": [
                      "batch_count",
                      "batch_delay"
                    ],
                    "type": "object",
                    "properties": {
                      "batch_delay": {
                        "title": "Batch Delay",
                        "type": "integer",
                        "description": "The delay, in minutes, between batches."
                      },
                      "batch_count": {
                        "title": "Batch Count",
                        "type": "integer",
                        "description": "The number of batches for the campaign send."
                      }
                    },
                    "description": "Choose whether the campaign should use [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/). Cannot be set to `true` for campaigns using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "schedule",
          "methodNameCamel": "schedule"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}/actions/unschedule": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Unschedule campaign",
        "description": "Unschedule a scheduled campaign that hasn't started sending.",
        "operationId": "postCampaignsIdActionsUnschedule",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "unschedule",
          "methodNameCamel": "unschedule"
        }
      }
    },
    "/campaigns/{campaign_id}/actions/test": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Send test email",
        "description": "Send a test email.",
        "operationId": "postCampaignsIdActionsTest",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "send_type",
                  "test_emails"
                ],
                "type": "object",
                "properties": {
                  "test_emails": {
                    "title": "Test Emails",
                    "type": "array",
                    "description": "An array of email addresses to send the test email to.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "send_type": {
                    "title": "Type of email to test",
                    "type": "string",
                    "description": "Choose the type of test email to send.",
                    "enum": [
                      "html",
                      "plaintext"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "send_test_email",
          "methodNameCamel": "sendTestEmail"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}/actions/pause": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Pause rss campaign",
        "description": "Pause an RSS-Driven campaign.",
        "operationId": "postCampaignsIdActionsPause",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "pause",
          "methodNameCamel": "pause"
        }
      }
    },
    "/campaigns/{campaign_id}/actions/resume": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Resume rss campaign",
        "description": "Resume an RSS-Driven campaign.",
        "operationId": "postCampaignsIdActionsResume",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "resume",
          "methodNameCamel": "resume"
        }
      }
    },
    "/campaigns/{campaign_id}/actions/create-resend": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Resend campaign",
        "description": "Creates a Resend to Non-Openers version of this campaign. We will also check if this campaign meets the criteria for Resend to Non-Openers campaigns.",
        "operationId": "postCampaignsIdActionsCreateResend",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                      "readOnly": true
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "required": [
                        "list_id"
                      ],
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign.",
                          "readOnly": true
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "required": [
                        "winner_criteria"
                      ],
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "required": [
                        "feed_url",
                        "frequency"
                      ],
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens and clicks."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "A string that uniquely identifies this campaign.",
                      "readOnly": true
                    },
                    "web_id": {
                      "title": "Campaign Web ID",
                      "type": "integer",
                      "description": "The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                      "readOnly": true
                    },
                    "parent_campaign_id": {
                      "title": "Parent Campaign ID",
                      "type": "string",
                      "description": "If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.",
                      "readOnly": true
                    },
                    "type": {
                      "title": "Campaign Type",
                      "type": "string",
                      "description": "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                      "enum": [
                        "regular",
                        "plaintext",
                        "absplit",
                        "rss",
                        "variate"
                      ]
                    },
                    "create_time": {
                      "title": "Create Time",
                      "type": "string",
                      "description": "The date and time the campaign was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "archive_url": {
                      "title": "Archive URL",
                      "type": "string",
                      "description": "The link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "long_archive_url": {
                      "title": "Long Archive URL",
                      "type": "string",
                      "description": "The original link to the campaign's archive version.",
                      "readOnly": true
                    },
                    "status": {
                      "title": "Campaign Status",
                      "type": "string",
                      "description": "The current status of the campaign.",
                      "readOnly": true,
                      "enum": [
                        "save",
                        "paused",
                        "schedule",
                        "sending",
                        "sent",
                        "canceled",
                        "canceling",
                        "archived"
                      ]
                    },
                    "emails_sent": {
                      "title": "Emails Sent",
                      "type": "integer",
                      "description": "The total number of emails sent for this campaign.",
                      "readOnly": true
                    },
                    "send_time": {
                      "title": "Send Time",
                      "type": "string",
                      "description": "The date and time a campaign was sent in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string",
                      "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                      "readOnly": true
                    },
                    "needs_block_refresh": {
                      "title": "Needs Block Refresh",
                      "type": "boolean",
                      "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.",
                      "readOnly": true
                    },
                    "resendable": {
                      "title": "Resendable",
                      "type": "boolean",
                      "description": "Determines if the campaign qualifies to be resent to non-openers.",
                      "readOnly": true
                    },
                    "recipients": {
                      "title": "List",
                      "required": [
                        "list_id"
                      ],
                      "type": "object",
                      "properties": {
                        "list_id": {
                          "title": "List ID",
                          "type": "string",
                          "description": "The unique list id."
                        },
                        "list_name": {
                          "title": "List Name",
                          "type": "string",
                          "description": "The name of the list.",
                          "readOnly": true
                        },
                        "segment_text": {
                          "title": "Segment Text",
                          "type": "string",
                          "description": "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.",
                          "readOnly": true
                        },
                        "recipient_count": {
                          "title": "Recipient Count",
                          "type": "integer",
                          "description": "Count of the recipients on the associated list. Formatted as an integer.",
                          "readOnly": true
                        },
                        "segment_opts": {
                          "title": "Segment Options",
                          "type": "object",
                          "properties": {
                            "saved_segment_id": {
                              "title": "Saved Segment ID",
                              "type": "integer",
                              "description": "The id for an existing saved segment."
                            },
                            "prebuilt_segment_id": {
                              "title": "Prebuilt Segment Id",
                              "type": "string",
                              "description": "The prebuilt segment id, if a prebuilt segment has been designated for this campaign.",
                              "example": "subscribers-female"
                            },
                            "match": {
                              "title": "Match Type",
                              "type": "string",
                              "description": "Segment match type.",
                              "enum": [
                                "any",
                                "all"
                              ]
                            },
                            "conditions": {
                              "title": "Segment Type",
                              "type": "array",
                              "description": "Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).",
                              "items": {
                                "type": "object",
                                "x-oneOf": [
                                  {
                                    "type": "object",
                                    "title": "Aim Segment",
                                    "description": "Segment by interaction with a specific campaign.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Aim",
                                        "enum": [
                                          "Aim"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "aim"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a specific campaign.",
                                        "example": "aim"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "open",
                                          "click",
                                          "sent",
                                          "noopen",
                                          "noclick",
                                          "nosent"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to their campaign interaction. One of the following: opened, clicked, was sent, didn't open, didn't click, or was not sent.",
                                        "example": "open"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Automation Segment",
                                    "description": "Segment by interaction with an Automation workflow.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Automation",
                                        "enum": [
                                          "Automation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "automation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with an Automation workflow.",
                                        "example": "automation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the automation workflow. One of the following: has started the workflow, has completed the workflow, has not started the workflow, or has not completed the workflow.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id for the automation workflow to segment against.",
                                        "example": "2135217"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Poll Activity Segment",
                                    "description": "Segment by poll activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "CampaignPoll",
                                        "enum": [
                                          "CampaignPoll"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "poll"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by poll activity.",
                                        "example": "poll"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members have/have not interacted with a specific poll in a Mailchimp email.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the poll.",
                                        "example": 409
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Conversation Segment",
                                    "description": "Segment by interaction with a campaign via Conversations.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Conversation",
                                        "enum": [
                                          "Conversation"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "conversation"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a campaign via Conversations.",
                                        "example": "conversation"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of a member's interaction with a conversation. One of the following: has replied or has not replied.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The web id value for a specific campaign or 'any' to account for subscribers who have/have not interacted with any campaigns.",
                                        "example": "any"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Segment",
                                    "description": "Segment by a specific date field.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Date",
                                        "enum": [
                                          "Date"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt",
                                          "info_changed",
                                          "ecomm_date"
                                        ],
                                        "title": "Segment Field",
                                        "description": "The type of date field to segment on: The opt-in time for a signup, the date the subscriber was last updated, or the date of their last ecomm purchase.",
                                        "example": "timestamp_opt"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "within",
                                          "notwithin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "When the event took place:  Before, after, is a specific date, is not a specific date, is blank, or is not blank.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent.",
                                        "example": "date"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra Value",
                                        "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign.",
                                        "example": "2015-01-30T00:00:00.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Client Segment",
                                    "description": "Segment by use of a particular email client.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailClient",
                                        "enum": [
                                          "EmailClient"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "email_client"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by use of a particular email client.",
                                        "example": "email_client"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "client_is",
                                          "client_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The operation to determine whether we select clients that match the value, or clients that do not match the value.",
                                        "example": "client_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The name of the email client.",
                                        "example": "Gmail"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Language Segment",
                                    "description": "Segment by language.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Language",
                                        "enum": [
                                          "Language"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "language"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's language.",
                                        "example": "language"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's language is or is not set to a specific language.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "A two-letter language identifier.",
                                        "example": "en"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Member Rating Segment",
                                    "description": "Segment by member rating.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "MemberRating",
                                        "enum": [
                                          "MemberRating"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "rating"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by member rating.",
                                        "example": "rating"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have a rating that is/not exactly a given number or members who have a rating greater/less than a given number.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The star rating number to segment against.",
                                        "example": 4
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Signup Source Segment",
                                    "description": "Segment by signup source.",
                                    "required": [
                                      "field",
                                      "condition_type",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "enum": [
                                          "SignupSource"
                                        ],
                                        "x-value": "SignupSource",
                                        "title": "Type"
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "source"
                                        ],
                                        "title": "Segment Field",
                                        "example": "source"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "source_is",
                                          "source_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's signup source was/was not a particular value.",
                                        "example": "source_is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The signup source.",
                                        "example": "List Import"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Survey Monkey Segment",
                                    "description": "Segment by interaction with a SurveyMonkey survey.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SurveyMonkey",
                                        "enum": [
                                          "SurveyMonkey"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "survey_monkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by interaction with a SurveyMonkey survey.",
                                        "example": "survey_monkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "started",
                                          "completed",
                                          "not_started",
                                          "not_completed"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The status of the member with regard to the survey.One of the following: has started the survey, has completed the survey, has not started the survey, or has not completed the survey.",
                                        "example": "started"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Survey ID",
                                        "description": "The unique ID of the survey monkey survey.",
                                        "example": "32179586"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "VIP Segment",
                                    "description": "Segment by VIP status.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "VIP",
                                        "enum": [
                                          "VIP"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "gmonkey"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by VIP status.",
                                        "example": "gmonkey"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is or is not marked as VIP.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Interests Segment",
                                    "description": "Segment by an interest group merge field.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "Interests",
                                        "enum": [
                                          "Interests"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "Segmenting based on interest group information. This should start with 'interests-' followed by the grouping id. Ex. 'interests-123'.",
                                        "example": "interests-123"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "interestcontains",
                                          "interestcontainsall",
                                          "interestnotcontains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member is a part of one, all, or none of the groups.",
                                        "example": "interestcontains"
                                      },
                                      "value": {
                                        "type": "array",
                                        "title": "Segment Value",
                                        "description": "An array containing strings, each representing a group id.",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "44401",
                                            "44405",
                                            "44409"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Category Segment",
                                    "description": "Segment by purchases in specific items or categories.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommCategory",
                                        "enum": [
                                          "EcommCategory"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_cat",
                                          "ecomm_prod"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases in specific items or categories.",
                                        "example": "ecomm_cat"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "A member who has purchased from a category/specific item that is/is not a specific name, where the category/item name contains/doesn't contain a specific phrase or string, or a category/item name that starts/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The ecommerce category/item information.",
                                        "example": "Product"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Number Segment",
                                    "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommNumber",
                                        "enum": [
                                          "EcommNumber"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_avg",
                                          "ecomm_orders",
                                          "ecomm_prod_all",
                                          "ecomm_avg_ord"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by average spent total, number of orders, total number of products purchased, or average number of products per order.",
                                        "example": "ecomm_orders"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Segment",
                                    "description": "Segment by whether someone has purchased anything.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommPurchased",
                                        "enum": [
                                          "EcommPurchased"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_purchased"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by whether someone has purchased anything.",
                                        "example": "ecomm_purchased"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have have ('member') or have not ('notmember') purchased.",
                                        "example": "member"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Spent Segment",
                                    "description": "Segment by amount spent on a single order or across all orders.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommSpent",
                                        "enum": [
                                          "EcommSpent"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_spent_one",
                                          "ecomm_spent_all"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by amount spent on a single order or across all orders.",
                                        "example": "ecomm_spent_one"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have spent 'more' or 'less' than then specified value.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The total amount a member spent.",
                                        "example": 42
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Ecommerce Purchased Store Segment",
                                    "description": "Segment by purchases from a specific store.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EcommStore",
                                        "enum": [
                                          "EcommStore"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ecomm_store"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by purchases from a specific store.",
                                        "example": "ecomm_store"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have or have not purchased from a specific store.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Operator",
                                        "description": "The store id to segment against.",
                                        "example": "289"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Activity Segment",
                                    "description": "Segment by Goal activity.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalActivity",
                                        "enum": [
                                          "GoalActivity"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by Goal activity.",
                                        "example": "goal"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "goal_not",
                                          "contains",
                                          "goal_notcontain",
                                          "starts",
                                          "ends"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The URL to check Goal activity against."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Goal Timestamp Segment",
                                    "description": "Segment by most recent interaction with a website.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "GoalTimestamp",
                                        "enum": [
                                          "GoalTimestamp"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "goal_last_visited"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by most recent interaction with a website.",
                                        "example": "goal_last_visited"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "greater",
                                          "less",
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the website activity happened after, before, or at a given timestamp.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The date to check Goal activity against.",
                                        "example": "2015-07-20T19:45:21.000Z"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Similar Subscribers Segment Member Segment",
                                    "description": "Segment by similar subscribers.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "FuzzySegment",
                                        "enum": [
                                          "FuzzySegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by similar subscribers.",
                                        "example": "fuzzy_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "fuzzy_is",
                                          "fuzzy_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a 'similar subscribers' segment.",
                                        "example": "fuzzy_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the 'similar subscribers' segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Static Segment Member Segment",
                                    "description": "Segment by a given static segment.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "StaticSegment",
                                        "enum": [
                                          "StaticSegment"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "static_segment"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by a given static segment.",
                                        "example": "static_segment"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "static_is",
                                          "static_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/are not apart of a static segment.",
                                        "example": "static_is"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The id for the static segment.",
                                        "example": 48433
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Location-Based Segment",
                                    "description": "Segment by a specific country or US state.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoCountryState",
                                        "enum": [
                                          "IPGeoCountryState"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeocountry",
                                          "ipgeonotcountry",
                                          "ipgeostate",
                                          "ipgeonotstate"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific country or US state.",
                                        "example": "ipgeocountry"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "The two-letter country code or US state abbreviation.",
                                        "example": "US"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Geolocation Segment",
                                    "description": "Segment by a specific geographic region.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "addr",
                                      "lat",
                                      "lng"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoIn",
                                        "enum": [
                                          "IPGeoIn"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoin",
                                          "ipgeonotin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific geographic region.",
                                        "example": "ipgeoin"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 42
                                      },
                                      "addr": {
                                        "type": "string",
                                        "title": "Segment Location Address",
                                        "description": "The address of the target location.",
                                        "example": "Atlanta, GA, USA"
                                      },
                                      "lat": {
                                        "type": "string",
                                        "title": "Segment Location Latitude",
                                        "description": "The latitude of the target location.",
                                        "example": "33.7489954"
                                      },
                                      "lng": {
                                        "type": "string",
                                        "title": "Segment Location Longitude",
                                        "description": "The longitude of the target location.",
                                        "example": -84.3879824
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "US Zip Code Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoInZip",
                                        "enum": [
                                          "IPGeoInZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoinzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are within a specific US zip code.",
                                        "example": "ipgeoinzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The radius of the target location.",
                                        "example": 25
                                      },
                                      "extra": {
                                        "type": "integer",
                                        "title": "Extra Data",
                                        "description": "The zip code to segment against.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Unknown Location-Based Segment",
                                    "description": "Segment members whose location information is unknown.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoUnknown",
                                        "enum": [
                                          "IPGeoUnknown"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeounknown"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members for which location information is unknown.",
                                        "example": "ipgeounknown"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Zip Code Location-Based Segment",
                                    "description": "Segment by a specific US ZIP code.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "IPGeoZip",
                                        "enum": [
                                          "IPGeoZip"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeo"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting subscribers who are within a specific location.",
                                        "example": "ipgeo"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "ipgeoiszip",
                                          "ipgeonotzip"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Segment members who are/are not within a specific US zip code.",
                                        "example": "ipgeonotzip"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "title": "Segment Data",
                                        "description": "The 5-digit zip code.",
                                        "example": 30318
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Age Segment",
                                    "description": "Segment by age ranges in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialAge",
                                        "enum": [
                                          "SocialAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_age"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by age ranges in Social Profiles data.",
                                        "example": "social_age"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-54",
                                          "55+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The age range to segment.",
                                        "example": "35-54"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Gender Segment",
                                    "description": "Segment by listed gender in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialGender",
                                        "enum": [
                                          "SocialGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by listed gender in Social Profiles data.",
                                        "example": "social_gender"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Influence Segment",
                                    "description": "Segment by influence rating in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialInfluence",
                                        "enum": [
                                          "SocialInfluence"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_influence"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by influence rating in Social Profiles data.",
                                        "example": "social_influence"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who have a rating that is/not or greater/less than the rating provided.",
                                        "example": "greater"
                                      },
                                      "value": {
                                        "type": "number",
                                        "title": "Segment Operator",
                                        "description": "The Social Profiles influence rating to segment.",
                                        "example": 2
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkMember",
                                        "enum": [
                                          "SocialNetworkMember"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "member",
                                          "notmember"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not on a given social network.",
                                        "example": "member"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter",
                                          "facebook",
                                          "linkedin",
                                          "flickr",
                                          "foursquare",
                                          "lastfm",
                                          "myspace",
                                          "quora",
                                          "vimeo",
                                          "yelp",
                                          "youtube"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Social Profiles Social Network Follow Segment",
                                    "description": "Segment by social network in Social Profiles data.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SocialNetworkFollow",
                                        "enum": [
                                          "SocialNetworkFollow"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "social_network"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by social network in Social Profiles data.",
                                        "example": "social_network"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "follow",
                                          "notfollow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not following a linked account on a given social network.",
                                        "example": "follow"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "twitter_follow"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The social network to segment against.",
                                        "example": "twitter_follow"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address Merge Field Segment",
                                    "description": "Segment by an address-type merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "AddressMerge",
                                        "enum": [
                                          "AddressMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address-type merge field to segment.",
                                        "example": "MMERGE3"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "notcontain",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field contains/does not contain a value or is/is not blank.",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Atlanta"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Address/Zip Merge Field Segment",
                                    "description": "Segment by an address-type merge field within a given distance.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value",
                                      "extra"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "ZipMerge",
                                        "enum": [
                                          "ZipMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "An address or zip-type merge field to segment.",
                                        "example": "MMERGE2"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "geoin"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's address merge field is within a given distance from a city or zip.",
                                        "example": "geoin"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The distance from the city/zip.",
                                        "example": "25"
                                      },
                                      "extra": {
                                        "type": "string",
                                        "title": "Segment Extra",
                                        "description": "The city or the zip being used to segment against.",
                                        "example": "30318"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Birthday Merge Field Segment",
                                    "description": "Segment by a contact's birthday.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "BirthdayMerge",
                                        "enum": [
                                          "BirthdayMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE4"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's birthday merge information is/is not a certain date or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against (mm/dd).",
                                        "example": "01/30"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Date Merge Field Segment",
                                    "description": "Segment by a given date merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "DateMerge",
                                        "enum": [
                                          "DateMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A date merge field to segment.",
                                        "example": "MMERGE5"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "less",
                                          "blank",
                                          "blank_not",
                                          "greater"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, is greater/less than a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "A date to segment against.",
                                        "example": "01/30/2015"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Dropdown/Radio Merge Field Segment",
                                    "description": "An individual segment condition",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "SelectMerge",
                                        "enum": [
                                          "SelectMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A merge field to segment.",
                                        "example": "MMERGE6"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "blank",
                                          "blank_not",
                                          "notcontain",
                                          "contains"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not a value or is/is not blank.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text merge field with.",
                                        "example": "Second Choice"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Text or Number Merge Field Segment",
                                    "description": "Segment by a given text or number merge field.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "TextMerge",
                                        "enum": [
                                          "TextMerge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "title": "Segment Field",
                                        "description": "A text or number merge field to segment.",
                                        "example": "MMERGE7"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less",
                                          "blank",
                                          "blank_not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the member's merge information is/is not, contains/does not contain, starts/ends with, or is greater/less than a value",
                                        "example": "contains"
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to segment a text or number merge field with.",
                                        "example": "Freddie's Jokes"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Email Segment",
                                    "description": "Segment by email address.",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "EmailAddress",
                                        "enum": [
                                          "EmailAddress"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "merge0",
                                          "EMAIL"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segmenting based off of a subscriber's email address.",
                                        "example": "EMAIL"
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not",
                                          "contains",
                                          "notcontain",
                                          "starts",
                                          "ends",
                                          "greater",
                                          "less"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Value",
                                        "description": "The value to compare the email against.",
                                        "example": "urist.mcvankab@freddiesjokes.com"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Gender Segment",
                                    "description": "Segment by predicted gender.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedGender",
                                        "enum": [
                                          "PredictedGender"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_gender"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted gender."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is",
                                          "not"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "male",
                                          "female"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted gender to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "Predicted Age Segment",
                                    "description": "Segment by predicted age.",
                                    "required": [
                                      "field",
                                      "op",
                                      "value"
                                    ],
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "PredictedAge",
                                        "enum": [
                                          "PredictedAge"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "predicted_age_range"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by predicted age."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "is"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Members who are/not the exact criteria listed.",
                                        "example": "is"
                                      },
                                      "value": {
                                        "type": "string",
                                        "enum": [
                                          "18-24",
                                          "25-34",
                                          "35-44",
                                          "45-54",
                                          "55-64",
                                          "65+"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "The predicted age to segment.",
                                        "example": "female"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "title": "New Subscribers Prebuilt Segment",
                                    "description": "Segment by when people subscribed.",
                                    "properties": {
                                      "condition_type": {
                                        "type": "string",
                                        "x-value": "NewSubscribers",
                                        "enum": [
                                          "NewSubscribers"
                                        ]
                                      },
                                      "field": {
                                        "type": "string",
                                        "enum": [
                                          "timestamp_opt"
                                        ],
                                        "title": "Segment Field",
                                        "description": "Segment by when people subscribed."
                                      },
                                      "op": {
                                        "type": "string",
                                        "enum": [
                                          "date_within"
                                        ],
                                        "title": "Segment Operator",
                                        "description": "Whe the event took place, namely within a time frame."
                                      },
                                      "value": {
                                        "type": "string",
                                        "title": "Segment Data",
                                        "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
                                      }
                                    }
                                  }
                                ],
                                "x-discriminator": {
                                  "type": "string",
                                  "propertyName": "condition_type"
                                }
                              }
                            }
                          },
                          "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options."
                        }
                      },
                      "description": "List settings for the campaign."
                    },
                    "settings": {
                      "title": "Campaign Settings",
                      "type": "object",
                      "properties": {
                        "subject_line": {
                          "title": "Campaign Subject Line",
                          "type": "string",
                          "description": "The subject line for the campaign."
                        },
                        "preview_text": {
                          "title": "Campaign Preview Text",
                          "type": "string",
                          "description": "The preview text for the campaign."
                        },
                        "title": {
                          "title": "Campaign Title",
                          "type": "string",
                          "description": "The title of the campaign."
                        },
                        "from_name": {
                          "title": "From Name",
                          "type": "string",
                          "description": "The 'from' name on the campaign (not an email address)."
                        },
                        "reply_to": {
                          "title": "Reply To Address",
                          "type": "string",
                          "description": "The reply-to email address for the campaign."
                        },
                        "use_conversation": {
                          "title": "Conversation",
                          "type": "boolean",
                          "description": "Use Mailchimp Conversation feature to manage replies."
                        },
                        "to_name": {
                          "title": "To Name",
                          "type": "string",
                          "description": "The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
                        },
                        "folder_id": {
                          "title": "Folder ID",
                          "type": "string",
                          "description": "If the campaign is listed in a folder, the id for that folder."
                        },
                        "authenticate": {
                          "title": "Authentication",
                          "type": "boolean",
                          "description": "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`."
                        },
                        "auto_footer": {
                          "title": "Auto-Footer",
                          "type": "boolean",
                          "description": "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign."
                        },
                        "inline_css": {
                          "title": "Inline CSS",
                          "type": "boolean",
                          "description": "Automatically inline the CSS included with the campaign content."
                        },
                        "auto_tweet": {
                          "title": "Auto-Tweet",
                          "type": "boolean",
                          "description": "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent."
                        },
                        "auto_fb_post": {
                          "title": "Auto Post to Facebook",
                          "type": "array",
                          "description": "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fb_comments": {
                          "title": "Facebook Comments",
                          "type": "boolean",
                          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                        },
                        "timewarp": {
                          "title": "Timewarp Send",
                          "type": "boolean",
                          "description": "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).",
                          "readOnly": true
                        },
                        "template_id": {
                          "title": "Template ID",
                          "type": "integer",
                          "description": "The id for the template used in this campaign.",
                          "readOnly": true
                        },
                        "drag_and_drop": {
                          "title": "Drag And Drop Campaign",
                          "type": "boolean",
                          "description": "Whether the campaign uses the drag-and-drop editor.",
                          "readOnly": true
                        }
                      },
                      "description": "The settings for your campaign, including subject, from name, reply-to address, and more."
                    },
                    "variate_settings": {
                      "title": "A/B Test Options",
                      "required": [
                        "winner_criteria"
                      ],
                      "type": "object",
                      "properties": {
                        "winning_combination_id": {
                          "title": "Winning Combination ID",
                          "type": "string",
                          "description": "ID for the winning combination.",
                          "readOnly": true
                        },
                        "winning_campaign_id": {
                          "title": "Winning Campaign ID",
                          "type": "string",
                          "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                          "readOnly": true
                        },
                        "winner_criteria": {
                          "title": "Winning Criteria",
                          "type": "string",
                          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual",
                            "total_revenue"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                        },
                        "test_size": {
                          "title": "Test Size",
                          "type": "integer",
                          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                        },
                        "subject_lines": {
                          "title": "Subject Lines",
                          "type": "array",
                          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "send_times": {
                          "title": "Send Times",
                          "type": "array",
                          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                          "items": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "from_names": {
                          "title": "From Names",
                          "type": "array",
                          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "reply_to_addresses": {
                          "title": "Reply To Addresses",
                          "type": "array",
                          "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contents": {
                          "title": "Content Descriptions",
                          "type": "array",
                          "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "combinations": {
                          "title": "Combinations",
                          "type": "array",
                          "description": "Combinations of possible variables used to build emails.",
                          "readOnly": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "ID",
                                "type": "string",
                                "description": "Unique ID for the combination."
                              },
                              "subject_line": {
                                "title": "Subject Line",
                                "type": "integer",
                                "description": "The index of `variate_settings.subject_lines` used."
                              },
                              "send_time": {
                                "title": "Send Time",
                                "type": "integer",
                                "description": "The index of `variate_settings.send_times` used."
                              },
                              "from_name": {
                                "title": "From Name",
                                "type": "integer",
                                "description": "The index of `variate_settings.from_names` used."
                              },
                              "reply_to": {
                                "title": "Reply To",
                                "type": "integer",
                                "description": "The index of `variate_settings.reply_to_addresses` used."
                              },
                              "content_description": {
                                "title": "Content Description",
                                "type": "integer",
                                "description": "The index of `variate_settings.contents` used."
                              },
                              "recipients": {
                                "title": "Recipients",
                                "type": "integer",
                                "description": "The number of recipients for this combination."
                              }
                            }
                          }
                        }
                      },
                      "description": "The settings specific to A/B test campaigns."
                    },
                    "tracking": {
                      "title": "Campaign Tracking Options",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Opens",
                          "type": "boolean",
                          "description": "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "html_clicks": {
                          "title": "HTML Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "text_clicks": {
                          "title": "Plain-Text Click Tracking",
                          "type": "boolean",
                          "description": "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                        },
                        "goal_tracking": {
                          "title": "Mailchimp Goal Tracking",
                          "type": "boolean",
                          "description": "Deprecated"
                        },
                        "ecomm360": {
                          "title": "E-commerce Tracking",
                          "type": "boolean",
                          "description": "Whether to enable e-commerce tracking."
                        },
                        "google_analytics": {
                          "title": "Google Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes)."
                        },
                        "clicktale": {
                          "title": "ClickTale Analytics Tracking",
                          "type": "string",
                          "description": "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes)."
                        },
                        "salesforce": {
                          "title": "Salesforce CRM Tracking",
                          "type": "object",
                          "properties": {
                            "campaign": {
                              "title": "Salesforce Campaign",
                              "type": "boolean",
                              "description": "Create a campaign in a connected Salesforce account."
                            },
                            "notes": {
                              "title": "Salesforce Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        },
                        "capsule": {
                          "title": "Capsule CRM Tracking",
                          "type": "object",
                          "properties": {
                            "notes": {
                              "title": "Capsule Note",
                              "type": "boolean",
                              "description": "Update contact notes for a campaign based on subscriber email addresses."
                            }
                          },
                          "description": "Deprecated"
                        }
                      },
                      "description": "The tracking options for a campaign."
                    },
                    "rss_opts": {
                      "title": "RSS Options",
                      "required": [
                        "feed_url",
                        "frequency"
                      ],
                      "type": "object",
                      "properties": {
                        "feed_url": {
                          "title": "Feed URL",
                          "type": "string",
                          "description": "The URL for the RSS feed.",
                          "format": "uri"
                        },
                        "frequency": {
                          "title": "Frequency",
                          "type": "string",
                          "description": "The frequency of the RSS Campaign.",
                          "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                          ]
                        },
                        "schedule": {
                          "title": "Sending Schedule",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "title": "Sending Hour",
                              "maximum": 23,
                              "minimum": 0,
                              "type": "integer",
                              "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/)."
                            },
                            "daily_send": {
                              "title": "Daily Sending Days",
                              "type": "object",
                              "properties": {
                                "sunday": {
                                  "title": "Sunday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Sundays."
                                },
                                "monday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Mondays."
                                },
                                "tuesday": {
                                  "title": "tuesday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Tuesdays."
                                },
                                "wednesday": {
                                  "title": "Monday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Wednesdays."
                                },
                                "thursday": {
                                  "title": "Thursday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Thursdays."
                                },
                                "friday": {
                                  "title": "Friday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Fridays."
                                },
                                "saturday": {
                                  "title": "Saturday",
                                  "type": "boolean",
                                  "description": "Sends the daily RSS Campaign on Saturdays."
                                }
                              },
                              "description": "The days of the week to send a daily RSS Campaign."
                            },
                            "weekly_send_day": {
                              "title": "Weekly Sending Day",
                              "type": "string",
                              "description": "The day of the week to send a weekly RSS Campaign.",
                              "enum": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                              ]
                            },
                            "monthly_send_date": {
                              "title": "Monthly Sending Day",
                              "maximum": 31,
                              "minimum": 0,
                              "type": "number",
                              "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                            }
                          },
                          "description": "The schedule for sending the RSS Campaign."
                        },
                        "last_sent": {
                          "title": "Last Sent",
                          "type": "string",
                          "description": "The date the campaign was last sent.",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "constrain_rss_img": {
                          "title": "Constrain RSS Images",
                          "type": "boolean",
                          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                        }
                      },
                      "description": "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign."
                    },
                    "ab_split_opts": {
                      "title": "A/B Testing Options",
                      "type": "object",
                      "properties": {
                        "split_test": {
                          "title": "Split Test",
                          "type": "string",
                          "description": "The type of AB split to run.",
                          "enum": [
                            "subject",
                            "from_name",
                            "schedule"
                          ]
                        },
                        "pick_winner": {
                          "title": "Pick Winner",
                          "type": "string",
                          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                          "enum": [
                            "opens",
                            "clicks",
                            "manual"
                          ]
                        },
                        "wait_units": {
                          "title": "Wait Time",
                          "type": "string",
                          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                          "enum": [
                            "hours",
                            "days"
                          ]
                        },
                        "wait_time": {
                          "title": "Wait Time",
                          "type": "integer",
                          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                        },
                        "split_size": {
                          "title": "Split Size",
                          "maximum": 50,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                        },
                        "from_name_a": {
                          "title": "From Name Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group A."
                        },
                        "from_name_b": {
                          "title": "From Name Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the name for Group B."
                        },
                        "reply_email_a": {
                          "title": "Reply Email Group A",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                        },
                        "reply_email_b": {
                          "title": "Reply Email Group B",
                          "type": "string",
                          "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                        },
                        "subject_a": {
                          "title": "Subject Line Group A",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                        },
                        "subject_b": {
                          "title": "Subject Line Group B",
                          "type": "string",
                          "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                        },
                        "send_time_a": {
                          "title": "Send Time Group A",
                          "type": "string",
                          "description": "The send time for Group A.",
                          "format": "date-time"
                        },
                        "send_time_b": {
                          "title": "Send Time Group B",
                          "type": "string",
                          "description": "The send time for Group B.",
                          "format": "date-time"
                        },
                        "send_time_winner": {
                          "title": "Send Time Winner",
                          "type": "string",
                          "description": "The send time for the winning version."
                        }
                      },
                      "description": "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.",
                      "readOnly": true
                    },
                    "social_card": {
                      "title": "Campaign Social Card",
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "title": "Image URL",
                          "type": "string",
                          "description": "The url for the header image for the card."
                        },
                        "description": {
                          "title": "Campaign Description",
                          "type": "string",
                          "description": "A short summary of the campaign to display."
                        },
                        "title": {
                          "title": "Title",
                          "type": "string",
                          "description": "The title for the card. Typically the subject line of the campaign."
                        }
                      },
                      "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
                    },
                    "report_summary": {
                      "title": "Campaign Report Summary",
                      "type": "object",
                      "properties": {
                        "opens": {
                          "title": "Automation Opens",
                          "type": "integer",
                          "description": "The total number of opens for a campaign.",
                          "readOnly": true
                        },
                        "unique_opens": {
                          "title": "Unique Opens",
                          "type": "integer",
                          "description": "The number of unique opens.",
                          "readOnly": true
                        },
                        "open_rate": {
                          "title": "Open Rate",
                          "type": "number",
                          "description": "The number of unique opens divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "clicks": {
                          "title": "Total Clicks",
                          "type": "integer",
                          "description": "The total number of clicks for an campaign.",
                          "readOnly": true
                        },
                        "subscriber_clicks": {
                          "title": "Unique Subscriber Clicks",
                          "type": "integer",
                          "description": "The number of unique clicks.",
                          "readOnly": true
                        },
                        "click_rate": {
                          "title": "Click Rate",
                          "type": "number",
                          "description": "The number of unique clicks divided by the total number of successful deliveries.",
                          "readOnly": true
                        },
                        "ecommerce": {
                          "title": "E-Commerce Report",
                          "type": "object",
                          "properties": {
                            "total_orders": {
                              "title": "Total Orders",
                              "type": "integer",
                              "description": "The total orders for a campaign.",
                              "readOnly": true
                            },
                            "total_spent": {
                              "title": "Total Spent",
                              "type": "number",
                              "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                              "readOnly": true
                            },
                            "total_revenue": {
                              "title": "Total Revenue",
                              "type": "number",
                              "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                              "readOnly": true
                            }
                          },
                          "description": "E-Commerce stats for a campaign."
                        }
                      },
                      "description": "For sent campaigns, a summary of opens and clicks."
                    },
                    "delivery_status": {
                      "title": "Campaign Delivery Status",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "title": "Delivery Status Enabled",
                          "type": "boolean",
                          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
                          "readOnly": true
                        },
                        "can_cancel": {
                          "title": "Campaign Cancelable",
                          "type": "boolean",
                          "description": "Whether a campaign send can be canceled.",
                          "readOnly": true
                        },
                        "status": {
                          "title": "Campaign Delivery Status",
                          "type": "string",
                          "description": "The current state of a campaign delivery.",
                          "readOnly": true,
                          "enum": [
                            "delivering",
                            "delivered",
                            "canceling",
                            "canceled"
                          ]
                        },
                        "emails_sent": {
                          "title": "Emails Sent",
                          "type": "integer",
                          "description": "The total number of emails confirmed sent for this campaign so far.",
                          "readOnly": true
                        },
                        "emails_canceled": {
                          "title": "Emails Canceled",
                          "type": "integer",
                          "description": "The total number of emails canceled for this campaign.",
                          "readOnly": true
                        }
                      },
                      "description": "Updates on campaigns in the process of sending."
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of an individual campaign's settings and content."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-pro-required": true,
        "x-custom-config": {
          "methodNameSnake": "create_resend",
          "methodNameCamel": "createResend"
        }
      }
    },
    "/campaigns/{campaign_id}/content": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Get campaign content",
        "description": "Get the the HTML and plain-text content for a campaign.",
        "operationId": "getCampaignsIdContent",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign Content",
                  "type": "object",
                  "properties": {
                    "variate_contents": {
                      "title": "Variate Contents",
                      "type": "array",
                      "description": "Content options for multivariate campaigns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content_label": {
                            "title": "Content Label",
                            "type": "string",
                            "description": "Label used to identify the content option.",
                            "example": "Green header"
                          },
                          "plain_text": {
                            "title": "Plain Text",
                            "type": "string",
                            "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                          },
                          "html": {
                            "title": "Campaign HTML",
                            "type": "string",
                            "description": "The raw HTML for the campaign.",
                            "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                          }
                        }
                      }
                    },
                    "plain_text": {
                      "title": "Plain Text",
                      "type": "string",
                      "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                    },
                    "html": {
                      "title": "Campaign HTML",
                      "type": "string",
                      "description": "The raw HTML for the campaign."
                    },
                    "archive_html": {
                      "title": "Campaign Archive HTML",
                      "type": "string",
                      "description": "The Archive HTML for the campaign.",
                      "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "The HTML and plain-text content for a campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign Content",
                  "type": "object",
                  "properties": {
                    "variate_contents": {
                      "title": "Variate Contents",
                      "type": "array",
                      "description": "Content options for multivariate campaigns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content_label": {
                            "title": "Content Label",
                            "type": "string",
                            "description": "Label used to identify the content option.",
                            "example": "Green header"
                          },
                          "plain_text": {
                            "title": "Plain Text",
                            "type": "string",
                            "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                          },
                          "html": {
                            "title": "Campaign HTML",
                            "type": "string",
                            "description": "The raw HTML for the campaign.",
                            "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                          }
                        }
                      }
                    },
                    "plain_text": {
                      "title": "Plain Text",
                      "type": "string",
                      "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                    },
                    "html": {
                      "title": "Campaign HTML",
                      "type": "string",
                      "description": "The raw HTML for the campaign."
                    },
                    "archive_html": {
                      "title": "Campaign Archive HTML",
                      "type": "string",
                      "description": "The Archive HTML for the campaign.",
                      "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "The HTML and plain-text content for a campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "get_content",
          "methodNameCamel": "getContent"
        }
      },
      "put": {
        "tags": [
          "campaigns"
        ],
        "summary": "Set campaign content",
        "description": "Set the content for a campaign.",
        "operationId": "putCampaignsIdContent",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Campaign Content",
                "type": "object",
                "properties": {
                  "plain_text": {
                    "title": "Plain Text",
                    "type": "string",
                    "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                  },
                  "html": {
                    "title": "Campaign HTML",
                    "type": "string",
                    "description": "The raw HTML for the campaign."
                  },
                  "url": {
                    "title": "Campaign URL",
                    "type": "string",
                    "description": "When importing a campaign, the URL where the HTML lives."
                  },
                  "template": {
                    "title": "Template Content",
                    "required": [
                      "id"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Template ID",
                        "type": "integer",
                        "description": "The id of the template to use."
                      },
                      "sections": {
                        "title": "Template Sections",
                        "type": "object",
                        "properties": {},
                        "description": "Content for the sections of the template. Each key should be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/) name from the template."
                      }
                    },
                    "description": "Use this template to generate the HTML content of the campaign"
                  },
                  "archive": {
                    "title": "Upload Archive",
                    "required": [
                      "archive_content"
                    ],
                    "type": "object",
                    "properties": {
                      "archive_content": {
                        "title": "Archive Content",
                        "type": "string",
                        "description": "The base64-encoded representation of the archive file."
                      },
                      "archive_type": {
                        "title": "Archive Type",
                        "type": "string",
                        "description": "The type of encoded file. Defaults to zip.",
                        "enum": [
                          "zip",
                          "tar.gz",
                          "tar.bz2",
                          "tar",
                          "tgz",
                          "tbz"
                        ]
                      }
                    },
                    "description": "Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/)."
                  },
                  "variate_contents": {
                    "title": "Variate Contents",
                    "type": "array",
                    "description": "Content options for [Multivariate Campaigns](https://mailchimp.com/help/about-multivariate-campaigns/). Each content option must provide HTML content and may optionally provide plain text. For campaigns not testing content, only one object should be provided.",
                    "items": {
                      "required": [
                        "content_label"
                      ],
                      "type": "object",
                      "properties": {
                        "content_label": {
                          "title": "Content Label",
                          "type": "string",
                          "description": "The label used to identify the content option."
                        },
                        "plain_text": {
                          "title": "Plain Text",
                          "type": "string",
                          "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                        },
                        "html": {
                          "title": "Campaign HTML",
                          "type": "string",
                          "description": "The raw HTML for the campaign."
                        },
                        "url": {
                          "title": "Campaign URL",
                          "type": "string",
                          "description": "When importing a campaign, the URL for the HTML."
                        },
                        "template": {
                          "title": "Template Content",
                          "required": [
                            "id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Template ID",
                              "type": "integer",
                              "description": "The id of the template to use."
                            },
                            "sections": {
                              "title": "Template Sections",
                              "type": "object",
                              "properties": {},
                              "description": "Content for the sections of the template. Each key should be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/) name from the template."
                            }
                          },
                          "description": "Use this template to generate the HTML content for the campaign."
                        },
                        "archive": {
                          "title": "Upload Archive",
                          "required": [
                            "archive_content"
                          ],
                          "type": "object",
                          "properties": {
                            "archive_content": {
                              "title": "Archive Content",
                              "type": "string",
                              "description": "The base64-encoded representation of the archive file."
                            },
                            "archive_type": {
                              "title": "Archive Type",
                              "type": "string",
                              "description": "The type of encoded file. Defaults to zip.",
                              "enum": [
                                "zip",
                                "tar.gz",
                                "tar.bz2",
                                "tar",
                                "tgz",
                                "tbz"
                              ]
                            }
                          },
                          "description": "Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/)."
                        }
                      }
                    }
                  }
                },
                "description": "The HTML and plain-text content for a campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign Content",
                  "type": "object",
                  "properties": {
                    "variate_contents": {
                      "title": "Variate Contents",
                      "type": "array",
                      "description": "Content options for multivariate campaigns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content_label": {
                            "title": "Content Label",
                            "type": "string",
                            "description": "Label used to identify the content option.",
                            "example": "Green header"
                          },
                          "plain_text": {
                            "title": "Plain Text",
                            "type": "string",
                            "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                          },
                          "html": {
                            "title": "Campaign HTML",
                            "type": "string",
                            "description": "The raw HTML for the campaign.",
                            "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                          }
                        }
                      }
                    },
                    "plain_text": {
                      "title": "Plain Text",
                      "type": "string",
                      "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                    },
                    "html": {
                      "title": "Campaign HTML",
                      "type": "string",
                      "description": "The raw HTML for the campaign."
                    },
                    "archive_html": {
                      "title": "Campaign Archive HTML",
                      "type": "string",
                      "description": "The Archive HTML for the campaign.",
                      "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "The HTML and plain-text content for a campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign Content",
                  "type": "object",
                  "properties": {
                    "variate_contents": {
                      "title": "Variate Contents",
                      "type": "array",
                      "description": "Content options for multivariate campaigns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content_label": {
                            "title": "Content Label",
                            "type": "string",
                            "description": "Label used to identify the content option.",
                            "example": "Green header"
                          },
                          "plain_text": {
                            "title": "Plain Text",
                            "type": "string",
                            "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                          },
                          "html": {
                            "title": "Campaign HTML",
                            "type": "string",
                            "description": "The raw HTML for the campaign.",
                            "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                          }
                        }
                      }
                    },
                    "plain_text": {
                      "title": "Plain Text",
                      "type": "string",
                      "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                    },
                    "html": {
                      "title": "Campaign HTML",
                      "type": "string",
                      "description": "The raw HTML for the campaign."
                    },
                    "archive_html": {
                      "title": "Campaign Archive HTML",
                      "type": "string",
                      "description": "The Archive HTML for the campaign.",
                      "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "The HTML and plain-text content for a campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "set_content",
          "methodNameCamel": "setContent"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}/feedback": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "List campaign feedback",
        "description": "Get team feedback while you're working together on a Mailchimp campaign.",
        "operationId": "getCampaignsIdFeedback",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign Reports",
                  "type": "object",
                  "properties": {
                    "feedback": {
                      "title": "Campaign Feedback",
                      "type": "array",
                      "description": "A collection of feedback items for a campaign.",
                      "items": {
                        "title": "Campaign Feedback",
                        "required": [
                          "message"
                        ],
                        "type": "object",
                        "properties": {
                          "feedback_id": {
                            "title": "Feedback ID",
                            "type": "integer",
                            "description": "The individual id for the feedback item.",
                            "readOnly": true
                          },
                          "parent_id": {
                            "title": "Parent ID",
                            "type": "integer",
                            "description": "If a reply, the id of the parent feedback item.",
                            "readOnly": true
                          },
                          "block_id": {
                            "title": "Block ID",
                            "type": "integer",
                            "description": "The block id for the editable block that the feedback addresses."
                          },
                          "message": {
                            "title": "Message",
                            "type": "string",
                            "description": "The content of the feedback."
                          },
                          "is_complete": {
                            "title": "Complete",
                            "type": "boolean",
                            "description": "The status of feedback."
                          },
                          "created_by": {
                            "title": "Created By",
                            "type": "string",
                            "description": "The login name of the user who created the feedback.",
                            "readOnly": true
                          },
                          "created_at": {
                            "title": "Created At",
                            "type": "string",
                            "description": "The date and time the feedback item was created in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "updated_at": {
                            "title": "Updated At",
                            "type": "string",
                            "description": "The date and time the feedback was last updated in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "source": {
                            "title": "Source",
                            "type": "string",
                            "description": "The source of the feedback.",
                            "readOnly": true,
                            "enum": [
                              "api",
                              "email",
                              "sms",
                              "web",
                              "ios",
                              "android"
                            ]
                          },
                          "campaign_id": {
                            "title": "Campaign ID",
                            "type": "string",
                            "description": "The unique id for the campaign.",
                            "readOnly": true
                          },
                          "_links": {
                            "title": "Links",
                            "type": "array",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "readOnly": true,
                            "items": {
                              "title": "Resource Link",
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "title": "Rel",
                                  "type": "string",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "title": "Href",
                                  "type": "string",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "title": "Method",
                                  "type": "string",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "readOnly": true,
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ]
                                },
                                "targetSchema": {
                                  "title": "Target Schema",
                                  "type": "string",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "title": "Schema",
                                  "type": "string",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              },
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                            }
                          }
                        },
                        "description": "A specific feedback message from a specific campaign."
                      }
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "total_items": {
                      "title": "Item Count",
                      "type": "integer",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of the comment feedback for a specific campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign Reports",
                  "type": "object",
                  "properties": {
                    "feedback": {
                      "title": "Campaign Feedback",
                      "type": "array",
                      "description": "A collection of feedback items for a campaign.",
                      "items": {
                        "title": "Campaign Feedback",
                        "required": [
                          "message"
                        ],
                        "type": "object",
                        "properties": {
                          "feedback_id": {
                            "title": "Feedback ID",
                            "type": "integer",
                            "description": "The individual id for the feedback item.",
                            "readOnly": true
                          },
                          "parent_id": {
                            "title": "Parent ID",
                            "type": "integer",
                            "description": "If a reply, the id of the parent feedback item.",
                            "readOnly": true
                          },
                          "block_id": {
                            "title": "Block ID",
                            "type": "integer",
                            "description": "The block id for the editable block that the feedback addresses."
                          },
                          "message": {
                            "title": "Message",
                            "type": "string",
                            "description": "The content of the feedback."
                          },
                          "is_complete": {
                            "title": "Complete",
                            "type": "boolean",
                            "description": "The status of feedback."
                          },
                          "created_by": {
                            "title": "Created By",
                            "type": "string",
                            "description": "The login name of the user who created the feedback.",
                            "readOnly": true
                          },
                          "created_at": {
                            "title": "Created At",
                            "type": "string",
                            "description": "The date and time the feedback item was created in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "updated_at": {
                            "title": "Updated At",
                            "type": "string",
                            "description": "The date and time the feedback was last updated in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "source": {
                            "title": "Source",
                            "type": "string",
                            "description": "The source of the feedback.",
                            "readOnly": true,
                            "enum": [
                              "api",
                              "email",
                              "sms",
                              "web",
                              "ios",
                              "android"
                            ]
                          },
                          "campaign_id": {
                            "title": "Campaign ID",
                            "type": "string",
                            "description": "The unique id for the campaign.",
                            "readOnly": true
                          },
                          "_links": {
                            "title": "Links",
                            "type": "array",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "readOnly": true,
                            "items": {
                              "title": "Resource Link",
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "title": "Rel",
                                  "type": "string",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "title": "Href",
                                  "type": "string",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "title": "Method",
                                  "type": "string",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "readOnly": true,
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ]
                                },
                                "targetSchema": {
                                  "title": "Target Schema",
                                  "type": "string",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "title": "Schema",
                                  "type": "string",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              },
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                            }
                          }
                        },
                        "description": "A specific feedback message from a specific campaign."
                      }
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "total_items": {
                      "title": "Item Count",
                      "type": "integer",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A summary of the comment feedback for a specific campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "get_feedback",
          "methodNameCamel": "getFeedback"
        }
      },
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Add campaign feedback",
        "description": "Add feedback on a specific campaign.",
        "operationId": "postCampaignsIdFeedback",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Campaign Feedback",
                "required": [
                  "message"
                ],
                "type": "object",
                "properties": {
                  "block_id": {
                    "title": "Block ID",
                    "type": "integer",
                    "description": "The block id for the editable block that the feedback addresses."
                  },
                  "message": {
                    "title": "Message",
                    "type": "string",
                    "description": "The content of the feedback."
                  },
                  "is_complete": {
                    "title": "Complete",
                    "type": "boolean",
                    "description": "The status of feedback."
                  }
                },
                "description": "A specific feedback message from a specific campaign."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign Feedback",
                  "type": "object",
                  "properties": {
                    "feedback_id": {
                      "title": "Feedback ID",
                      "type": "integer",
                      "description": "The individual id for the feedback item.",
                      "readOnly": true
                    },
                    "parent_id": {
                      "title": "Parent ID",
                      "type": "integer",
                      "description": "If a reply, the id of the parent feedback item.",
                      "readOnly": true
                    },
                    "block_id": {
                      "title": "Block ID",
                      "type": "integer",
                      "description": "The block id for the editable block that the feedback addresses."
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "description": "The content of the feedback."
                    },
                    "is_complete": {
                      "title": "Complete",
                      "type": "boolean",
                      "description": "The status of feedback."
                    },
                    "created_by": {
                      "title": "Created By",
                      "type": "string",
                      "description": "The login name of the user who created the feedback.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Created At",
                      "type": "string",
                      "description": "The date and time the feedback item was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "description": "The date and time the feedback was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "source": {
                      "title": "Source",
                      "type": "string",
                      "description": "The source of the feedback.",
                      "readOnly": true,
                      "enum": [
                        "api",
                        "email",
                        "sms",
                        "web",
                        "ios",
                        "android"
                      ]
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A specific feedback message from a specific campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign Feedback",
                  "type": "object",
                  "properties": {
                    "feedback_id": {
                      "title": "Feedback ID",
                      "type": "integer",
                      "description": "The individual id for the feedback item.",
                      "readOnly": true
                    },
                    "parent_id": {
                      "title": "Parent ID",
                      "type": "integer",
                      "description": "If a reply, the id of the parent feedback item.",
                      "readOnly": true
                    },
                    "block_id": {
                      "title": "Block ID",
                      "type": "integer",
                      "description": "The block id for the editable block that the feedback addresses."
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "description": "The content of the feedback."
                    },
                    "is_complete": {
                      "title": "Complete",
                      "type": "boolean",
                      "description": "The status of feedback."
                    },
                    "created_by": {
                      "title": "Created By",
                      "type": "string",
                      "description": "The login name of the user who created the feedback.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Created At",
                      "type": "string",
                      "description": "The date and time the feedback item was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "description": "The date and time the feedback was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "source": {
                      "title": "Source",
                      "type": "string",
                      "description": "The source of the feedback.",
                      "readOnly": true,
                      "enum": [
                        "api",
                        "email",
                        "sms",
                        "web",
                        "ios",
                        "android"
                      ]
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A specific feedback message from a specific campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "add_feedback",
          "methodNameCamel": "addFeedback"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}/feedback/{feedback_id}": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Get campaign feedback message",
        "description": "Get a specific feedback message from a campaign.",
        "operationId": "getCampaignsIdFeedbackId",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          },
          {
            "name": "feedback_id",
            "in": "path",
            "description": "The unique id for the feedback message.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Feedback ID"
            },
            "x-title": "Feedback ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign Feedback",
                  "type": "object",
                  "properties": {
                    "feedback_id": {
                      "title": "Feedback ID",
                      "type": "integer",
                      "description": "The individual id for the feedback item.",
                      "readOnly": true
                    },
                    "parent_id": {
                      "title": "Parent ID",
                      "type": "integer",
                      "description": "If a reply, the id of the parent feedback item.",
                      "readOnly": true
                    },
                    "block_id": {
                      "title": "Block ID",
                      "type": "integer",
                      "description": "The block id for the editable block that the feedback addresses."
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "description": "The content of the feedback."
                    },
                    "is_complete": {
                      "title": "Complete",
                      "type": "boolean",
                      "description": "The status of feedback."
                    },
                    "created_by": {
                      "title": "Created By",
                      "type": "string",
                      "description": "The login name of the user who created the feedback.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Created At",
                      "type": "string",
                      "description": "The date and time the feedback item was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "description": "The date and time the feedback was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "source": {
                      "title": "Source",
                      "type": "string",
                      "description": "The source of the feedback.",
                      "readOnly": true,
                      "enum": [
                        "api",
                        "email",
                        "sms",
                        "web",
                        "ios",
                        "android"
                      ]
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A specific feedback message from a specific campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign Feedback",
                  "type": "object",
                  "properties": {
                    "feedback_id": {
                      "title": "Feedback ID",
                      "type": "integer",
                      "description": "The individual id for the feedback item.",
                      "readOnly": true
                    },
                    "parent_id": {
                      "title": "Parent ID",
                      "type": "integer",
                      "description": "If a reply, the id of the parent feedback item.",
                      "readOnly": true
                    },
                    "block_id": {
                      "title": "Block ID",
                      "type": "integer",
                      "description": "The block id for the editable block that the feedback addresses."
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "description": "The content of the feedback."
                    },
                    "is_complete": {
                      "title": "Complete",
                      "type": "boolean",
                      "description": "The status of feedback."
                    },
                    "created_by": {
                      "title": "Created By",
                      "type": "string",
                      "description": "The login name of the user who created the feedback.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Created At",
                      "type": "string",
                      "description": "The date and time the feedback item was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "description": "The date and time the feedback was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "source": {
                      "title": "Source",
                      "type": "string",
                      "description": "The source of the feedback.",
                      "readOnly": true,
                      "enum": [
                        "api",
                        "email",
                        "sms",
                        "web",
                        "ios",
                        "android"
                      ]
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A specific feedback message from a specific campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "get_feedback_message",
          "methodNameCamel": "getFeedbackMessage"
        }
      },
      "delete": {
        "tags": [
          "campaigns"
        ],
        "summary": "Delete campaign feedback message",
        "description": "Remove a specific feedback message for a campaign.",
        "operationId": "deleteCampaignsIdFeedbackId",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          },
          {
            "name": "feedback_id",
            "in": "path",
            "description": "The unique id for the feedback message.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Feedback ID"
            },
            "x-title": "Feedback ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "delete_feedback_message",
          "methodNameCamel": "deleteFeedbackMessage"
        }
      },
      "patch": {
        "tags": [
          "campaigns"
        ],
        "summary": "Update campaign feedback message",
        "description": "Update a specific feedback message for a campaign.",
        "operationId": "patchCampaignsIdFeedbackId",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          },
          {
            "name": "feedback_id",
            "in": "path",
            "description": "The unique id for the feedback message.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Feedback ID"
            },
            "x-title": "Feedback ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Campaign Feedback",
                "type": "object",
                "properties": {
                  "block_id": {
                    "title": "Block ID",
                    "type": "integer",
                    "description": "The block id for the editable block that the feedback addresses."
                  },
                  "message": {
                    "title": "Message",
                    "type": "string",
                    "description": "The content of the feedback."
                  },
                  "is_complete": {
                    "title": "Complete",
                    "type": "boolean",
                    "description": "The status of feedback."
                  }
                },
                "description": "A specific feedback message from a specific campaign."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Campaign Feedback",
                  "type": "object",
                  "properties": {
                    "feedback_id": {
                      "title": "Feedback ID",
                      "type": "integer",
                      "description": "The individual id for the feedback item.",
                      "readOnly": true
                    },
                    "parent_id": {
                      "title": "Parent ID",
                      "type": "integer",
                      "description": "If a reply, the id of the parent feedback item.",
                      "readOnly": true
                    },
                    "block_id": {
                      "title": "Block ID",
                      "type": "integer",
                      "description": "The block id for the editable block that the feedback addresses."
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "description": "The content of the feedback."
                    },
                    "is_complete": {
                      "title": "Complete",
                      "type": "boolean",
                      "description": "The status of feedback."
                    },
                    "created_by": {
                      "title": "Created By",
                      "type": "string",
                      "description": "The login name of the user who created the feedback.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Created At",
                      "type": "string",
                      "description": "The date and time the feedback item was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "description": "The date and time the feedback was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "source": {
                      "title": "Source",
                      "type": "string",
                      "description": "The source of the feedback.",
                      "readOnly": true,
                      "enum": [
                        "api",
                        "email",
                        "sms",
                        "web",
                        "ios",
                        "android"
                      ]
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A specific feedback message from a specific campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Campaign Feedback",
                  "type": "object",
                  "properties": {
                    "feedback_id": {
                      "title": "Feedback ID",
                      "type": "integer",
                      "description": "The individual id for the feedback item.",
                      "readOnly": true
                    },
                    "parent_id": {
                      "title": "Parent ID",
                      "type": "integer",
                      "description": "If a reply, the id of the parent feedback item.",
                      "readOnly": true
                    },
                    "block_id": {
                      "title": "Block ID",
                      "type": "integer",
                      "description": "The block id for the editable block that the feedback addresses."
                    },
                    "message": {
                      "title": "Message",
                      "type": "string",
                      "description": "The content of the feedback."
                    },
                    "is_complete": {
                      "title": "Complete",
                      "type": "boolean",
                      "description": "The status of feedback."
                    },
                    "created_by": {
                      "title": "Created By",
                      "type": "string",
                      "description": "The login name of the user who created the feedback.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Created At",
                      "type": "string",
                      "description": "The date and time the feedback item was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "description": "The date and time the feedback was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "source": {
                      "title": "Source",
                      "type": "string",
                      "description": "The source of the feedback.",
                      "readOnly": true,
                      "enum": [
                        "api",
                        "email",
                        "sms",
                        "web",
                        "ios",
                        "android"
                      ]
                    },
                    "campaign_id": {
                      "title": "Campaign ID",
                      "type": "string",
                      "description": "The unique id for the campaign.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A specific feedback message from a specific campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "update_feedback_message",
          "methodNameCamel": "updateFeedbackMessage"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/campaigns/{campaign_id}/send-checklist": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Get campaign send checklist",
        "description": "Review the send checklist for a campaign, and resolve any issues before sending.",
        "operationId": "getCampaignsIdSendChecklist",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the campaign.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Campaign ID"
            },
            "x-title": "Campaign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Send Checklist",
                  "type": "object",
                  "properties": {
                    "is_ready": {
                      "title": "Ready?",
                      "type": "boolean",
                      "description": "Whether the campaign is ready to send."
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "description": "A list of feedback items to review before sending your campaign.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Type",
                            "type": "string",
                            "description": "The item type.",
                            "enum": [
                              "success",
                              "warning",
                              "error"
                            ]
                          },
                          "id": {
                            "title": "ID",
                            "type": "integer",
                            "description": "The ID for the specific item."
                          },
                          "heading": {
                            "title": "Heading",
                            "type": "string",
                            "description": "The heading for the specific item."
                          },
                          "details": {
                            "title": "Details",
                            "type": "string",
                            "description": "Details about the specific feedback item."
                          }
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "The send checklist for the campaign."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Send Checklist",
                  "type": "object",
                  "properties": {
                    "is_ready": {
                      "title": "Ready?",
                      "type": "boolean",
                      "description": "Whether the campaign is ready to send."
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "description": "A list of feedback items to review before sending your campaign.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Type",
                            "type": "string",
                            "description": "The item type.",
                            "enum": [
                              "success",
                              "warning",
                              "error"
                            ]
                          },
                          "id": {
                            "title": "ID",
                            "type": "integer",
                            "description": "The ID for the specific item."
                          },
                          "heading": {
                            "title": "Heading",
                            "type": "string",
                            "description": "The heading for the specific item."
                          },
                          "details": {
                            "title": "Details",
                            "type": "string",
                            "description": "Details about the specific feedback item."
                          }
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "The send checklist for the campaign."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "get_send_checklist",
          "methodNameCamel": "getSendChecklist"
        }
      }
    },
    "/connected-sites": {
      "get": {
        "tags": [
          "connectedSites"
        ],
        "summary": "List connected sites",
        "description": "Get all connected sites in an account.",
        "operationId": "getConnectedSites",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records to return. Default value is 10. Maximum value is 1000",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "default": 10,
              "x-title": "Count"
            },
            "x-title": "Count"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.",
            "schema": {
              "type": "integer",
              "default": 0,
              "x-title": "Offset"
            },
            "x-title": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Connected Sites",
                  "type": "object",
                  "properties": {
                    "sites": {
                      "title": "Connected Sites",
                      "type": "array",
                      "description": "An array of objects, each representing a connected site.",
                      "items": {
                        "title": "Connected Site",
                        "type": "object",
                        "properties": {
                          "foreign_id": {
                            "title": "Connected Site Foreign ID",
                            "type": "string",
                            "description": "The unique identifier for the site.",
                            "readOnly": true,
                            "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                          },
                          "store_id": {
                            "title": "Store ID",
                            "type": "string",
                            "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                            "readOnly": true,
                            "example": "MC001"
                          },
                          "platform": {
                            "title": "Connected Site Platform",
                            "type": "string",
                            "description": "The platform of the connected site.",
                            "readOnly": true,
                            "example": "shopify, magento, bigcommerce, woocommerce"
                          },
                          "domain": {
                            "title": "Domain",
                            "type": "string",
                            "description": "The connected site domain.",
                            "readOnly": true,
                            "example": "example.myshopify.com"
                          },
                          "site_script": {
                            "title": "Script",
                            "type": "object",
                            "properties": {
                              "url": {
                                "title": "Script URL",
                                "type": "string",
                                "description": "The URL used for any integrations that offer built-in support for connected sites.",
                                "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                              },
                              "fragment": {
                                "title": "Script Fragment",
                                "type": "string",
                                "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                                "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                              }
                            },
                            "description": "The script used to connect your site with Mailchimp.",
                            "readOnly": true
                          },
                          "created_at": {
                            "title": "Creation Time",
                            "type": "string",
                            "description": "The date and time the connected site was created in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2015-07-15T19:28:00.000Z"
                          },
                          "updated_at": {
                            "title": "Update Time",
                            "type": "string",
                            "description": "The date and time the connected site was last updated in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2015-07-15T19:35:00.000Z"
                          },
                          "_links": {
                            "title": "Links",
                            "type": "array",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "readOnly": true,
                            "items": {
                              "title": "Resource Link",
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "title": "Rel",
                                  "type": "string",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "title": "Href",
                                  "type": "string",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "title": "Method",
                                  "type": "string",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "readOnly": true,
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ]
                                },
                                "targetSchema": {
                                  "title": "Target Schema",
                                  "type": "string",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "title": "Schema",
                                  "type": "string",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              },
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                            }
                          }
                        },
                        "description": "Information about a specific connected site."
                      }
                    },
                    "total_items": {
                      "title": "Item Count",
                      "type": "integer",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A collection of connected sites in the account."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Connected Sites",
                  "type": "object",
                  "properties": {
                    "sites": {
                      "title": "Connected Sites",
                      "type": "array",
                      "description": "An array of objects, each representing a connected site.",
                      "items": {
                        "title": "Connected Site",
                        "type": "object",
                        "properties": {
                          "foreign_id": {
                            "title": "Connected Site Foreign ID",
                            "type": "string",
                            "description": "The unique identifier for the site.",
                            "readOnly": true,
                            "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                          },
                          "store_id": {
                            "title": "Store ID",
                            "type": "string",
                            "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                            "readOnly": true,
                            "example": "MC001"
                          },
                          "platform": {
                            "title": "Connected Site Platform",
                            "type": "string",
                            "description": "The platform of the connected site.",
                            "readOnly": true,
                            "example": "shopify, magento, bigcommerce, woocommerce"
                          },
                          "domain": {
                            "title": "Domain",
                            "type": "string",
                            "description": "The connected site domain.",
                            "readOnly": true,
                            "example": "example.myshopify.com"
                          },
                          "site_script": {
                            "title": "Script",
                            "type": "object",
                            "properties": {
                              "url": {
                                "title": "Script URL",
                                "type": "string",
                                "description": "The URL used for any integrations that offer built-in support for connected sites.",
                                "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                              },
                              "fragment": {
                                "title": "Script Fragment",
                                "type": "string",
                                "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                                "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                              }
                            },
                            "description": "The script used to connect your site with Mailchimp.",
                            "readOnly": true
                          },
                          "created_at": {
                            "title": "Creation Time",
                            "type": "string",
                            "description": "The date and time the connected site was created in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2015-07-15T19:28:00.000Z"
                          },
                          "updated_at": {
                            "title": "Update Time",
                            "type": "string",
                            "description": "The date and time the connected site was last updated in ISO 8601 format.",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2015-07-15T19:35:00.000Z"
                          },
                          "_links": {
                            "title": "Links",
                            "type": "array",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "readOnly": true,
                            "items": {
                              "title": "Resource Link",
                              "type": "object",
                              "properties": {
                                "rel": {
                                  "title": "Rel",
                                  "type": "string",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "title": "Href",
                                  "type": "string",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "title": "Method",
                                  "type": "string",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "readOnly": true,
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ]
                                },
                                "targetSchema": {
                                  "title": "Target Schema",
                                  "type": "string",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "title": "Schema",
                                  "type": "string",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              },
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                            }
                          }
                        },
                        "description": "Information about a specific connected site."
                      }
                    },
                    "total_items": {
                      "title": "Item Count",
                      "type": "integer",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "A collection of connected sites in the account."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "list",
          "methodNameCamel": "list"
        }
      },
      "post": {
        "tags": [
          "connectedSites"
        ],
        "summary": "Add connected site",
        "description": "Create a new Mailchimp connected site.",
        "operationId": "postConnectedSites",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Connected Site",
                "required": [
                  "domain",
                  "foreign_id"
                ],
                "type": "object",
                "properties": {
                  "foreign_id": {
                    "title": "Connected Site Foreign ID",
                    "type": "string",
                    "description": "The unique identifier for the site.",
                    "example": "MC001"
                  },
                  "domain": {
                    "title": "Domain",
                    "type": "string",
                    "description": "The connected site domain.",
                    "example": "example.com"
                  }
                },
                "description": "Information about a specific connected site."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Connected Site",
                  "type": "object",
                  "properties": {
                    "foreign_id": {
                      "title": "Connected Site Foreign ID",
                      "type": "string",
                      "description": "The unique identifier for the site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "store_id": {
                      "title": "Store ID",
                      "type": "string",
                      "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                      "readOnly": true,
                      "example": "MC001"
                    },
                    "platform": {
                      "title": "Connected Site Platform",
                      "type": "string",
                      "description": "The platform of the connected site.",
                      "readOnly": true,
                      "example": "shopify, magento, bigcommerce, woocommerce"
                    },
                    "domain": {
                      "title": "Domain",
                      "type": "string",
                      "description": "The connected site domain.",
                      "readOnly": true,
                      "example": "example.myshopify.com"
                    },
                    "site_script": {
                      "title": "Script",
                      "type": "object",
                      "properties": {
                        "url": {
                          "title": "Script URL",
                          "type": "string",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "title": "Script Fragment",
                          "type": "string",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      },
                      "description": "The script used to connect your site with Mailchimp.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Creation Time",
                      "type": "string",
                      "description": "The date and time the connected site was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:28:00.000Z"
                    },
                    "updated_at": {
                      "title": "Update Time",
                      "type": "string",
                      "description": "The date and time the connected site was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:35:00.000Z"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "Information about a specific connected site."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Connected Site",
                  "type": "object",
                  "properties": {
                    "foreign_id": {
                      "title": "Connected Site Foreign ID",
                      "type": "string",
                      "description": "The unique identifier for the site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "store_id": {
                      "title": "Store ID",
                      "type": "string",
                      "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                      "readOnly": true,
                      "example": "MC001"
                    },
                    "platform": {
                      "title": "Connected Site Platform",
                      "type": "string",
                      "description": "The platform of the connected site.",
                      "readOnly": true,
                      "example": "shopify, magento, bigcommerce, woocommerce"
                    },
                    "domain": {
                      "title": "Domain",
                      "type": "string",
                      "description": "The connected site domain.",
                      "readOnly": true,
                      "example": "example.myshopify.com"
                    },
                    "site_script": {
                      "title": "Script",
                      "type": "object",
                      "properties": {
                        "url": {
                          "title": "Script URL",
                          "type": "string",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "title": "Script Fragment",
                          "type": "string",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      },
                      "description": "The script used to connect your site with Mailchimp.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Creation Time",
                      "type": "string",
                      "description": "The date and time the connected site was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:28:00.000Z"
                    },
                    "updated_at": {
                      "title": "Update Time",
                      "type": "string",
                      "description": "The date and time the connected site was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:35:00.000Z"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "Information about a specific connected site."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "create",
          "methodNameCamel": "create"
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/connected-sites/{connected_site_id}": {
      "get": {
        "tags": [
          "connectedSites"
        ],
        "summary": "Get connected site",
        "description": "Get information about a specific connected site.",
        "operationId": "getConnectedSitesId",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Fields"
            },
            "x-title": "Fields"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-title": "Exclude Fields"
            },
            "x-title": "Exclude Fields"
          },
          {
            "name": "connected_site_id",
            "in": "path",
            "description": "The unique identifier for the site.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Connected Site Foreign ID"
            },
            "x-title": "Connected Site Foreign ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Connected Site",
                  "type": "object",
                  "properties": {
                    "foreign_id": {
                      "title": "Connected Site Foreign ID",
                      "type": "string",
                      "description": "The unique identifier for the site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "store_id": {
                      "title": "Store ID",
                      "type": "string",
                      "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                      "readOnly": true,
                      "example": "MC001"
                    },
                    "platform": {
                      "title": "Connected Site Platform",
                      "type": "string",
                      "description": "The platform of the connected site.",
                      "readOnly": true,
                      "example": "shopify, magento, bigcommerce, woocommerce"
                    },
                    "domain": {
                      "title": "Domain",
                      "type": "string",
                      "description": "The connected site domain.",
                      "readOnly": true,
                      "example": "example.myshopify.com"
                    },
                    "site_script": {
                      "title": "Script",
                      "type": "object",
                      "properties": {
                        "url": {
                          "title": "Script URL",
                          "type": "string",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "title": "Script Fragment",
                          "type": "string",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      },
                      "description": "The script used to connect your site with Mailchimp.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Creation Time",
                      "type": "string",
                      "description": "The date and time the connected site was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:28:00.000Z"
                    },
                    "updated_at": {
                      "title": "Update Time",
                      "type": "string",
                      "description": "The date and time the connected site was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:35:00.000Z"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "Information about a specific connected site."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Connected Site",
                  "type": "object",
                  "properties": {
                    "foreign_id": {
                      "title": "Connected Site Foreign ID",
                      "type": "string",
                      "description": "The unique identifier for the site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "store_id": {
                      "title": "Store ID",
                      "type": "string",
                      "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                      "readOnly": true,
                      "example": "MC001"
                    },
                    "platform": {
                      "title": "Connected Site Platform",
                      "type": "string",
                      "description": "The platform of the connected site.",
                      "readOnly": true,
                      "example": "shopify, magento, bigcommerce, woocommerce"
                    },
                    "domain": {
                      "title": "Domain",
                      "type": "string",
                      "description": "The connected site domain.",
                      "readOnly": true,
                      "example": "example.myshopify.com"
                    },
                    "site_script": {
                      "title": "Script",
                      "type": "object",
                      "properties": {
                        "url": {
                          "title": "Script URL",
                          "type": "string",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "title": "Script Fragment",
                          "type": "string",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      },
                      "description": "The script used to connect your site with Mailchimp.",
                      "readOnly": true
                    },
                    "created_at": {
                      "title": "Creation Time",
                      "type": "string",
                      "description": "The date and time the connected site was created in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:28:00.000Z"
                    },
                    "updated_at": {
                      "title": "Update Time",
                      "type": "string",
                      "description": "The date and time the connected site was last updated in ISO 8601 format.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2015-07-15T19:35:00.000Z"
                    },
                    "_links": {
                      "title": "Links",
                      "type": "array",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "readOnly": true,
                      "items": {
                        "title": "Resource Link",
                        "type": "object",
                        "properties": {
                          "rel": {
                            "title": "Rel",
                            "type": "string",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "title": "Href",
                            "type": "string",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "title": "Method",
                            "type": "string",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "readOnly": true,
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ]
                          },
                          "targetSchema": {
                            "title": "Target Schema",
                            "type": "string",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "title": "Schema",
                            "type": "string",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        },
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed."
                      }
                    }
                  },
                  "description": "Information about a specific connected site."
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "get",
          "methodNameCamel": "get"
        }
      },
      "delete": {
        "tags": [
          "connectedSites"
        ],
        "summary": "Delete connected site",
        "description": "Remove a connected site from your Mailchimp account.",
        "operationId": "deleteConnectedSitesId",
        "parameters": [
          {
            "name": "connected_site_id",
            "in": "path",
            "description": "The unique identifier for the site.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Connected Site Foreign ID"
            },
            "x-title": "Connected Site Foreign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-custom-config": {
          "methodNameSnake": "remove",
          "methodNameCamel": "remove"
        }
      }
    },
    "/connected-sites/{connected_site_id}/actions/verify-script-installation": {
      "post": {
        "tags": [
          "connectedSites"
        ],
        "summary": "Verify connected site script",
        "description": "Verify that the connected sites script has been installed, either via the script URL or fragment.",
        "operationId": "postConnectedSitesIdActionsVerifyScriptInstallation",
        "parameters": [
          {
            "name": "connected_site_id",
            "in": "path",
            "description": "The unique identifier for the site.",
            "required": true,
            "schema": {
              "type": "string",
              "x-title": "Connected Site Foreign ID"
            },
            "x-title": "Connected Site Foreign ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {}
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              },
              "application/problem+json": {
                "schema": {
                  "title": "Problem Detail Document",
                  "required": [
                    "detail",
                    "instance",
                    "status",
                    "title",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Problem Type",
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "title": "Error Title",
                      "type": "string",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "title": "HTTP Status Code",
                      "type": "integer",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "title": "Error Message",
                      "type": "string",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "title": "Instance ID",
                      "type": "string",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  },
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-pro-required": true,
        "x-custom-config": {
          "methodNameSnake": "verify_script_installation",
          "methodNameCamel": "verifyScriptInstallation"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}